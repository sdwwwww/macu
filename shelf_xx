LF_SJIS

global proc shelf_testxx () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 3
        -enable 1
        -width 6
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -image1 "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "モーション パスにアタッチ オプション" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "attachPathDialogItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "motionPath.png" 
        -image1 "motionPath.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "AttachToPathOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create ghost options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "createGhostOptionItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "ghost.png" 
        -image1 "ghost.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "CreateGhostOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "All object(s) to be unghosted." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Unghost All" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "ghostOff.png" 
        -image1 "ghostOff.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "doGhost \"2\" { \"0\", \"0\", \"-1\", \"0\", \"0\", \"0\", \"\", \"0\", \"0\"}" 
        -sourceType "mel" 
        -doubleClickCommand "unGhostAll" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create motion trail options" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "createMotionTrailOptionItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "motionTrail.png" 
        -image1 "motionTrail.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "CreateMotionTrailOptions;\nfor($panelName in `getPanel -typ modelPanel`){\nmodelEditor -e -motionTrails 1 $panelName;\n}" 
        -sourceType "mel" 
        -doubleClickCommand "if( `objExists motionTrail1Handle` ) {\nselect motionTrail1Handle;\ndelete;\n}\n/*-\nglobal proc motionTrailHandleShape_timeGo(){//未完成\nstring $ss[]=`ls-sl`;\nif(`size ($ss)`!=0){\nstring $bb=substituteAllString($ss[0],\"motionTrail1Handle.point[\",\"\");\n//print $bb;\nstring $cc=substituteAllString($bb,\"]\",\"\");\n//print $cc;\nint $abc=$cc;\n//print $abc;\nGoToMinFrame;\nfor($abcd = 0; $abcd <$abc;$abcd++){\nNextKey;\n}\n}//motionTrailHandleShape_timeGo;" 
        -commandRepeatable 1
        -flat 1
        -mi "keyframeReduction X" ( "import keyframeReduction.ui; keyframeReduction.ui.show()" )
        -mip 0
        -mi "----------" ( "" )
        -mi "key 減らす YAMATANI.py" ( "# -*- coding: cp932 -*-　　　　#YAMATANI.py 大幅清理カーブ(補助用)\nimport pymel.core as pm\ndef jianhua():\n\t# FCurveノード名を取得\n\tlfcv = pm.keyframe(q=1,n=1)\n\tfor fcv in lfcv:\n\t\tld = [] # 消去するキーのインデックスリスト\n\t\t# FCurveの時間、値のリスト取得\n\t\tlv = pm.keyframe(fcv,q=1,tc=1,vc=1)\n\t\t# 最初と最後のキー以外を調査\n\t\tfor i in range(1,len(lv)-1):\n\t\t\t# キーが上り坂なら消すリストにインデックスを追加\n\t\t\tif lv[i-1][1] < lv[i][1] and lv[i][1] < lv[i+1][1]:\n\t\t\t\tld.append([i])\n\t\t\t\t# キーが下り坂なら消すリストにインデックスを追加\n\t\t\telif lv[i-1][1] > lv[i][1] and lv[i][1] > lv[i+1][1]:\n\t\t\t\tld.append([i])\n\t\tif ld:\n\t\t\t# インデックスを使ってキーを消去\n\t\t\tpm.cutKey(fcv,index=ld)\n\t\t\t# 一度すべてのキータンジェントをAutoにする\n\t\t\t###pm.keyTangent(fcv,itt=\"auto\",ott=\"auto\")\n\t\t\t# 最初のキータンジェントをSplineにする\n\t\t\t###pm.keyTangent(fcv,t=lv[0][0],itt=\"spline\",ott=\"spline\")\n\t\t\t# 最後のキータンジェントをSplineにする\n\t\t\t###pm.keyTangent(fcv,t=lv[-1][0],itt=\"spline\",ott=\"spline\")\njianhua()" )
        -mip 2
        -mi "      |_ +lot A>B_後台mel" ( "global proc addtarget(){\nglobal string $B[];\nstring $selemoto[]=`ls-sl`;\nQA_pickOrigin;\nGetFormLocator2;outlinecolor(110);\nstring $selesaki[]=`ls-sl`;\nQA_pickTarget;\nAB_keyCP;\nselect $B;\n}addtarget;" )
        -mi "           |_B>A" ( "BA_keyCP;" )
        -mi "  |_B     //キー削減フィルタ KeyReducerFilter" ( "global proc jianhuaFilter(){\n$keyjshu=`keyframe -an keys -q -kc`;\nfilterCurve -f keyReducer -selectedKeys -precisionMode 1 -precision 1;\n$keyjshu2=`keyframe -an keys -q -kc`;\nprint($keyjshu+\"個>>>\"+$keyjshu2+\"個\"+\"\\n\");\n}jianhuaFilter;\n" )
        -mi "  |_C   　//カーブの簡略化 SimplifyCurve" ( "global proc jianhua(float $shu){\nglobal float $FrameA;\nglobal float $FrameB;\nglobal string $selcurvesb[];son;\n$keyjshu=`keyframe -an keys -q -kc`;\nfilterCurve -f simplify -startTime $FrameA -endTime $FrameB -timeTolerance $shu $selcurvesb;\n$keyjshu2=`keyframe -an keys -q -kc`;\nprint($keyjshu+\"個>>>\"+$keyjshu2+\"個\"+\"\\n\");\n}jianhua(0.01);" )
        -mi "        |_0.02" ( "jianhua(0.02);" )
        -mi "        |_0.03" ( "jianhua(0.03);" )
        -mi "        |_0.035" ( "jianhua(0.035);" )
        -mi "        |_0.05" ( "jianhua(0.05);" )
        -mi "        |_0.07" ( "jianhua(0.07);" )
        -mi "AI_____(0.01)    sel CV cuver_go" ( "global proc simplifyCurvesWithReductionRate(float $tolerance){\nint $keyjshuAA;int $keyjshuBB;\n    string $curves[] = `keyframe -q -name -sl`;\n    if(size($curves) == 0) {\n       print \"selllllll curver\";\n    }else{$keyjshuAA=`keyframe -an keys -q -kc`;\n    }\n\n    for($curve in $curves) {\n        int $beforeCount = `keyframe -q -keyframeCount $curve`;\n        filterCurve -f \"simplify\" -tolerance $tolerance $curve;// 簡略化処理\n\n        int $afterCount = `keyframe -q -keyframeCount $curve`;\n        float $reduction = ($beforeCount > 0) ? ((float($beforeCount - $afterCount) / $beforeCount) * 100.0) : 0.0;\n\n        print (\"\\n\\n__Curve: \" + $curve + \"\\n\");\n        print (\"__Before: \" + $beforeCount + \" keys\\n\");\n        print (\"__After : \" + $afterCount + \" keys\\n\");\n        print($beforeCount+\"個>>>\"+$afterCount+\"個\"+\"\\n\\n\");///\n    }\n}simplifyCurvesWithReductionRate(0.01);\n// 使用例：許容誤差0.05で簡略化し、削減率を表示" )
        -mi "   |_(0.02)" ( "simplifyCurvesWithReductionRate(0.02);" )
        -mi "   |_(0.03)" ( "simplifyCurvesWithReductionRate(0.03);" )
        -mi "   |_(0.05)" ( "simplifyCurvesWithReductionRate(0.05);" )
        -mi "----------" ( "" )
        -mi "///MoxKeyReductor" ( "import MoxKeyReductor;MoxKeyReductor.main()\n" )
        -mip 17
        -mi "----------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 3
        -enable 1
        -width 6
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -image1 "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "motionworkA" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "motionworkA" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Snap" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "animateSnapshot.png" 
        -image1 "animateSnapshot.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "AnimationSnapshotOptions" 
        -sourceType "mel" 
        -doubleClickCommand "global proc onetimeworkON(){\nglobal int $onet_st;\nglobal int $onet_et;\n$onet_st=`playbackOptions -q -minTime`;\n$onet_et=`playbackOptions -q -maxTime`;\nint $onet_nt=`currentTime -q`;\nplaybackOptions -min $onet_nt -max ($onet_nt+1);\n}\n//////\nglobal proc onetimeworkOFF(){\nglobal int $onet_st;\nglobal int $onet_et;\nplaybackOptions -min $onet_st -max $onet_et;\n}inViewMessage -smg \"qi dong! a\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 90;\n\n\n\n//////\nglobal proc rataterigbianmove2(float $juli,int $xyzA){//1>xyz 2>yxz 3zxy\nprogressWindow -t \"処理中.............\" -st \".*.*.*.*.*.*....\";///\nint $a =$juli;\nint $b =($a*-1);\nglobal string $OrigbianT[];\n$OrigbianT=`ls-sl`;\nif(size(`ls-sl`)!=0){\nfor($i = 0; $i<`size($OrigbianT)`;$i++){\nselect $OrigbianT[$i];\nGetFormLocator2;rename \"T\";\n   if($xyzA==1){move -r -os -wd ($juli*1) 0 0 ;}//X -方向\nelse if($xyzA==2){move -r -os -wd 0 ($juli*1) 0 ;}//Y -方向\nelse if($xyzA==3){move -r -os -wd 0 0 ($juli*1) ;}//Z -方向\nelse if($xyzA==-1){move -r -os -wd ($juli*-1) 0 0 ;}//X +方向\nelse if($xyzA==-2){move -r -os -wd 0 ($juli*-1) 0 ;}//Y +方向\nelse if($xyzA==-3){move -r -os -wd 0 0 ($juli*-1) ;}//Z +方向\nselect $OrigbianT[$i];\nGetFormLocator2;rename \"P\";\n   if($xyzA==1){move -r -os -wd 0 ($juli*1) 0 ;}//X -方向\nelse if($xyzA==2){move -r -os -wd 0 0 ($juli*1) ;}//Y -方向\nelse if($xyzA==3){move -r -os -wd ($juli*1) 0 0 ;}//Z -方向\nelse if($xyzA==-1){move -r -os -wd 0 ($juli*-1) 0 ;}//X -方向\nelse if($xyzA==-2){move -r -os -wd 0 0 ($juli*-1) ;}//Y -方向\nelse if($xyzA==-3){move -r -os -wd ($juli*-1) 0 0 ;}//Z -方向\nselect $OrigbianT[$i] T P;addaimlotB;\n}\nselect $OrigbianT;\nfoundconsaki;\nPickWalkUp;PickWalkRight;PickWalkRight;\nstring $TTt[]=`ls-sl`;PickWalkRight;\nstring $PPp[]=`ls-sl`;\nselect $TTt $PPp;LtW_point;\n//\nselect \"*_conSOMaim\";\npickWalk -d right;\nfoundconsaki;\npickWalkUp;outlinecolor(010);\n\nselect \"*_conSOMaim\";\npickWalk -d right;pickWalk -d right;\nfoundconsaki;\npickWalkUp;outlinecolor(001);\n  select $OrigbianT;foundconsaki;PickWalkUp;PickWalkUp;Ltx;Lty;Ltz;Lrx;Lry;Lrz;\n}\nselect \"*_conSOMaim\";\npickWalk -d up;pickWalk -d up;pickWalk -d up;pickWalk -d up;v_off; proA;select -cl;\nprogressWindow -ep;///\n}\n//\nglobal proc clearObianT(){\nstring $mototarget[]=`ls-sl`;\nfoundconsaki;\nselect -d \"*_conSONaim\";\nstring $dingweiii[]=`ls-sl`;\npickWalk -d up;pickWalk -d up;\nstring $redlot[]=`ls-sl`;\n\nselect $dingweiii;\npickWalk -d up;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;string $greenlot[]=`ls-sl`;\n\nselect $dingweiii;\npickWalk -d up;pickWalk -d right;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;string $bluelot[]=`ls-sl`;\n\nselect $mototarget;sonbakeO;\nselect $redlot $greenlot $bluelot;delete;\nselect $mototarget;\n}" 
        -commandRepeatable 1
        -flat 1
        -mi "AIguding" ( "global proc AIguding(){\nglobal string $AIgudingsel[];\n$AIgudingsel=`ls-sl`;\nTObianbieTO;\nselect -cl;\nif(`objExists RRRR`){\nselect -r -ne RRRR ;\npickWalk -d right;\noneframeGuDing(2);\ndelete RRRR;\n}\nif(`objExists TTTT`){\nselect -r -ne TTTT ;\npickWalk -d right;\noneframeGuDing(1);\ndelete TTTT;\n}\nif(`objExists TTRR`){\nselect -r -ne TTRR ;\npickWalk -d right;\noneframeGuDing(1);\nselect -r -ne TTRR ;\npickWalk -d right;\noneframeGuDing(2);\ndelete TTRR;\n}\nselect $AIgudingsel;\n}AIguding;\n//\n//\nglobal proc oneframeGuDing(int $po){\nint $x = 0;\nfor($work in `ls-sl`){\nselect $work;\nGetFormLocator2;\noutlinecolor(110);\nif($po==1){\nrename GuDingLotTTT;\nselect $work GuDingLotTTT;\nAIPcon;}\nelse if($po==2){\nrename GuDingLotOOO;\nselect $work GuDingLotOOO;\nAIOcon;}\nselect -d $work;\ngaimingzi(\"X\"+$x);\nfancon(1);\n$x++;\n}\n}\n//\nglobal proc AIgudingend(){\nglobal string $AIgudingsel[];\nselect $AIgudingsel;\nSetKeyAnimated;\ndelete \"X*GuDingLot*\";\n}//AIgudingend;" )
        -mi "  |_clean" ( "AIgudingend;" )
        -mi "   |_LtW系統 sel Oya GO_____弄った親のlotを子lotに移して、弄った分削除" ( "string $lotOya[]=`ls-sl`;\nPickWalkDown;\nPickWalkRight;\nPickWalkRight;\nstring $lotKo[]=`ls-sl`;\n\nselect $lotKo;AIguding;\nselect $lotOya;CurveOperation delekey;\nselect $lotKo;AIgudingend;\n\nselect $lotOya;" )
        -mi "     |_LtL" ( "string $lotOya[]=`ls-sl`;\nPickWalkDown;\nPickWalkRight;\nstring $lotKo[]=`ls-sl`;\n\nselect $lotKo;AIguding;\nselect $lotOya;CurveOperation delekey;\nselect $lotKo;AIgudingend;\n\nselect $lotOya;" )
        -mi "----------------------" ( "" )
        -mi "------------" ( "" )
        -mi "〇Rataion addaimlot XYZ /1" ( "rataterigbianmove2(10,1);\n" )
        -mi "                              YZX /2" ( "rataterigbianmove2(10,2);" )
        -mi "                              ZXY /3" ( "rataterigbianmove2(10,3);" )
        -mi "                              -XYZ /-1" ( "rataterigbianmove2(90,-1);" )
        -mi "                              -YXZ /-2" ( "rataterigbianmove2(90,-2);" )
        -mi "----------------------" ( "" )
        -mi "______↑rig>lot>found TTT  >n" ( "if(size(`ls-sl`)==0){\nselect -r \"*_conSOMaim*\";\npickWalk -d right;foundconsaki;pickWalk -d up;\n}else{\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\n}" )
        -mi "______↑rig>lot>found VVV  >m" ( "if(size(`ls-sl`)==0){\nselect -r \"*_conSOMaim*\";\npickWalk -d right;pickWalk -d right;foundconsaki;pickWalk -d up;\n}else{\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\n}" )
        -mi "______↑TTTTVVV lot-Allsel  >b" ( "\nif(size(`ls-sl`)==0){\n\nselect -r \"*_conSOMaim\";pickWalk -d right;foundconsaki;pickWalk -d up;\nstring $selTTT[]=`ls-sl`;\n\nselect -r \"*_conSOMaim\";pickWalk -d right;pickWalk -d right;foundconsaki;pickWalk -d up;\nstring $selVVV[]=`ls-sl`;\nselect $selTTT $selVVV;\n\n}else{\nstring $fff[]=`ls-sl`;\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\nstring $selTTT[]=`ls-sl`;\n\nselect $fff;\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\nstring $selVVV[]=`ls-sl`;\nselect $selTTT $selVVV;\n}" )
        -mi "--------------------motorig_bakeO+clearNTV<b[sE]" ( "clearObianT;" )
        -mi "            |_// 選択中のノードのblendPoint1値を取得,printする" ( "string $selection[] = `ls -sl`;\nfor ($node in $selection) {//blendPoint1 アトリビュートが存在するか確認\n    if (`attributeExists \"blendPoint1\" $node`) {\n        float $value = `getAttr ($node + \".blendPoint1\")`;\n        print (\"setAttr \"+$node + \".blendPoint1 \" + $value + \";\\n\");\n    } else {\n        print ($node + \" には blendPoint1 アトリビュートがありません。\\n\");\n    }\n}\n" )
        -mi "            |_// 選択中のノードのコンストレインのウェイト値を取得,printする,複数も" ( "string $selected[] = `ls -sl`;\nfor ($obj in $selected) {\n    // 接続されている constraint ノードを取得\n    string $constraints[] = `listConnections -type constraint $obj`;\n    for ($con in $constraints) {\n        // constraint ノードの属性を取得\n        string $attrs[] = `listAttr -multi $con`;\n        for ($attr in $attrs) {\n            string $fullAttr = $con + \".\" + $attr;\n            // 除外対象をスキップ\n            if (`gmatch $attr \"target*\"` || `gmatch $attr \"rotateQuaternionW\"`) {\n                continue;\n            }\n            // weight 属性のみ表示\n            if (`gmatch $attr \"weight*\"` || `gmatch $attr \"*W*\"`) {\n                if (`objExists $fullAttr`) {\n                    float $val = `getAttr $fullAttr`;\n                    print(\"setAttr \"+$fullAttr + \" \" + $val + \"\\n\");\n                }\n            }\n        }\n    }print(\" V V V \\n\");\n}" )
        -mi "----------------------" ( "" )
        -mi "______↑移動群rig>Scale制御" ( "//////移動群rig>Scale制御\nglobal proc Trig_lot(int $bianshu,int $zhongxin){\n//$bianshu....0>all frame 1>1F only  //$zhongxin....0>lotあり 1>lot制作 \nif($zhongxin != 0){\nstring $ddddd[]=`ls-sl`;//rig\nCreateLocator;rename \"XXX\";outlinecolor(110);\nselect $ddddd XXX;duochongcon(1);\nselect -r XXX ;\nSetKeyTranslate;//SetKeyRotate;\npickWalk -d down;pickWalk -d right;delete;\nselect $ddddd XXX;\n}\n\nstring $dd[]=`ls-sl`;//rig+中心Lot\ndanxuanlast;\nstring $ee[]=`ls-sl`;//中心Lot\nselect $dd;select -tgl $ee;\nstring $cc[]=`ls-sl`;//rig\n\n///\nif($bianshu == 0){\nfor($aa in `ls-sl`){\nselect -r $ee;\nselect -add $aa;\noriginnone;\nLtL_point;\n}\n}else if($bianshu == 1){\nonetimeworkON;\nfor($aa in `ls-sl`){\nselect -r $ee;\nselect -add $aa;\noriginnone;\nLtL_point;\n}\nonetimeworkOFF;\n}\nselect $ee;\n}//Trig_lot(1,1);\nprint \"Trig_lot($bianshu....0>all frame 1>1F only  //  $zhongxin....0>lotあり 1>lot制作) \";" )
        -mi "    |__//X 0>allF  Y 0>lotあり " ( "Trig_lot(0,0);" )
        -mi "    |__//X 0>allF  Y 1>lotなし" ( "Trig_lot(0,1);" )
        -mi "    |__//X 0>1F  Y 0>lotあり " ( "Trig_lot(1,0);" )
        -mi "    |__//X 0>1F  Y 1>lotなし" ( "Trig_lot(1,1);" )
        -mi "-----" ( "" )
        -mi "duibi_key" ( "" )
        -mi "-----------" ( "" )
        -mi "pose_kuda" ( "global proc pose_kuda(){//右左為無変化のキー>>＞addkey＆拡大\nselectKey -clear;\nglobal int $notime;\nglobal string $selcurves[];\nglobal float $prekey;son;\n\nselectKey -k -t $prekey $selcurves;\n//TangentsSpline;\nselectKey -clear;\nSetKeyAnimated;\nkeyframe -e -iub true -r -o over -tc 1 -t $notime $selcurves;\nSetKeyAnimated;\ncutKey -clear -time (`findKeyframe -t $notime -which next $selcurves`);\n//selectKey -k -t $notime $selcurves;TangentsSpline;\nselectKey -clear;\n}pose_kuda;\n" )
        -mi "LRkeypose_tiaozheng" ( "global proc key_chuanran(){//在1段封閉得間中pose調整>反映改整段間\n                           //[keyposeA  中間区  keyposeB] 中間区pose調整>AB反映\nselectKey -clear;\nSetKeyAnimated;\nglobal float $prekey;\nglobal float $nexkey;\nglobal string $selcurves[];son;\n\nCurveOperation onekeyselect;\nfloat $dd=$prekey-0.5;\nkeyframe -animation keys -option over -absolute -timeChange $dd;\nselectKey -k -t ($prekey+\":\"+$nexkey) $selcurves;\nacktooluse(22);\nselectKey -k -t $dd $selcurves;\ncutKey -clear;\n}key_chuanran" )
        -mi "-----------" ( "" )
        -mi "floatkey>intkey  ~snap" ( "string $sel[]=`ls-sl`;\nfor($i = 0;$i<`size($sel)`;$i++){\n    select $sel[$i];\n    CurveOperation2 seleminmax;\n    intkeywork;\n    cutKey -clear;\n}select $sel;\n/////\nglobal proc intkeywork(){\nif(size(`ls-sl`)!=0){\nselectKey -unsnappedKeys 1;\nif(`keyframe -an keys -q -kc`!=0){\n//CurveOperation Key_selobj;\n//selectKey -unsnappedKeys 1;\n\nglobal int $selshu;\nglobal string $selcurves[];\nglobal float $timelist[];\nglobal int $keyjige;son;\n\nfor($time in $timelist){\n\tint $newTime = int($time);//Gets the integer of the time and cuts off any floating point.\n\tif($newTime!=0){\n\t    float $keyTest = $time % int($time);\n\t\tif ($keyTest != 0){\n\t\t\tif ($keyTest < 0.5){\n\t\t\t    setKeyframe -insert -t $newTime $selcurves;\n\t\t\t}else{\n\t\t\t    setKeyframe -insert -t ($newTime+1) $selcurves;\n\t\t\t}\n\t\t}\n\t}else if($newTime==0){//\"-0.99:0.99\"\n        setKeyframe -insert -t 0 $selcurves;\n\t}\n}\nprint($selshu+\" obj  \"+$keyjige+\" floatkey>int\");\n}\n}\n}//intkeywork;\n/*-\n$d=9.4%9;// 結果: 0.4\n$d=9.9%9;// 結果: 0.9\n$d=9%3;// 結果: 0\n$ddd=9%0;//エラー\n//　%　>被某個数除算後,余数的値\n-*/" )
        -mi "   |__noDelete" ( "intkeywork;" )
        -mi "----------------------" ( "" )
        -mi "----------------------" ( "" )
        -mi "----------------------" ( "" )
        -mi "----------------------" ( "" )
        -mi "----------------------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "motionworkB" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "motionworkB" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Range" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "updateMotionTrail.png" 
        -image1 "updateMotionTrail.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "rangeinformation;\nrangeworkA;\n" 
        -sourceType "mel" 
        -doubleClickCommand "global proc rangeworkA(){\nglobal int $selshu;son;\nglobal float $allkeyA;\nglobal float $allkeyB;\nglobal int $keyox;pdkey;\nif($selshu!=0){\nselectKey -clear ;\nif ($keyox!=0){playbackOptions -min $allkeyA -max $allkeyB;}\n}currentTime $allkeyA;\n}\n////////\nglobal proc rangeworkB(){\nselect `ls -type joint`;\nselectKey;\nglobal float $FrameA;\nglobal float $FrameB;\nglobal int $keyjige;son;\nif($keyjige!=0){\nplaybackOptions -min $FrameA -max $FrameB;\nprint \"alljointkey>range\";\n}else{print \"joint nokey\\n\";\n}CurveOperation Key_selobj;\n}inViewMessage -smg \"qi dong! b\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 90;\n////////\nglobal proc rangeonlykey(){\nselectKey -clear;\nglobal int $sttime;\nglobal int $edtime;son;\nsetKeyframe -insert -t $sttime;\nselectKey -k -t (\":\"+($sttime-1));\nif(`keyframe -an keys -q -kc`!=0){\ncutKey -clear;}\nsetKeyframe -insert -t $edtime;\nselectKey -k -t (($edtime+1)+\":\");\nif(`keyframe -an keys -q -kc`!=0){\ncutKey -clear;}\nprint \"gomikey shan\\n\";\n}\n////////\nglobal proc rangeinformation(){\nglobal int $sttime;\nglobal int $edtime;\nglobal float $FrameA;\nglobal float $FrameB;\nglobal int $notime;son;\n\nfloat $maxtime=$edtime-$sttime;\nfloat $second=$maxtime/60;\nfloat $seconds=$maxtime/30;\n$nowtime=$notime-$sttime;\nfloat $jisuanend;\nif (`keyframe -an keys -q -kc`!=0){\nif($FrameA<0||$FrameB<0){\n$end = $FrameA*-1 - $FrameB*-1;\n//print (\"0~~~\" + $end);\n$jisuanend=$end;\n}else if($FrameA<0||$FrameB>=0){\n$end = $FrameA*-1 + $FrameB;\n//print (\"0~~~\" + $end);\n$jisuanend=$end;\n}else if($FrameA>=0||$FrameB>=0){\n$end = $FrameB - $FrameA;\n//print (\"0~~~\" + $end);\n$jisuanend=$end;\n}\n}else{$jisuanend=0;}\nprint (\"\\n\\n(\"+$sttime+\"-\"+$edtime+\")  (0-\"+$nowtime+\"-\"+$maxtime+\")  {\"+$second+\"miao/60fps}  {\"+$seconds+\"miao/30fps}\"+\"  [selkey \"+$FrameA+\"~\"+$FrameB+\" > 0~\"+$jisuanend+\"]\");\nstring $ss[]={\"(\"+$sttime+\"-\"+$edtime+\")  (0-\"+$nowtime+\"-\"+$maxtime+\")  {\"+$second+\"miao/60fps}  {\"+$seconds+\"miao/30fps}\"+\"  [selkey \"+$FrameA+\"~\"+$FrameB+\" > 0~\"+$jisuanend+\"]\"};\ninViewMessage -smg $ss -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 900;\n}\n////////\n////////\nglobal proc pdkey(){\nif(size(`ls-sl`)!=0){\nglobal int $keyox;\nglobal float $allkeyA;\nglobal float $allkeyB;\nselectKey;\n$foundkey=sort(`keyframe -q -sl`);\nif (`keyframe -an keys -q -kc`==0){$keyox=0;\n}else{$keyox=1;\n$allkeyA=$foundkey[0];\n$allkeyB=$foundkey[(size($foundkey) -1)];\nselectKey -clear;\n}print (\"$keyox=\"+$keyox);\n}}//pdkey;\n////////\n////////\nglobal proc santi(){//\nglobal string $selobj[];//O\nglobal int $selshu;//O\n$selobj=`ls-sl`;\n$selshu=size($selobj);\n\nglobal int $sttime;//O\nglobal int $edtime;//O\nglobal string $mmtime;//O\nglobal int $notime;//O\nglobal float $sldierrange[];//O\n\n$sttime = `playbackOptions -q -minTime`;\n$edtime = `playbackOptions -q -maxTime`;\n$mmtime=($sttime+\":\"+$edtime);\n$notime=`currentTime -q`;\nglobal string $gPlayBackSlider;\n$sldierrange=`timeControl -q -rangeArray $gPlayBackSlider`;\n\n//global string $geb[];//O\n//global string $geOutlinerb;//O=$lianjie\n//global string $geObjectb[];//O=$selobj[]\n//$geb=`getPanel -scriptType \"graphEditor\"`;\n//$geOutlinerb=($geb[0]+\"FromOutliner\");//=`editor -q -mainListConnection graphEditor1GraphEd`;\n//$geObjectb=`selectionConnection -q -obj \"graphEditorList\"`;\n\nglobal string $lianjie;//O\nglobal string $graphobj[];//O\n\n$lianjie=`editor -q -mainListConnection graphEditor1GraphEd`;//get graph outliner \n$graphobj=`expandSelectionConnectionAsArray $lianjie`;//get selection from outliner\n\n//\nglobal float $prekey;//O\nglobal float $nexkey;//O\n\n$prekey=`findKeyframe -time $notime -which previous`;//$channel`;\n$nexkey=`findKeyframe -time $notime -which next`;\n\n//\nglobal string $selcurves[];//O\nglobal string $selcurvesb[];//O\nglobal int $channelshu;//O\nglobal int $keypaiming[];//O\nglobal float $timelist[];//O\nglobal float $keyshuzhi[];//O\nglobal int $keyjige;//O\n//global string $selchannel;//O\n\n$selcurves=`keyframe -q -name`;\nif(`size($selcurves)`!=0){\n$selcurvesb=`listConnections -plugs true $selcurves`;}\n$channelshu=`size($selcurves)`;\n$keypaiming=`keyframe -selected -q -indexValue $selcurves`;\n$timelist=`keyframe -selected -q -timeChange $selcurves`;\n$keyshuzhi=`keyframe -selected -q -valueChange $selcurves`;\n$keyjige=`keyframe -an keys -q -kc`;\n//$selchannel=substituteAllString($selcurvesb[0], $selobj[0], \"\");\n//\nglobal float $selkeyall[];//O\nglobal float $FrameA;//O\nglobal float $FrameB;//O\nglobal string $mmkey;//O\n\nif(size(`ls-sl`)==0){\n$FrameA=0;$FrameB=0;\n}\nif(`keyframe -an keys -q -kc`==0){\n$FrameA=0;$FrameB=0;\n}\nelse if(`keyframe -an keys -q -kc`!=0){\n$selkeyall=sort(`keyframe -q -sl`);\n$FrameA=$selkeyall[0];\n$FrameB=$selkeyall[(size($selkeyall) -1)];\n}\n$mmkey=($FrameA+\":\"+$FrameB);\n\n//\nglobal string $selchan[];//O\n\n$selchan=`channelBox -q -sma mainChannelBox`;\n\n/*-//\nglobal string $pasteKey;//O selkeytime\n$pasteKey=\"pasteKey -time \"+$FrameA+\n\" -float 0 -option merge -copies 1 -connect 0 -timeOffset 0 -floatOffset 0 -valueOffset 0;\";\nglobal float $cptime;//O\nglobal string $pasteKeyb;//O 指定time\n$pasteKeyb=\"pasteKey -time \"+$cptime+\n\" -float 0 -option merge -copies 1 -connect 0 -timeOffset 0 -floatOffset 0 -valueOffset 0;\";\n//eval ($pasteKey);\n-*/\n}\n//////////////////////////////////////////\n//////////////////////////////////////////\n//////////////////////////////////////////\nglobal proc santi0(){//\nglobal string $selobj0[];//O0\nglobal int $selshu0;//O0\n$selobj0=`ls-sl`;\n$selshu0=size($selobj0);\n\nglobal int $sttime0;//O0\nglobal int $edtime0;//O0\nglobal string $mmtime0;//O0\nglobal int $notime0;//O0\n\n$sttime0=`playbackOptions -q -minTime`;\n$edtime0=`playbackOptions -q -maxTime`;\n$mmtime0=($sttime0+\":\"+$edtime0);\n$notime0=`currentTime -q`;\n\n\nglobal float $Pls0;//O0\nglobal float $Ple0;//O0\n\nglobal string $gPlayBackSlider;\nstring $PlBckSlString = `timeControl -q -rng $gPlayBackSlider`;\nfloat $PlBckSlStringtSize = size($PlBckSlString)-1;\nstring $PlBckSlVals = `substring $PlBckSlString 2 $PlBckSlStringtSize`;\n$Pls0= `match \"^[^\\:]*\" $PlBckSlVals`;\n$Ple0= `substitute \"^[^.]*\\\\:\" $PlBckSlVals \"\"`;\n\n\n\nglobal float $prekey0;//O0\nglobal float $nexkey0;//O0\nglobal string $lianjie0;//O0\nglobal string $graphobj0[];//O0\n\n$prekey0=`findKeyframe -time $notime0 -which previous`;\n$nexkey0=`findKeyframe -time $notime0 -which next`;\n$lianjie0=`editor -q -mainListConnection graphEditor1GraphEd`;\n$graphobj0=`expandSelectionConnectionAsArray $lianjie0`;\n\n//\nglobal string $selcurves0[];//O0\nglobal string $selcurvesb0[];//O0\nglobal int $channelshu0;//O0\nglobal int $keypaiming0[];//O0\nglobal float $timelist0[];//O0\nglobal float $keyshuzhi0[];//O0\nglobal int $keyjige0;//O0\n//global string $selchannel0;//O0\nglobal float $selkeyall0[];//O0\nglobal float $FrameA0;//O0\nglobal float $FrameB0;//O0\nglobal string $mmkey0;//O0\nglobal string $selchan0[];//O0\n\n$selcurves0=`keyframe -q -name`;\nif(`size($selcurves0)`!=0){\n$selcurvesb0=`listConnections -plugs true $selcurves0`;}\n$channelshu0=`size($selcurves0)`;\n$keypaiming0=`keyframe -selected -q -indexValue $selcurves0`;\n$timelist0=`keyframe -selected -q -timeChange $selcurves0`;\n$keyshuzhi0=`keyframe -selected -q -valueChange $selcurves0`;\n$keyjige0=`keyframe -an keys -q -kc`;\n//$selchannel0=substituteAllString($selcurvesb0[0], $selobj0[0], \"\");\nif(`keyframe -an keys -q -kc`!=0){\n$selkeyall0=sort(`keyframe -q -sl`);\n$FrameA0=$selkeyall0[0];\n$FrameB0=$selkeyall0[(size($selkeyall0) -1)];\n$mmkey0=($FrameA0+\":\"+$FrameB0);\n}\n$selchan0=`channelBox -q -sma mainChannelBox`;\n}" 
        -commandRepeatable 1
        -flat 1
        -mi "selobj_mmkey>range" ( "rangeworkA" )
        -mi "alljoint_key>range" ( "rangeworkB" )
        -mi "sel_rangekey_only" ( "rangeonlykey" )
        -mi "selkey>>minmax" ( "CurveOperation2 tquickPB2" )
        -mi "timesilder sel>>minmax" ( "CurveOperation2 tquickPB1" )
        -mi "rangeinformation" ( "rangeinformation" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Locator" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Locator" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "locator.png" 
        -image1 "locator.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc ceaterlot(){\nint $mod = getModifiers();\nswitch( $mod ){\ncase 1://Shift\nGetFormLocator4;outlinecolor(110);\nbreak;\ncase 4://ctrl\nGetFormLocator2;outlinecolor(110);\nbreak;\ncase 8://alt\nGetFormLocator3;outlinecolor(110);\nbreak;\ncase 9://shift+alt\nCreateLocator;rename \"V-----------V\";allLo;allHi;\noutlinecolor(050505);select -cl;\nbreak;\ndefault:\nCreateLocator;\nprint \"a8:sel>kolot/c4:sel>fuzhilot/s:sel>newlotcon/s+a>jihao Σ(ﾟДﾟ；)( ・_・)( >д<)\\n\";\n}\n}ceaterlot;" 
        -sourceType "mel" 
        -doubleClickCommand "global proc f7ww(){\nif(`window -ex f7w`==true)deleteUI f7w;window -t \"f7\" f7w;columnLayout;\ntext -l \"sunxujiaohuan/danxuanlast/danxuanfast/zhugejianxuan/shunxufanzhuan/LDown_move/RUp_move/addselgo(1234)\";\ntext -l \"onetimeworkON/onetimeworkOFF/AIguding/AIgudingend\";\ntext -l \"\";\ntext -l \"fancon(1.2)/foundconsaki/foundconmubiao\";\ntext -l \"conmatch(1235)/AIPcon/AIOcon/beizhu(1.2.3)/duochongcon(1.2)/putongcon(0.1.10.11)\";\n//text -l \"addlot/duochongaddcon1/originnone/duochongaddcon2/QA_pickOrigin/QA_pickTarget/\";\n//text -l \"GetFormLocator2/GetFormLocator3/addlot/addlotbake/GetFormGroup1/GetFormGroup2\";\ntext -l \"originnone/duochongaddcon2/duochongaddcon1/addbake\";\ntext -l \"\";\ntext -l \"alljontradius(x)\";\ntext -l \"sonbakeO/sonbakeT/sonbakeTO/addset/addsetB/showONFF(0.1.10.11.20.21)\";\ntext -l \"kakusiONs/kakusiOFFs/showchwork(1/2/3/4/9/10)/LtWLauto(W/L)/keysmoothGO(+-0.2)/lotshape_gai(xx)/gaimingzi(new+moto)/lishigai(new+moto)/reNamespace\";\ntext -l \"\";\ntext -l \"/-/lock\";\ntext -l \"Ltx;Lty;Ltz;Lrx;Lry;Lrz;Lsx;Lsy;Lsz;Lvis;\";\ntext -l \"unLtx;unLty;unLtz;unLrx;unLry;unLrz;unLsx;unLsy;unLsz;unLvis;\";\ntext -l \"allLo;allunLo;\";\ntext -l \"/-/show\";\ntext -l \"Htx;Hty;Htz;Hrx;Hry;Hrz;Hsx;Hsy;Hsz;Hvis;\";\ntext -l \"unHtx;unHty;unHtz;unHrx;unHry;unHrz;unHsx;unHsy;unHsz;unHvis;\";\ntext -l \"allHi;allunHi;\";\ntext -l \"/-/setkey\";\ntext -l \"Ktx;Kty;Ktz;Krx;Kry;Krz;Ksx;Ksy;Ksz;Kvis;\";\ntext -l \"unKtx;unKty;unKtz;unKrx;unKry;unKrz;unKsx;unKsy;unKsz;unKvis;\";\ntext -l \"allKey;allunKey;\";\ntext -l \"/-/fankeymm\";\ntext -l \"Ftx;Fty;Ftz;Frx;Fry;Frz;\";\ntext -l \"/-/0<>1\";\ntext -l \"zotx;zoty;zotz;zorx;zory;zorz;v_off;\";\ntext -l \"oztx;ozty;oztz;ozrx;ozry;ozrz;v_on;\";\nshowWindow f7w;\n}\nglobal proc closef7ww(){if(`window -ex f7w`){deleteUI f7w;}else{f7ww;}}closef7ww;\n///////\nglobal proc sunxujiaohuan(){\nstring $wselejiaoti[]=`ls-sl`;\nif(`size ($wselejiaoti)`==0){\n}else{\nint $zsss=`size ($wselejiaoti)`-1;\nselect -cl;\nselect $wselejiaoti[$zsss];\nstring $endsel[]=`ls-sl`;\nselect $wselejiaoti;\nselect -d $endsel;\nstring $startsel[]=`ls-sl`;\nselect $endsel $startsel;\n}\n}//sunxujiaohuan;\n///////\nglobal proc danxuanlast(){\nstring $wseledanxuan[]=`ls-sl`;\nint $zsw=`size ($wseledanxuan)`;\nint $zs=$zsw-1;\nselect -r $wseledanxuan[$zs];\n}\n///////\nglobal proc danxuanfast(){\nstring $wseledanxuan[]=`ls-sl`;\nselect $wseledanxuan[0];\n}\n///////\nglobal proc zhugejianxuan(){\nstring $selerig[]=`ls-sl`;\nselect -d $selerig[0];\n//pixelMove -1 0;\n//pixelMove 0 -1;\n}//zhugejianxuan;\n///////\nglobal proc shunxufanzhuan(){\nstring $fanshunxu[]=`ls-sl`;\nint $zsss=`size($fanshunxu)`-1;\nint $a;\nselect -cl;\nfor($a=$zsss;$a>-1;$a--){\nselect -add $fanshunxu[$a];\n}\n}//shunxufanzhuan\n\n///////\nglobal proc addselgo(int $fangxiang){//1>↓ 2>↑ 3>→ 4>←\nstring $nowselA[]=`ls-sl`;\nif($fangxiang==1){\nPickWalkDown;\ndanxuanlast;\nstring $nowselB[]=`ls-sl`;\nselect $nowselA $nowselB;\n}else if($fangxiang==2){\nPickWalkUp;\ndanxuanlast;\nstring $nowselB[]=`ls-sl`;\nselect $nowselA $nowselB[0];\n}else if($fangxiang==3){//>\nPickWalkRight;\ndanxuanlast;\nstring $nowselB[]=`ls-sl`;\nselect $nowselA $nowselB;\n}else if($fangxiang==4){//<\nPickWalkLeft;\nstring $nowselB[]=`ls-sl`;\nselect $nowselA $nowselB[0];\n}}\n///////\nglobal proc lotshape_gai(float $daxiao){\nfor($sp in `ls-sl`){select $sp;\nstring $sele[]=`ls-sl`;\nsetAttr ($sele[0]+\"Shape.localScaleX\") $daxiao;\nsetAttr ($sele[0]+\"Shape.localScaleY\") $daxiao;\nsetAttr ($sele[0]+\"Shape.localScaleZ\") $daxiao;\n}}//lotshape_gai(50)" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "bakeSimulationDialogItem" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "bakeSimulationDialogItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "シミュレ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "BakeSimulationOptions;" 
        -sourceType "mel" 
        -doubleClickCommand "global proc timesldierbakeTO(){\nglobal int $selshu;\nglobal int $sttime;\nglobal int $edtime;\nglobal float $sldierrange[];son;\nif($selshu!=0){\nif($sldierrange[0] != $sldierrange[1]-1){\nplaybackOptions -min $sldierrange[0] -max $sldierrange[1];\nsonbakeTO;\nplaybackOptions -min $sttime -max $edtime;\n}else{\ncurrentTime $sldierrange[0];\nSetKeyTranslate;SetKeyRotate;\n}\n}\n}inViewMessage -smg \"qi dong! c\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 90;\n///////////////////////////\nglobal proc autobake(){\nselectKey -clear;\nstring $selerig[]=`ls-sl`;\nTObianbieTO;\nif(`objExists RRRR`){\nselect -r -ne RRRR;\npickWalk -d right;\nsonbakeO;\ndelete RRRR;\n}\nif(`objExists TTTT`){\nselect -r -ne TTTT;\npickWalk -d right;\nsonbakeT;\ndelete TTTT;\n}\nif(`objExists TTRR`){\nselect -r -ne TTRR;\npickWalk -d right;\nsonbakeTO;\ndelete TTRR;\n}\nif(`objExists noTTRR`){\ndelete noTTRR;\n}\nselect $selerig;\nshowchwork(0);\n}//autobake;\n/////////////////////////\nglobal proc TObianbieTO(){\nfor($abb in `ls-sl`){\nselect $abb;\nselectKey -k ($abb+\".tx\")($abb+\".ty\")($abb+\".tz\");\nint $Txyz=`keyframe -an keys -q -kc`;\nselectKey -k ($abb+\".rx\")($abb+\".ry\")($abb+\".rz\");\nint $Rxyz=`keyframe -an keys -q -kc`;\nif($Txyz!=0&&$Rxyz!=0){\nif(`objExists TTRR`){\nselect -add -ne TTRR;\naddsetB;\n}else{\n$createSetResult=`sets -name \"TTRR\"`;\n}\n}else if($Txyz!=0&&$Rxyz==0){\nif(`objExists TTTT`){\nselect -add -ne TTTT;\naddsetB;\n}else{\n$createSetResult=`sets -name \"TTTT\"`;\n}\n}else if($Txyz==0&&$Rxyz!=0){\nif(`objExists RRRR`){\nselect -add -ne RRRR;\naddsetB;\n}else{\n$createSetResult = `sets -name \"RRRR\"`;\n}\n}else if($Txyz==0&&$Rxyz==0){\nif(`objExists noTTRR`){\nselect -add -ne noTTRR;\naddsetB;\n}else{\n$createSetResult = `sets -name \"noTTRR\"`;\n}\n}selectKey -clear;\n}}//TObianbieTO\n/////////////////////////\nglobal proc sonbakeT(){\nkakusiONs;selectKey -clear;//python(\"import sonCurvee;reload(sonCurvee);sonCurvee.bakeT()\");\nint $sttt =`playbackOptions -q -minTime`;\nint $eddd =`playbackOptions -q -maxTime`;\nbakeResults -simulation true -t ($sttt+\":\"+$eddd) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"tx\" -at \"ty\" -at \"tz\";deleteEmptyAnimLayers();\nkakusiOFFs;\n}\n///////////////\nglobal proc sonbakeO(){\nkakusiONs;selectKey -clear;//python(\"import sonCurvee;reload(sonCurvee);sonCurvee.bakeO()\");\nint $sttt =`playbackOptions -q -minTime`;\nint $eddd =`playbackOptions -q -maxTime`;\nbakeResults -simulation true -t ($sttt+\":\"+$eddd) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"rx\" -at \"ry\" -at \"rz\";deleteEmptyAnimLayers();\nkakusiOFFs;\n}\n///////////////\nglobal proc sonbakeTO(){//python(\"import sonCurvee;reload(sonCurvee);sonCurvee.bakeTO()\");\nsonbakeT;sonbakeO;deleteEmptyAnimLayers();\n}\n///////////////\nglobal proc sonbakeTOS(){\nkakusiONs;deleteEmptyAnimLayers();//python(\"import sonCurvee;reload(sonCurvee);sonCurvee.bakeTOS()\");\nkakusiOFFs;\n}" 
        -commandRepeatable 1
        -flat 1
        -mi "silderbakeTO" ( "timesldierbakeTO;" )
        -mi "TObianbieTO" ( "TObianbieTO;" )
        -mi "autobakeTO" ( "autobake;" )
        -mi "-------------------------animelayerAdd_後台mel" ( "global proc sonbakelayer_TOTO(int $TRxyz){//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz\nkakusiONs;string $plll[]=`ls-sl`;\n$dd=`playbackOptions -q -minTime`;\n$ff=`playbackOptions -q -maxTime`;\nif($TRxyz==0){//all channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true $plll;\nselect -cl;select $plll;\nrename BakeResults All_animelayer;animationlayerweight(\"All_animelayer\");\n}else if($TRxyz==1){//T+R channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"tx\" -at \"ty\" -at \"tz\" -at \"rx\" -at \"ry\" -at \"rz\" $plll;\nselect -cl;select $plll;\nrename BakeResults TR_animelayer;animationlayerweight(\"TR_animelayer\");\n}else if($TRxyz==2){//Txyz channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"tx\" -at \"ty\" -at \"tz\" $plll;\nselect -cl;select $plll;\nrename BakeResults Txyz_animelayer;animationlayerweight(\"Txyz_animelayer\");\n}else if($TRxyz==3){//Tx channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"tx\" $plll;\nselect -cl;select $plll;\nrename BakeResults Tx_animelayer;animationlayerweight(\"Tx_animelayer\");\n}else if($TRxyz==4){//Ty channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"ty\" $plll;\nselect -cl;select $plll;\nrename BakeResults Ty_animelayer;animationlayerweight(\"Ty_animelayer\");\n}else if($TRxyz==5){//Tz channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"tz\" $plll;\nselect -cl;select $plll;\nrename BakeResults Tz_animelayer;animationlayerweight(\"Tz_animelayer\");\n}\n/////\nelse if($TRxyz==12){//Rxyz channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"rx\" -at \"ry\" -at \"rz\" $plll;\nselect -cl;select $plll;\nrename BakeResults Rxyz_animelayer;animationlayerweight(\"Rxyz_animelayer\");\n}else if($TRxyz==13){//Rx channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"rx\" $plll;\nselect -cl;select $plll;\nrename BakeResults Rx_animelayer;animationlayerweight(\"Rx_animelayer\");\n}else if($TRxyz==14){//Ry channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"ry\" $plll;\nselect -cl;select $plll;\nrename BakeResults Ry_animelayer;animationlayerweight(\"Ry_animelayer\");\n}else if($TRxyz==15){//Rz channel\nbakeResults -simulation true -t ($dd+\":\"+$ff) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer true -minimizeRotation true \n-controlPoints false -shape true -at \"rz\" $plll;\nselect -cl;select $plll;\nrename BakeResults Rz_animelayer;animationlayerweight(\"Rz_animelayer\");\n}kakusiOFFs;\n}\n" )
        -mi "   ALL_bake_newlay___後ltWLなどで外だし,レイヤ削除" ( "sonbakelayer_TOTO(0);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "    |_TO" ( "sonbakelayer_TOTO(1);" )
        -mi "-----" ( "" )
        -mi "    |_tx" ( "sonbakelayer_TOTO(3);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "    |_ty" ( "sonbakelayer_TOTO(4);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz\n" )
        -mi "    |_tz" ( "sonbakelayer_TOTO(5);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "      |_Txyz   1layer" ( "sonbakelayer_TOTO(2);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "          |_T_x_y_z layer分けながら同時作成" ( "sonbakelayer_TOTO(3);\nsonbakelayer_TOTO(4);\nsonbakelayer_TOTO(5);" )
        -mi "    -----" ( "" )
        -mi "    |_rx" ( "sonbakelayer_TOTO(13);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz\n" )
        -mi "    |_ry" ( "sonbakelayer_TOTO(14);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "    |_rz" ( "sonbakelayer_TOTO(15);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "      |_Rxyz   1layer" ( "sonbakelayer_TOTO(12);//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz" )
        -mi "          |_R_x_y_z layer分けながら同時作成" ( "sonbakelayer_TOTO(13);\nsonbakelayer_TOTO(14);\nsonbakelayer_TOTO(15);" )
        -mi "|____autoTO" ( "//0_allchannel 1_T+R 2_Txyz 3_Tx 4_Ty 5_Tz 12_Rxyz 13_Rx 14_Ry 15_Rz\nglobal proc TOxyzauto(){\nTObianbieTO;\nif(`objExists RRRR`){\nselect -ne RRRR;\npickWalkRight;\nsonbakelayer_TOTO(12);//O\ndelete RRRR;\n}\nif(`objExists TTTT`){\nselect -ne TTTT;\npickWalkRight;\nsonbakelayer_TOTO(2);//T\ndelete TTTT;\n}\nif(`objExists TTRR`){\nselect -ne TTRR;\npickWalkRight;\nsonbakelayer_TOTO(1);//TO\ndelete TTRR;\n}\nif(`objExists noTTRR`){\ndelete noTTRR;\n}\n}TOxyzauto;" )
        -mi "------------------------------------" ( "" )
        -mi "one jiku bake VVV" ( "" )
        -mi " |_ tx" ( "global int $sttime;\nglobal int $edtime;son;\nbakeResults -simulation true -t ($sttime+\":\"+$edtime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"tx\";" )
        -mi " |_ ty" ( "global int $sttime;\nglobal int $edtime;son;\nbakeResults -simulation true -t ($sttime+\":\"+$edtime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"ty\";" )
        -mi " |_ tz" ( "global int $sttime;\nglobal int $edtime;son;\nbakeResults -simulation true -t ($sttime+\":\"+$edtime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"tz\";" )
        -mi " |_ rx" ( "global int $sttime;\nglobal int $edtime;son;\nbakeResults -simulation true -t ($sttime+\":\"+$edtime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"rx\";\n" )
        -mi " |_ ry" ( "global int $sttime;\nglobal int $edtime;son;\nbakeResults -simulation true -t ($sttime+\":\"+$edtime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"ry\";" )
        -mi " |_ rz" ( "global int $sttime;\nglobal int $edtime;son;\nbakeResults -simulation true -t ($sttime+\":\"+$edtime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true \n-preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at \"rz\";" )
        -mi "----" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Make a set containing the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Set" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Set" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc Setgroup(){\nint $mod = getModifiers();\nswitch($mod){\ncase 1://shift\naddsetB;\nbreak;\n//case 2:    print (\" CapsLock\");      break;\n//case 3:    print (\" =3?\");           break;\ncase 4://ctrl\nHotkeyPreferencesWindow;\nbreak; \ncase 5:///ctrl+shift\nsetdelete;\nbreak;\n//case 6: break;\n//case 7: break;\ncase 8://alt\nbreak;\ncase 9://shift+alt\nbreak;\n\ncase 12://ctrl+alt\nMarkingMenuPreferencesWindow;\nbreak;\ncase 13://ctrl+alt+shift\nSetEditor;\nbreak;\ndefault:\nprint(\"壁|д･´) !! d:no a8:no c4:hotkey s1:sel+set>in cs5:set>out ca12:makingmeun cas13:setop\\n\");\nbreak;\n}\n}Setgroup;" 
        -sourceType "mel" 
        -doubleClickCommand "//source \"C:/Users/t-son/Documents/maya/2022/ja_JP/prefs/scripts/XXXXOOOOmarkingM9-5_shelves7.mel\";\nsource \"C:/Users/taii.son/Documents/maya/2024/ja_JP/prefs/scripts/XXXXXXX.mel\";if (`window -ex cuttimewsss`) deleteUI cuttimewsss;if (`window -ex cuttimew`) deleteUI cuttimew;\nsource \"C:/Users/taii.son/Documents/maya/2024/ja_JP/prefs/scripts/ZZZZZZZ.mel\";\ninViewMessage -smg \"qi dong! d\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 90;\n\nglobal proc melpython(){\nglobal string $gCommandLineSourceButton;\npopupMenu -parent $gCommandLineSourceButton;\nsource \"menu_Mymenu\";\n//global string $gMainWindow;\n//popupMenu -parent $gMainWindow;\n//source \"menu_Mymenu\";\n}melpython;\n//////////////////\nglobal proc addsetB(){//obi+set\nstring $sss[]=`ls-sl`;\nint $kazu=`size $sss`-1;\nselect -d -ne $sss[1];\nstring $obj[]=`ls-sl`;\nsets -edit -forceElement $sss[$kazu] $obj;\n}\n//\nglobal proc setdelete(){\nstring $selection[] = `ls -sl`;\nstring $sets[] = {};\nstring $objs[] = {};\nfor ($item in $selection){// セットとオブジェクトを分ける\n    if (`objectType -isType \"objectSet\" $item`) {\n        $sets[size($sets)] = $item;\n    } else {\n        $objs[size($objs)] = $item;\n    }\n}for ($set in $sets){// 各セットからオブジェクトを除去\n    for ($obj in $objs) {\n        if (`sets -isMember $set $obj`) {\n              sets -edit -rm  $set $obj;\n            print($obj + \" を \" + $set + \" から除去しました。\\n\");\n        }\n    }\n}}\n//////////////////////////////////////////////\nglobal proc kakusiONs(){\nglobal string $AMP[];global int $ssd;int $numb;string $MPtemp;\nstring $GMPG[] = `getPanel -type modelPanel`;\nstring $GVPG[] = `getPanel -visiblePanels`;\nfor($MPtemp in $GMPG){\n\tstring $VPtemp;\n\tfor($VPtemp in $GVPG){\n\t\tif($VPtemp == $MPtemp){\n\t\t\t$AMP[$numb] = $VPtemp;\n\t\t\t$numb = $numb +1;\n\t\t}\n\t}\n}\n$ssd=$numb;\nfor($n=0;$n<$numb;$n++){\nif (`panel -exists (\"_dmy_bakePanel\"+$n)`) deleteUI -panel (\"_dmy_bakePanel\"+$n);\noutlinerPanel -label (\"_dmy_bakePanel0\"+$n) -replacePanel $AMP[$n] (\"_dmy_bakePanel\"+$n);\n}}//kakusiONs;\n////\nglobal proc kakusiOFFs(){\nglobal string $AMP[];global int $ssd;\nfor($n=0;$n<$ssd;$n=$n+1){\n\tpanel -e -replacePanel (\"_dmy_bakePanel\"+$n) $AMP[$n];\n\tdeleteUI -panel (\"_dmy_bakePanel\"+$n);\n}}//kakusiOFFs;" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "アニメーション カーブを編集します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "グラフ エディタ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "getGraphEditor.png" 
        -image1 "getGraphEditor.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "GraphEditor;\n/*-\nglobal int $sttime;\nglobal int $edtime;son;\nselectKey -clear ;\nselectKey -add -k -t $sttime;\n///両サイド　スプライン接線\nkeyTangent -itt spline -ott spline;\n\nselectKey -clear ;\nselectKey -add -k -t $edtime;\n///両サイド　スプライン接線\nkeyTangent -itt spline -ott spline;\nselectKey -clear ;\n//真ん中 自動接線（旧式）  keyTangent -e -itt auto -ott auto;\n\nglobal proc closeuimain(){\nif(`menu -exists addtoola`){deleteUI addtoola;\n}else{addtoola;}\n}\n\nglobal proc addtoola() {\nif(`menu -exists addtoola`){\ndeleteUI addtoola;}\nglobal string $gMainWindow;\nsetParent $gMainWindow;\nmenu -label \"XXX\" -to true -aob true addtoola;\nmenuItem -l \"x\" -subMenu true -to true;\nmenuItem -l \"x_x\" -c \"\";\t\nsetParent -menu ..;\n}\n-*/\n//キーの値を入力窓 グラフエディタの数値入力しにくいため...\nglobal proc keyW(){\nif(`window -ex keyshuruW` == true )deleteUI keyshuruW;\nwindow -t \"shuru\" -w 100 -h 80 keyshuruW;\ncolumnLayout;\nrowLayout -nc 6 -cw2 5 20;\nfloatField -h 30 -w 80 -v 0 -precision 1 KEYdeZHII;\nbutton -h 30 -w 50 -l \"GO\" -c keyshuru;\nsetParent ..;\nbutton -h 28 -w 200 -l \"X\" -c \"deleteUI keyshuruW\";\nshowWindow keyshuruW;\n}//keyW;\nglobal proc keyshuru(){\nfloat $keyzhi = `floatField -query -value KEYdeZHII`;\nif(`keyframe -an keys -q -kc`!=0){keyframe -animation keys -absolute -valueChange $keyzhi;}\n}" 
        -sourceType "mel" 
        -doubleClickCommand "animCurveEditor -edit -displayNormalized 0 graphEditor1GraphEd;\n\nglobal proc closeuigrap(){\nif(`menu -exists motionhelpwork`){deleteUI motionhelpwork;\n}else{motionhelpwork;}\n}closeuigrap;\n\nglobal proc motionhelpwork() {\nif(`menu -exists motionhelpwork`){deleteUI motionhelpwork;}\nstring $graphEditor[] = `getPanel -scriptType graphEditor`;\nsetParent $graphEditor;\nmenu -label \"select\" -to true -aob true motionhelpwork; \nmenuItem -l \"Copy/Paste\" -subMenu true -to true;\n menuItem -l \"x/xyz>1f\" -c \"pastkeywork_x_xyz(1)\";\t\n menuItem -l \"x/xyz>mm\" -c \"pastkeywork_x_xyz(2)\";\n menuItem -l \"akey>bkey_CP\" -c \"pastkeywork_x_xyz(3)\";\nsetParent -menu ..;\n//\nmenuItem -label \"key\" -subMenu true -to true;\n menuItem -l \"-sel-|\" -c \"lanrenselekeylr(0)\";\t\n menuItem -l \"|-sel-\" -c \"lanrenselekeylr(1)\";\n menuItem -l \" -shan-|\" -c \"lanrenselekeylr(0);cutKey;\";\n menuItem -l \" |-shan-\" -c \"lanrenselekeylr(1);cutKey;\";\n menuItem -divider true;\n menuItem -l \"<o|--\" -c \"MoveKeylr(0,0)\";\n menuItem -l \"o>|--\" -c \"MoveKeylr(0,1)\";\n menuItem -l \"--|<o\" -c \"MoveKeylr(1,0)\";\n menuItem -l \"--|o>\" -c \"MoveKeylr(1,1)\";\n menuItem -divider true;\nsetParent -menu ..;\n//\nmenuItem -l \"A<>B\" -subMenu true -to true;\n menuItem -l \"A<->B/mm\" -c ABjiaohun_keyCP;\n //menuItem -l \" A<>B/one\" -c \"onetimeworkON;ABjiaohun_keyCP;onetimeworkOFF;\";\n menuItem -divider true;\n menuItem -l \"A>B/mm\" -c AB_keyCP;\n menuItem -l \"B>A/mm\" -c BA_keyCP;\nsetParent -menu ..;\n//\nmenuItem -divider true;\nmenuItem -l \"f1234\";\n menuItem -l \"f1234UI\" -ob true -c editorcurvepullfush;\nmenuItem -l \"creatcurve\";\n menuItem -l \"UI\" -ob true -c CuverEditorW;\nsetParent -menu ..;\n//\nmenuItem -divider true;\nmenuItem -l \"csqf1234\" -subMenu true -to true;\n menuItem -l \"csq\" -c \"cs_qwer_work(1)\";\n $OKa=(\"cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation foundnextkey;\");\n $OKb=(\"cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation foundpreviouskey;\");\n $OKc=(\"cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;\");\n $OKc2=(\"cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;\");\n $OKd=(\"lanrenselekeylr(0);string $xuanzhe[] = `keyframe -q -name`;float $allKeys[] = sort(`keyframe -q -sl`);selectKey -rm -k -t $allKeys[0] $xuanzhe;selectKey -rm -k -t $allKeys[(size($allKeys) -1)] $xuanzhe;cs_qwer_work(1);lanrenselekeylr(1);string $xuanzhe[] = `keyframe -q -name`;float $allKeys[] = sort(`keyframe -q -sl`);selectKey -rm -k -t $allKeys[0] $xuanzhe;selectKey -rm -k -t $allKeys[(size($allKeys) -1)] $xuanzhe;cs_qwer_work(1);selectKey -clear;\");\n menuItem -l \" csq|+..> [rV]\" -c $OKa;\n menuItem -l \" <..+|csq [hG]\" -c $OKb;\n menuItem -l \" <..+|csq|+..> [oL]\" -c $OKc;\n menuItem -l \" >..-|csq|-..< [sE]\" -c $OKc2;\n menuItem -l \" |..csq..|||..csq..|\" -c $OKd;\n menuItem -l \" csq*9 [Insert]\" -c jiuci;\n menuItem -l \"   <<csq>>*8 [Home]\" -c baciA;\n menuItem -l \"   >>csq<<*8 [PageUp]\" -c baciB;\n menuItem -l \"------------\";\n menuItem -l \"csw\" -c \"cs_qwer_work(2)\";//cs_qwer_work(25)\n menuItem -l \"   csw*5\" -c wuciA;\n menuItem -l \"cse\" -c \"cs_qwer_work(3)\";//cs_qwer_work(35),cs_qwer_work(100)\n menuItem -l \"csr\" -c \"cs_qwer_work(4)\";\n menuItem -l \"   csr*9\" -c jiuciB;\n\n menuItem -divider true;\n menuItem -l \"|.f1.|>|<|.f4.|\" -c \"keywork_f1f4(1)\";\n menuItem -l \"|<.f1f4.>|\" -c \"keywork_f1f4(0)\";\n setParent -menu ..;\n}\n//\nproc jiuci(){progressWindow -t \"wait\" -st \"......\";cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);cs_qwer_work(1);progressWindow -ep;}\nproc jiuciB(){progressWindow -t \"wait\" -st \"......\";cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);cs_qwer_work(4);progressWindow -ep;}\nproc wuciA(){progressWindow -t \"wait\" -st \"......\";cs_qwer_work(2);cs_qwer_work(2);cs_qwer_work(2);cs_qwer_work(2);cs_qwer_work(2);progressWindow -ep;}\n\n\nproc baciA(){progressWindow -t \"wait\" -st \"......\";\ncs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;\ncs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWplus;\nprogressWindow -ep;}\nproc baciB(){progressWindow -t \"wait\" -st \"......\";\ncs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;\ncs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;cs_qwer_work(1);CurveOperation selkeya_b;CurveOperation selectKeyWminus;\nprogressWindow -ep;}\n\nglobal proc keywork_f1f4(int $fixonoff){//1=|>--<| xiang zhongjian kao long\nglobal string $selcurves[];//0=|<-->| xiang liangbian kao long\nglobal float $FrameA;\nglobal float $FrameB;son;\nif($fixonoff==1){\nint $mid=($FrameA+$FrameB)/2;\nselectKey -k -t ($FrameA+\":\"+$mid) $selcurves;\nacktooluse(10);\nselectKey -k -t ($mid+\":\"+$FrameB) $selcurves;\nacktooluse(7);\nselectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\nprint \"|>--Fix--<|\";\n}else if($fixonoff==0){\nselectKey -rm -k -t $FrameB $selcurves;\nacktooluse(10);\nselectKey -tgl -k -t $FrameB $selcurves;\nselectKey -rm -k -t $FrameA $selcurves;\nacktooluse(7);\nselectKey -tgl -k -t $FrameA $selcurves;\nprint \"|<--unFix-->|\";\n}\n}" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "階層構造ビューを使用して、シーン内のノードのリレーションシップを視覚的に表示および編集します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ハイパーグラフ: 階層" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "hypergraph.png" 
        -image1 "hypergraph.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "HypergraphHierarchyWindow" 
        -sourceType "mel" 
        -doubleClickCommand "global proc closeuihype(){\nif(`menu -exists motionhelpworkB`){\ndeleteUI motionhelpworkB;\n}else{motionhelpworkB;}\n}closeuihype;\n\nglobal proc motionhelpworkB() {\nif(`menu -exists motionhelpworkB`){deleteUI motionhelpworkB;}\nstring $hpyEditor[] = `getPanel -scriptType hyperGraphPanel`;\nprint $hpyEditor;\nsetParent $hpyEditor;\nmenu -l \"select\" -to true -aob true motionhelpworkB; \nmenuItem -l \"channelA\" -c ChannelSet;\nmenuItem -l \"channelB\" -c ChannelSetb;\nmenuItem -l \"channelC\" -c ChannelSetc;\n//menuItem -l \"addaimrig\" -c addaimrig;\n menuItem -divider true;\nmenuItem -l \"addretarget_gu3sel>go\" -c addretarget;\nmenuItem -l \"elbow_knee_Bestposition_gu3+pvRig>go\" -c elbow_knee_Bestposition;\nmenuItem -l \"         minmax\" -c minmax_elbow_knee_Bestposition;\n menuItem -divider true;\nmenuItem -l \"check_zhouxi gu>go\" -c querenLelbowknee;\nsetParent -menu ..;\n}\n//////////////////\nChannelSet;deleteUI quickchannelw;\nChannelSetb;deleteUI quickchannelbw;\nChannelSetc;deleteUI quickchannelcw;\n//addaimrig;deleteUI addaim;\n//////////////////\nglobal proc addretarget(){//gu3sele>go\nstring $threesele[]=`ls-sl`;\ndanxuanfast;                            pickWalk -d up;\nGetFormLocator3;rename \"GGG\";\nstring $GGG[]=`ls-sl`;\nselect $threesele[0] $threesele[2] $GGG;\nduochongcon(1);\nselect $threesele[1] $GGG;\naimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType \"object\" \n-worldUpObject $threesele[0];\nselect $GGG;GetFormLocator3;\n\nstring $renames=$threesele[0];\nselect -r GGG GGG_pointConstraint1 GGG_aimConstraint1 GGG_L ;\ngaimingzi($threesele[0]+\"_\");\ndanxuanlast;\nprint \"addretarget\";\n}//addretarget;\n//////////////////\n//////////////////\nglobal proc elbow_knee_Bestposition(){//gu3+pvRig\nstring $xuanzesige[]=`ls-sl`;\nselect -d $xuanzesige[3];\nstring $Joint[]=`ls-sl`;//3 joint\nstring $parent[];\nfor($i=0;$i<3;$i++){\nselect $Joint[$i];\naddlot;\nstring $sss[]=`ls-sl`;\n$parent[$i]=$sss[0];\n}\nparent $parent[2] $parent[1];\nparent $parent[1] $parent[0];\nselect $parent;\naddretarget;\ndanxuanlast;\nmove -r -os -wd 0.8 0 0 -puv;\nselect -tgl $xuanzesige[3];\nsunxujiaohuan;\nMatchTranslation;\ndelete $parent[0];\nselect $xuanzesige;\n}//elbow_knee_Bestposition;\n//////////////////\n//////////////////\nglobal proc minmax_elbow_knee_Bestposition(){\nglobal float $jiluselkeys[];\nselectKey;\ndingtimeB;\nselectKey -clear;\nfor( $a in $jiluselkeys){\ncurrentTime $a;\nelbow_knee_Bestposition;\n}}//minmax_elbow_knee_Bestposition;\n//////////////////\n//////////////////\nglobal proc querenLelbowknee(){//sel zhou xi joint\nstring $zhouxigu[]=`ls-sl`;\nif(`objExists qinglimenhu`){select \"qinglimenhu*\";PickWalkUp;PickWalkUp;delete;}\nselect $zhouxigu;\nif(size(`ls-sl`)!=0){\nfor($a in `ls-sl`){\nselect $a;\nstring $Joint[] = `ls-sl`;\npickWalk -d up;\nstring $Joint0[] = `ls-sl`;\naddlot;\nrename \"NiMeiA0_D\";\nselect $Joint;\naddlot;\nrename \"NiMeiA0\";joint -p 0 0 0;rename \"qinglimenhu\";alljontradius(0.01);\nparent NiMeiA0 NiMeiA0_D;\nselect -r NiMeiA0_D NiMeiA0 ;outlinecolor(111);\ngaimingzi($Joint[0]+\"_\");lotshape_gai(0.1);\n}\nselect \"qinglimenhu*\";\nPickWalkUp;sonbakeO;\n\n//unKrx;unKry;selectKey -clear ;\nsetKeyframe -insert -time -100;\nselectKey -add -k -t -100 ;\nCurveOperation allzero;\nfilterCurve;\nselectKey -clear ;\nselectKey -add -k -t -100 ;\ncutKey -clear ;\n\nselectKey -clear ;\nselectKey -add -k \"*NiMeiA0_rotateX\";\nselectKey -add -k \"*NiMeiA0_rotateY\";\nGraphEditorLockChannel;\nselectKey -clear ;\n$createSetResult = `sets -name \"X__zhoucheck\"`;\n}else{\nprint \"sele zhou_lr xi_lr gu>go\";\n}}//querenLelbowknee;" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Display" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Display" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Display" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconDisplay.png" 
        -image1 "menuIconDisplay.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "if(size(`ls-sl`)!=0){\n\nstring $seeelA[]=`ls-sl`;\nselect -cl;SelectIsolate;\n\nif(`objExists \"*:model:model\"`){\nselect \"*:model:model\";\n}else{\nselect `ls -type mesh`;\n}\nselect -add $seeelA;\nToggleIsolateSelect;\nselect -cl;\n}//else{showONFF(99);}" 
        -sourceType "mel" 
        -doubleClickCommand "global proc showONFF(int $type){//0.1>gu+lot 10.11>Wireframe+ray 2021>add+sub \nglobal int $onoff;\nif($onoff==0){$onoff=1;}else if($onoff==1){$onoff=0;}\nfor($panelName in `getPanel -typ modelPanel`){\nif($type==0){modelEditor -e -joints $onoff $panelName;inViewMessage -smg \"joint onoff\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 100;}\nelse if($type==1){modelEditor -e -locators $onoff $panelName;inViewMessage -smg \"lot onoff\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 100;}\nelse if($type==2){modelEditor -e -nurbsCurves $onoff $panelName;inViewMessage -smg \"nurbsCurve onoff\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 100;}\nelse if($type==3){modelEditor -e -polymeshes $onoff $panelName;inViewMessage -smg \"poly onoff\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 100;}\nelse if($type==4){modelEditor -e -ikHandles $onoff $panelName;}\n\nelse if($type==10){modelEditor -e -wos $onoff $panelName;}\nelse if($type==11){modelEditor -e -xray $onoff $panelName;}\n\nelse if($type==20){isolateSelect -addSelected  $panelName;}\nelse if($type==21){isolateSelect -removeSelected  $panelName;}\n\nelse if($type==99){modelEditor -e -allObjects 1 $panelName;}\n}\n}//showONFF(0);" 
        -commandRepeatable 1
        -flat 1
        -mi "//--rig_CV_  <F3" ( "showONFF(2);" )
        -mi "//--poly_  <F6" ( "showONFF(3);" )
        -mi "//--joint_  <F4" ( "showONFF(0);" )
        -mi "//--lot_   <F5" ( "showONFF(1);" )
        -mi "//--IKhandle_" ( "showONFF(4);" )
        -mi "//--iso>sub" ( "showONFF(21);" )
        -mi "//--iso>add" ( "showONFF(20);" )
        -mi "//--ALLL" ( "showONFF(99);" )
        -mi "-------------" ( "" )
        -mi "work_style" ( "global int $worklayout;\nif($worklayout==0){$loopfF1view=1;\ntoggleShelfTabs;\nToggleStatusLine;\nToggleToolbox;\n}else if($worklayout==1){$loopfF1view=0;\ntoggleShelfTabs;\nToggleStatusLine;\nToggleToolbox;\n}" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "シーン内のオブジェクトをリスト表示します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "アウトライナ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "アウトラ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "outliner.png" 
        -image1 "outliner.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "OutlinerWindow" 
        -sourceType "mel" 
        -doubleClickCommand "global proc outlinecolor(float $ss){\nfloat $x;float $y;float $z;float $a;\nif($ss==111){$a=1;$x=1;$y=1;$z=1;}//bai\nif($ss==100){$a=1;$x=1;$y=0;$z=0;}//red\nif($ss==000){$a=1;$x=0;$y=0;$z=0;}//black\nif($ss==110){$a=1;$x=1;$y=1;$z=0;}//yellow\nif($ss==101){$a=1;$x=1;$y=0;$z=1;}//zi\nif($ss==010){$a=1;$x=0;$y=1;$z=0;}//lv\nif($ss==011){$a=1;$x=0;$y=1;$z=1;}//blue1\nif($ss==001){$a=1;$x=0;$y=0;$z=1;}//blue2\nif($ss==0)  {$a=0;$x=0;$y=0;$z=0;}//def\n\nif($ss==107508)  {$a=1;$x=1;$y=0.75;$z=0.8;}//ピンク\nif($ss==1050)    {$a=1;$x=1;$y=0.5;$z=0;}//オレンジ\nif($ss==050505)  {$a=1;$x=0.5;$y=0.5;$z=0.5;}//グレー\n\nfor($ea in `ls-sl`){\nsetAttr ($ea+\".uocol\") $a;\nsetAttr ($ea+\".oclr \")$x $y $z;\n}\n}//outlinecolor( , , );//111bai 100red 000hei 110yel 101zi 010lv 0def\n" 
        -commandRepeatable 1
        -flat 1
        -mi "AAA" ( "global proc RUp_move(){\nreorder -r -1 `ls-sl`;\n}RUp_move;" )
        -mi "VVV" ( "global proc LDown_move(){\nreorder -r 1 `ls-sl`;\n}LDown_move;" )
        -mi "----------------------" ( "" )
        -mi "yellow110" ( "outlinecolor(110);" )
        -mi "red100" ( "outlinecolor(100);" )
        -mi "white111" ( "outlinecolor(111);" )
        -mi "black000" ( "outlinecolor(000);" )
        -mi "purple101" ( "outlinecolor(101);" )
        -mi "green010" ( "outlinecolor(010);" )
        -mi "bluea011" ( "outlinecolor(011);" )
        -mi "orennji1050" ( "outlinecolor(1050);" )
        -mi "pinnku107508" ( "outlinecolor(107508);" )
        -mi "huibai050505" ( "outlinecolor(050505);" )
        -mi "----------------------" ( "" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 3
        -enable 1
        -width 6
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "time" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "time" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -image1 "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "int $t = `timerX -startTime $gGuiStartupTime`;\nabout -cd;about -ct;\nprint (\"Maya使用時間 \"+($t/3600)+\"時間 \"+($t/60)+\"分\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "スクリプト エディタ" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "スクリプト エディタ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "cmdWndIcon.png" 
        -image1 "cmdWndIcon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "ScriptEditor;\n\nint $shuzi = 10;\nint $sass;\nfor($sass = 1;$sass<$shuzi;$sass++){\nstring $ss=(\"modelEditor\"+$sass);\nprint $ss;\nisolateSelect -state 0 $ss;\n}\n//isolateSelect -loadSelected modelEditor1;<<非表示\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "printSel" ( "string $selection[] = `ls -sl`;\nprint \"____________\\n\\n\\nselect \";\nfor($node in $selection){\nprint ($node + \" \");\n}print \";\\n\\n\\n____________\";\n" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "プレイブラスト" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "プレイブラスト" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "playblast.png" 
        -image1 "playblast.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "playblast  -format image -sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 60 -compression \"maya\" -quality 60;\n//PlayblastOptions;" 
        -sourceType "mel" 
        -doubleClickCommand "global proc SPtool_son() {\nif(`window -ex SPtool_sonW` == true )deleteUI SPtool_sonW;\nwindow -t \"test\" -w 50 -h 100 SPtool_sonW;\ncolumnLayout;\nrowLayout -nc 11 -cw2 5 20;\nbutton -h 20 -w 20 -l \" * \" -c \"sidewindow\";\npopupMenu;source \"menu_SetUpson\";\nsetParent ..;\n\nrowLayout -nc 6 -cw2 5 20;\nfloatField -v 0 NNGMA_scale_setField;\nsetParent ..;\n\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -w 100  -l \"playbast_FCheck\" -c playbast_FCheck;\nbutton -h 35 -w 100  -l \"playbast_quicktime\" -c playbast_quicktime;\nmennuu -h 35 -st \"textOnly\" -l \"zzzzz\" -c (\"print \\\"zz\\\\n\\\"\") -bgc 0.35 0.35 0.35  -dcc (\"print \\\"xxxx\\\\n\\\"\");\nsetParent ..;\nshowWindow SPtool_sonW;\n}SPtool_son;\n//\nglobal proc playbast_FCheck(){playblast  -format image -sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 60 -compression \"maya\" -quality 60;}\nglobal proc playbast_quicktime(){playblast  -format qt -sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 50 -compression \"PNG\" -quality 35;}\n///////////////////////////////////\nglobal proc expGOOO(){\nfloat $starttime = `timerX`;\nonCloseCommand;\nsaveOptionBoxSize();//file -f -new;\nsystem (\"load C:/Users/zzzzzzzz/Documents/maya/projects/default/movies\");\n//print \"壁|д･´)----- EA完了\";about -ct;//about -cd;\nfloat $totaltime = `timerX -startTime $starttime`;\nprint (\"use time:\" + $totaltime + \"seconds.\\n\");}\n/////////////////////////////\n/*-\nstring $windowName = \"myDockWin\" ;\nstring $windowName2 = \"myDockGO\" ;\nif( `window -ex $windowName` ){deleteUI $windowName; deleteUI $windowName2;\n}else{sidewindow;}\n-*/\n/////////////////////////////////////////////////////////\nglobal proc sidewindow(){ \nstring $windowName = \"myDockWin\" ;\nif( `window -ex $windowName` ) deleteUI $windowName ;\nstring $myOutliner = `window $windowName`;\nstring $myDock = \"myDockGO\" ;\npaneLayout;columnLayout;\nrowLayout -nc 2 ;\nbutton -w 80 -label \"close\" -c \"deleteUI -control myDockGO\";//$myDock\nsetParent ..;\ntext -label \"\";\nrowLayout -nc 2 ;\nbutton -w 80 -label \"ssss\" -c (\"deleteUI \" + $myDock + \"; ssss;\");\nsetParent ..;\ntext -label \"\";\nrowLayout -nc 2 ;\nbutton -w 80 -label \"vvvv\" -c (\"deleteUI \" + $myDock + \"; vvvv;\") -ann \"def:guding \\n ctr:bake\";\nsetParent ..;\nshowWindow $myOutliner;\n//string $myDock = \"myDockGO\" ;\ndockControl -area \"left\"\n-content $windowName\n-allowedArea \"top\"\n-allowedArea \"bottom\"\n-allowedArea \"left\"\n-allowedArea \"right\" $myDock;\n}" 
        -commandRepeatable 1
        -flat 1
        -mi "//FCheck" ( "playblast  -format image -sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 60 -compression \"maya\" -quality 60;\n" )
        -mi "//avi" ( "playblast -format avi -sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 100 -compression \"none\" -quality 100 -widthHeight 720 480;\n/*-\nint $luan = rand(100);\nstring $shijiancha = `date -format \"YYYY,MM,DD,hh,mm,ss\"`;\n$mayapath =`file -q -sceneName`;\n$name =`basename $mayapath \".ma\"`;\n$path =`dirname($mayapath)`;\n$aviname =$path + \"/\" + $name + \"__\" +$shijiancha;print $aviname;\n\nplayblast -format avi -filename $aviname\n-sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 100 \n-compression \"none\" -quality 100 -widthHeight 720 480;\n" )
        -mi "//保存" ( "int $rann = rand(9);\nstring $fileName = `file -q -sn -shn`;\n$res = `substituteAllString $fileName \".ma\" \"\"`;\nplayblast  -format avi -filename (\"C:/Users/taii.son/Videos/playbast/\"+$res+\"_\"+$rann+\".avi\") \n-sequenceTime 0 -clearCache 1 -viewer 1 -showOrnaments 1 -fp 4 -percent 50 \n-compression \"none\" -quality 70;" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ackDeleteRedundant" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ackDeleteRedundant" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ackDeleteRedundant" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "setKeyframe.png" 
        -image1 "setKeyframe.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "if(`keyframe -an keys -q -kc`==0){\nselectKey ;}else{\n$keyjigee=`keyframe -an keys -q -kc`;\nackDeleteRedundant;\n$keyjigeneww=`keyframe -an keys -q -kc`;\nselectKey -clear;\nprint ($keyjigee+\">>>\"+$keyjigeneww);\n}" 
        -sourceType "mel" 
        -doubleClickCommand "//CCedit;\n\nglobal proc zhuanshancon(int $zz){\nstring $sell[]=`ls-sl`;\nfor($X in `ls-sl`){\nselect $X;\nif($zz==1){delete `pointConstraint`;}\nelse if($zz==2){delete `orientConstraint`;}\nelse if($zz==3){delete `parentConstraint`;}\nelse if($zz==4){delete `aimConstraint`;}\n}select $sell;\n}\nprint \"zhuanshancon(1>P 2>O 3>par 4>aim)\";\n\n" 
        -commandRepeatable 1
        -flat 1
        -mi "AriAniKeyScale   XX" ( "AriAniKeyScale" )
        -mi "AriAniKeySmooth" ( "AriAniKeySmooth" )
        -mi "AriRenamer" ( "AriRenamer" )
        -mi "AriSortOutliner" ( "string $selll[]=`ls-sl`;\nselect -cl;\nAriSortOutliner;\n//AriSortOutliner_GO();\nselect $selll;" )
        -mi "        |_Set <中身ソート,printする" ( "// 選択されたセットを取得\nstring $sel[] = `ls -sl`;\nif (size($sel) == 0) {\n    error \"セットを選択してください。\";\n}\nstring $set = $sel[0];\n// セットのメンバーを取得\nstring $members[] = `sets -q $set`;\n// 名前順にソート（簡易バブルソート）\nint $n = size($members);\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n        if (strcmp($members[$i], $members[$j]) > 0) {\n            string $temp = $members[$i];\n            $members[$i] = $members[$j];\n            $members[$j] = $temp;\n        }\n    }\n}// 結果を表示\nprint(\"Set \\\"\" + $set + \"\\\" のメンバー（名前順）:\\n\");\nfor ($m in $members) {\n    print(\"select -add \" + $m + \";\\n\");\n}" )
        -mi "----------------------" ( "" )
        -mi "zhuanshancon(1);>P" ( "zhuanshancon(1)" )
        -mi "zhuanshancon(2);>O" ( "zhuanshancon(2)" )
        -mi "zhuanshancon(3);>PO" ( "zhuanshancon(3)" )
        -mi "zhuanshancon(4);>aim" ( "zhuanshancon(4)" )
        -mi "真--------------name" ( "import maya.cmds\ndef SelectNode():\n SelLists=cmds.ls(sl=True , l=True)\n return(SelLists)\nprint SelectNode()" )
        -mip 10
        -mi "----------------------" ( "" )
        -mi "//Ocon_X" ( "orientConstraint -mo -skip y -skip z -weight 1;" )
        -mi "//Ocon_Y" ( "orientConstraint -mo -skip x -skip z -weight 1;" )
        -mi "//Ocon_Z" ( "orientConstraint -mo -skip x -skip y -weight 1;" )
        -mi "/-/AIPcon" ( "AIPcon;" )
        -mi "/-/AIOcon" ( "AIOcon;\n" )
        -mi "/-/DeleteConstraints" ( "DeleteConstraints;" )
        -mi "----------------------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "BookmarkManager;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "BookmarkManager;" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "BookmarkManager" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "Bookmark.png" 
        -image1 "Bookmark.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "BookmarkManager;" 
        -sourceType "mel" 
        -doubleClickCommand "seledingtimeE;" 
        -commandRepeatable 1
        -flat 1
        -mi "緑" ( "///0.3, 0.8, 0.4緑///0.5 0.5 0.5灰///1 0 1紫///0 0 1青///1 0 0赤\nglobal proc timeslideMeMo(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(0.3, 0.8, 0.4))\";\ncurrentTime $nowwwwtime;\n}timeslideMeMo;" )
        -mi "赤" ( "global proc timeslideMeMo(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(1,0,0))\";\ncurrentTime $nowwwwtime;\n}timeslideMeMo;" )
        -mi "灰" ( "global proc timeslideMeMo(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(0.5,0.5,0.5))\";\ncurrentTime $nowwwwtime;\n}timeslideMeMo;" )
        -mi "紫" ( "global proc timeslideMeMo(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(1,0,1))\";\ncurrentTime $nowwwwtime;\n}timeslideMeMo;" )
        -mi "青" ( "global proc timeslideMeMo(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(0,0,1))\";\ncurrentTime $nowwwwtime;\n}timeslideMeMo;" )
        -mi "オレンジ" ( "global proc timeslideMeMo(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(1, 0.5, 0))\";\ncurrentTime $nowwwwtime;\n}timeslideMeMo;" )
        -mi "-----------" ( "" )
        -mi "       |_sel key > Go" ( "if(`objExists \"timeSliderBookmark*\"`){\nstring $sellrigg[]=`ls-sl`;dingtimeE;\nselect \"timeSliderBookmark*\";delete;\nselect $sellrigg;seledingtimeE;}\njiluKEYpose;\nSeleagain;//F12 jilu\n////////////\nglobal proc dingtimeE(){\nglobal float $jiluselkeysE[];\nclear $jiluselkeysE;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$jiluselkeysE[$p]=$newaa[0];\n}}}//dingtimeE;\n////////////////\nglobal proc seledingtimeE(){\nglobal float $jiluselkeysE[];selectKey -clear ;\nfor($b in $jiluselkeysE){\nselectKey -add -k -t $b `keyframe -q -name`;\n}}//seledingtimeE;\n\n////////////\nglobal proc jiluKEYpose(){//timesider keypose jilu\nint $kaishitime = `playbackOptions -q -minTime`;\nint $jieshutime = `playbackOptions -q -maxTime`;\n\nfloat $jiluweizhi[];\n$selkey=sort(`keyframe -q -sl`);\ndingtimeE;\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$jiluweizhi[$p]=$newaa[0];\nprint (\"<\"+$jiluweizhi[$p]+\">\");\n//int $dangqian=`currentTime -q`;\nif($jiluweizhi[$p]==$kaishitime||$jiluweizhi[$p]==$jieshutime){print \"X\";}\nelse{currentTime $jiluweizhi[$p];timeslideAUTO;}\n}\n}\ncurrentTime $kaishitime;timeslideAUTO;\ncurrentTime $jieshutime;timeslideAUTO;\nseledingtimeE;\n}\n////////////\nglobal proc timeslideAUTO(){\n$nowwwwtime=`currentTime -q`;\npython \"import maya.cmds as cmds\";\npython \"import maya.plugin.timeSliderBookmark.timeSliderBookmark as timeSliderBookmark\";\npython \"timeSliderBookmark.createBookmark(name='XXX', start=cmds.currentTime(query=True), stop=cmds.currentTime(query=True)+1, color=(0.1, 0.1, 0.1))\";\ncurrentTime $nowwwwtime;\n}//timeslideAUTO;" )
        -mi "             |__seledingtimeE" ( "seledingtimeE;" )
        -mi "             |_clear Bookmark" ( "if(`objExists \"timeSliderBookmark*\"`){\nstring $sellrigg[]=`ls-sl`;dingtimeE;\nselect \"timeSliderBookmark*\";delete;\nselect $sellrigg;seledingtimeE;\n}" )
        -mi "-----------" ( "" )
        -mi "-----------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "matchAB" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "matchAB" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "matchAB" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "doubleHorizArrow.png" 
        -image1 "doubleHorizArrow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc MMmatch(int $ding){//0>Rotation 1>Translation 3>T+O\nCurveOperation2 seleminmax;\ndingtimeB;\nglobal float $jiluselkeys[];\nfor($b in $jiluselkeys){\ncurrentTime $b;\nif($ding==1){MatchTranslation;}\nelse if($ding==0){MatchRotation;}\nelse if($ding==3){MatchTranslation;MatchRotation;}\n}selectKey -clear;\n}print \"MMmatch(1)>T (0)>O (3)>TO\\n\";\n\n\n/*-\nstring $selected[] = ｀ls -sl｀;\nfloat $WSpos[] = ｀xform -q -ws -t $selected｀;\nfloat $WSrot[] = ｀xform -q -ws -ro $selected｀;\nint $i;\nfor($i=1; $i < size($selected); $i++){\neval(\"xform -ws -t \"+$WSpos+\" \"+$WSpos+\" \"+$WSpos+\" \"+$selected[$i]);\neval(\"xform -ws -ro \"+$WSrot+\" \"+$WSrot+\" \"+$WSrot+\" \"+$selected[$i]);\n}-*/" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "A>BBBB_LtL_orient" ( "global proc A_B_for_work_2(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $B){\nselect $A $B[$cnt2];\nLtL_orient;\n$cnt2++;\n}\n}A_B_for_work_2;\n" )
        -mi "A>BBBB_LtL_point" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $B){\nselect $A[$cnt2] $B[$cnt2];\nLtL_point;\n$cnt2++;\n}\n}A_B_for_work_4;\n" )
        -mi "---------------" ( "\n" )
        -mi "AA>BB_AIOcon" ( "global proc A_B_for_work_3(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $A){\nselect $A[$cnt2] $B[$cnt2];//A>B\n\nAIOcon;\n\n$cnt2++;\n}\n}A_B_for_work_3" )
        -mi "AA>BB_Ocon__offset OFF" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $A){\nselect $A[$cnt2] $B[$cnt2];//A>B\norientConstraint -offset 0 0 0 -weight 1;\n$cnt2++;\n}\n}A_B_for_work_4" )
        -mi "AA>BB_Ocon__offset ON" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $A){\nselect $A[$cnt2] $B[$cnt2];//A>B\norientConstraint -mo -weight 1;\n$cnt2++;\n}\n}A_B_for_work_4" )
        -mi "---------------" ( "\n" )
        -mi "AA>BB_AIPcon" ( "global proc A_B_for_work_5(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $A){\nselect $A[$cnt2] $B[$cnt2];//A>B\nAIPcon;\n$cnt2++;\n}\n}A_B_for_work_5" )
        -mi "AA>BB_Pcon__offset OFF" ( "global proc A_B_for_work_6(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $A){\nselect $A[$cnt2] $B[$cnt2];//A>B\npointConstraint -offset 0 0 0 -weight 1;\n$cnt2++;\n}\n}A_B_for_work_6" )
        -mi "AA>BB_Pcon__offset ON" ( "global proc A_B_for_work_6(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $A){\nselect $A[$cnt2] $B[$cnt2];//A>B\npointConstraint -mo -weight 1;\n$cnt2++;\n}\n}A_B_for_work_6" )
        -mi "---------------" ( "\n" )
        -mi "A+B>>MMmatch(0) R" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $B){\nselect $A[$cnt2] $B[$cnt2];\nMMmatch(0);\n$cnt2++;\n}\n}A_B_for_work_4;\n" )
        -mi "         |_A+B>>O" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $B){\nselect $A[$cnt2] $B[$cnt2];\nMatchRotation;\n$cnt2++;\n}\n}A_B_for_work_4;\n" )
        -mi "A+B>>MMmatch(1) T" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $B){\nselect $A[$cnt2] $B[$cnt2];\nMMmatch(1);\n$cnt2++;\n}\n}A_B_for_work_4;\n" )
        -mi "         |_A+B>>T" ( "global proc A_B_for_work_4(){\t\nglobal string $A[];\nglobal string $B[];\t\nint $cnt2 = 0;\nfor ($val in $B){\nselect $A[$cnt2] $B[$cnt2];\nMatchTranslation;\n$cnt2++;\n}\n}A_B_for_work_4;\n" )
        -mi "---------------" ( "" )
        -mi "T   <c+8" ( "MatchTranslation;" )
        -mi "O   <c+9" ( "MatchRotation;" )
        -mi "TO <c+0" ( "MatchTranslation;MatchRotation;" )
        -mi "M-key-M_T" ( "MMmatch(1);" )
        -mi "M-key-M_O" ( "MMmatch(0);" )
        -mi "M-key-M_TO" ( "MMmatch(3);" )
        -mi "---------------" ( "" )
        -mi "---------------" ( "" )
        -mi "---------------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Cam" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Cam" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "animTurntable.png" 
        -image1 "animTurntable.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "AnimationTurntableOptions;\nGoToDefaultView;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "selcam>rangM-M" ( "string $activeView = `getPanel -withFocus`;\nstring $camName = `modelPanel -q -cam $activeView`; \nselect $camName;\nrangeworkA;\n" )
        -mi "---------------------------------" ( "\n" )
        -mi "genzong  sel>go" ( "global proc genzongcam(){\nif(size(`ls-sl`)==0){\n$getcam = `getPanel -wf`;\n\t\t\t\tstring $camera = `modelPanel -q -camera $getcam`; \n\t\t\t\teval select `getCameraNode view $camera` `getCameraNode up $camera` $camera;\n\t\t\t\tautoUpdateAttrEd;\n\t\t\t\tstatusLineUpdateInputField;\n}else{\nstring $sel[]=`ls-sl`;\ncamera;rename \"genzongcam\";\ngroup;rename \"camoffset\";\ngroup;rename \"camoya\";outlinecolor(1050);\nselect $sel camoya;\nAIPcon;AIOcon;\nmove -r -os -wd 0 -60 0 camoffset;\nsetAttr \"camoffset.rotateY\" 90;\nsetAttr \"camoffset.rotateX\" 90;\nlookThroughModelPanel genzongcam modelPanel4;\ntearOffCopyItemCmd modelPanel modelPanel4;\nlookThroughModelPanel persp modelPanel4;\n}\n}genzongcam;" )
        -mi "copycam" ( "global proc copycamwindow(){\nif(`objExists persp1`) {\ndelete persp1;\n}else{\nCreateCameraFromView;//ビューからカメラを作成c+s+c\nselect -r persp1 ;\nstring $selecam[]=`ls-sl`;\n\tstring $allPanels[] = `getPanel -typ modelPanel`;\n\t    lookThroughModelPanel $selecam[0] $allPanels[0];\n\t    tearOffCopyItemCmd modelPanel $allPanels[0];\n\t    select -cl;\n\t    lookThroughModelPanel persp $allPanels[0];\nsetNamedPanelLayout \"sdw3\";\n}\n}copycamwindow;\n\n/*-\n$getcam = `getPanel -wf`;\nstring $camera = `modelPanel -q -camera $getcam`; \neval select `getCameraNode view $camera` `getCameraNode up $camera` $camera;\nautoUpdateAttrEd;\nstatusLineUpdateInputField;\n-*/" )
        -mi "cam>eyeLevel_line" ( "string $selcommm[]=`ls-sl`;\npolyPlane -w 1 -h 1 -sx 10 -sy 10 -ax 0 1 0 -cuv 2 -ch 1;\nrename \"eyeLevel_lineeeeee\";outlinecolor(110);\nsetAttr \"eyeLevel_lineeeeee.scaleZ\" 50;\nsetAttr \"eyeLevel_lineeeeee.scaleX\" 50;\nsetAttr \"eyeLevel_lineeeeee.scaleY\" 50;\n\npointConstraint -offset 0 0 0 -weight 1 $selcommm[0] eyeLevel_lineeeeee;\nselect -r eyeLevel_lineeeeee ;\n" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
        -mi "User menuItem" ( "print(\"User defined menuItem\");" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "プレーン" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "プレーン" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyMesh.png" 
        -image1 "polyMesh.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc buildplan(){\npolyPlane -w 1 -h 1 -sx 10 -sy 10 -ax 0 1 0 -cuv 2 -ch 1; objectMoveCommand;\nscale -r 30 1 30;\nstring $madeplan[]=`ls-sl`;\nsetAttr ($madeplan[0]+\".overrideEnabled\") 1;\nsetAttr ($madeplan[0]+\".overrideDisplayType\") 2;\nsetAttr \"polyPlane1.subdivisionsHeight\" 2;\nsetAttr \"polyPlane1.subdivisionsWidth\" 2;\nselect -cl  ;\n\nif( `objExists planeface` ) {\nselect -r $madeplan;\nsets -e -forceElement planefaceSG;\n}else{\nshadingNode -asShader surfaceShader;rename \"planeface\";\nsets -renderable true -noSurfaceShader true -empty -name planefaceSG;\nconnectAttr -f planeface.outColor planefaceSG.surfaceShader;\nsetAttr \"planeface.outColor\" -type double3 0.068 0.068 0.125 ;\nselect -r $madeplan;\nsets -e -forceElement planefaceSG;\n}\n\nselect $madeplan;\n}buildplan;\nrename \"pPlane____lan\";" 
        -sourceType "mel" 
        -doubleClickCommand "if( `objExists planeface` ){\nselect -r planeface;delete;\n} //{delete planeface planefaceSG pPlane1;}\n\nif( `objExists pPlane____lan` ) {\ndelete pPlane____lan;}" 
        -commandRepeatable 1
        -flat 1
        -mi "CreatePolygonPyramid" ( "global proc buildPyramidGo(){\nstring $xuanzepanduan[]=`ls-sl`;\nif(`size ($xuanzepanduan)`!=0){\nbuildPyramid;\nstring $pyramid[]=`ls-sl`;\nselect -tgl $xuanzepanduan;\nsunxujiaohuan;\npointConstraint -weight 1;\npointConstraint -remove; \nselect $pyramid[0];\n}else{\nbuildPyramid;\n}\n}buildPyramidGo;\n\nglobal proc buildPyramid(){\nCreatePolygonPyramid;\nstring $pyramid[]=`ls-sl`;\nselect -r ($pyramid[0]+\".vtx[4]\");\nmove -r 0 -0.353553 0 ;\nselect -r ($pyramid[0]+\".vtx[0:3]\");\nscale -r -p 0cm -0.353553cm 0cm 0.226662 1 0.226662 ;\nselect -r $pyramid[0];\nsetAttr ($pyramid[0]+\".scaleX\") 80;\nsetAttr ($pyramid[0]+\".scaleY\") 80;\nsetAttr ($pyramid[0]+\".scaleZ\") 80;\n}" )
        -mi "ShatterOptions" ( "ShatterOptions;" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Studio Library" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Studio Library" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "StudioLibrary" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/taii.son/Documents/maya/2024/ja_JP/scripts/studiolibrary-2.18.1/src/studiolibrary/resource/icons/icon.png" 
        -image1 "C:/Users/taii.son/Documents/maya/2024/ja_JP/scripts/studiolibrary-2.18.1/src/studiolibrary/resource/icons/icon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "\n# -----------------------------------\n# Studio Library\n# www.studiolibrary.com\n# -----------------------------------\n\nimport os\nimport sys\n    \nif not os.path.exists(r'C:\\Users\\taii.son\\Documents\\maya\\2024\\ja_JP\\scripts\\studiolibrary-2.18.1\\src'):\n    raise IOError(r'The source path \"C:\\Users\\taii.son\\Documents\\maya\\2024\\ja_JP\\scripts\\studiolibrary-2.18.1\\src\" does not exist!')\n\n\nif r'C:\\Users\\taii.son\\Documents\\maya\\2024\\ja_JP\\scripts\\studiolibrary-2.18.1\\src' not in sys.path:\n    sys.path.insert(0, r'C:\\Users\\taii.son\\Documents\\maya\\2024\\ja_JP\\scripts\\studiolibrary-2.18.1\\src')\n    \nimport studiolibrary\nstudiolibrary.main()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "タイプ" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "タイプ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyType.png" 
        -image1 "polyType.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "createTypeCallback();\n//sets -e -forceElement typeBlinn1SG;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "CreateAnnotateNode" ( "CreateAnnotateNode;\nmodelEditor -e -dimensions true \"modelPanel*\";" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "インタラクティブ再生" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "インタラクティブ再生" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "interactivePlayback.png" 
        -image1 "interactivePlayback.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "GoToMinFrame;\nInteractivePlayback;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "HumanIK" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "HumanIK" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "HIK" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "humanIK_CharCtrl.png" 
        -image1 "humanIK_CharCtrl.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "HIKCharacterControlsTool;\n\nglobal proc HIKW(){\nif(`window -ex hikW` == true )deleteUI hikW;\nwindow -t \"hikW\" -w 50 -h 100 hikW;\ncolumnLayout;\nrowLayout -nc 9;\nbutton -w 110 -l \"IK・FKsel(ac mp)\" -c selHIK;\nbutton -w 110 -l \"I・FKsetkey(ac ge)\" -c setkeyHIK;\nbutton -w 110 -l \">1＆key(v)\" -c addkeyHIK1F;\nbutton -w 110 -l \"1＆key<(c)\" -c addkeyHIK_F;\nbutton -w 80 -l \">key(ac ol)\" -c \"setkeyHIK;NextKey\";\nbutton -w 80 -l \"key<(ac hg)\" -c \"setkeyHIK;PreviousKey\";\nsetParent ..;\n\nrowLayout -nc 9;\nbutton -w 54 -l \"IK\" -c selHIKIK;\npopupMenu;\n menuItem -l \"ブレンドTR>ON\" -c \"humanikBrentOnoff(1)\";\n menuItem -l \"ブレンドTR>OFF\" -c \"humanikBrentOnoff(0)\";\nbutton -w 53 -l \"FK\" -c selHIKFK;\nbutton -w 110 -l \"selrig>key(cs ge)\" -c setkeyHIK_sel;\nbutton -w 110 -l \">1＆key(v ol)\" -c \"setkeyHIK_sel;NextFrame\";\nbutton -w 110 -l \"1＆key<(c ol)\" -c \"setkeyHIK_sel;PreviousFrame\";\nbutton -w 80 -l \">key(cs ol)\" -c \"setkeyHIK_sel;NextKey\";\nbutton -w 80 -l \"key<(cs hg)\" -c \"setkeyHIK_sel;PreviousKey\";\nsetParent ..;\n\nrowLayout -nc 9;\nbutton -w 162 -l \"alltime>setkey\" -c HIKsetkeysALL;\nbutton -w 80 -l \"mirror\" -c MirrorPose;\nbutton -w 80 -l \">1F\" -c mirrorkeyHIK1F;\nbutton -w 80 -l \"1F<\" -c mirrorkeyHIK_F;\nsetParent ..;\n\nrowLayout -nc 9;\nbutton -w 80 -l \"R_arm\" -c RarmRigsel;\nbutton -w 80 -l \"L_arm\" -c LarmRigsel;\nbutton -w 80 -l \"All_arm\" -c allarmRigsel;\nsetParent ..;\n\nrowLayout -nc 9;\nbutton -w 80 -l \"R_leg\" -c RlegRigsel;\nbutton -w 80 -l \"L_leg\" -c LlegRigsel;\nbutton -w 80 -l \"All_leg\" -c alllegRigsel;\nbutton -w 80 -l \"arm+leg\" -c all_arm_leg;\n\nsetParent ..;\nrowLayout -nc 9;\nbutton -w 80 -l \"xiong\" -c All_xiong;\nbutton -w 80 -l \"head\" -c All_head;\nbutton -w 80 -l \"kosi\" -c koshii;\nbutton -w 80 -l \"body\" -c All_body;\n\nbutton -w 110 -l \"LtL-LtW>\" ;\ntext \"|-\";popupMenu -button 1;menuItem -l xx -c \"\";popupMenu;source \"menu_SetUpson\";\nbutton -w 40 -l \"T\" -c \"humanikAddlot(1)\";\nbutton -w 40 -l \"O\" -c \"humanikAddlot(2)\";\nbutton -w 40 -l \"TO\" -c \"humanikAddlot(3)\";\nsetParent ..;\n\nshowWindow hikW;\n}HIKW;" 
        -sourceType "mel" 
        -doubleClickCommand "global proc selHIKIK(){select -cl;hikAddToSelection(\"IK\");}\nglobal proc selHIKFK(){select -cl;hikAddToSelection(\"FK\");}\nglobal proc selHIK(){\nselect -cl;hikAddToSelection(\"IK\");hikAddToSelection(\"FK\");\n//キャラクターセット作成//character -name \"CharacterSet1\" -excludeVisibility -excludeScale;\n}\n//////////////\nglobal proc setkeyHIK(){\nhikAddToSelection(\"IK\");\nhikAddToSelection(\"FK\");\nstring $nowselll[]=`ls-sl`;\nsetKeyframe -at translate;\nsetKeyframe -at rotate;\nSetKeyAnimated;\nselect -cl;\nselect $nowselll;\n}\n//////////////\nglobal proc addkeyHIK1F(){\n$curTime = `currentTime -q`;\nsetkeyHIK;\ncurrentTime ($curTime+1);\n}\n//////////////\nglobal proc addkeyHIK_F(){\n$curTime = `currentTime -q`;\nsetkeyHIK;\ncurrentTime ($curTime-1);\n}\n//////////////\n//////////////\nglobal proc setkeyHIK_sel(){\nstring $nowselll[]=`ls-sl`;\nsetKeyframe -at translate;\nsetKeyframe -at rotate;\nSetKeyAnimated;\nselect -cl;\nselect $nowselll;\n}\n//////////////\n//////////////\nglobal proc HIKsetkeysALL(){\nkakusiONs;\nglobal float $jiluselkeys[];\nstring $ser[]=`ls-sl`;\nCurveOperation2 seleminmax;\ndingtimeB;print $jiluselkeys;\nint $shu=`size ($jiluselkeys)`;\nselectKey -clear ;\nfor($i = 0;$i<$shu;$i++){\ncurrentTime $jiluselkeys[$i];print $jiluselkeys[$i];\n//refresh;pause -sec 1;\nonetimeworkON;\nbakeResults -simulation true -t ($jiluselkeys[$i]+\":\"+$jiluselkeys[$i]) -sampleBy 1 \n-oversamplingRate 1 -disableImplicitControl true -preserveOutsideKeys true \n-sparseAnimCurveBake false -removeBakedAttributeFromLayer false \n-removeBakedAnimFromLayer true -bakeOnOverrideLayer false -minimizeRotation true \n-controlPoints false -shape true ;\nsetkeyHIK;\nonetimeworkOFF;\n}\nkakusiOFFs;\n}//HIKsetkeysALL;\n///////////////////////////////////////\nglobal proc mirrorkeyHIK1F(){\n$curTime = `currentTime -q`;\nMirrorPose;\ncurrentTime ($curTime+1);\n}\n//////////////\nglobal proc mirrorkeyHIK_F(){\n$curTime = `currentTime -q`;\nMirrorPose;\ncurrentTime ($curTime-1);\n}\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\nglobal proc RarmRigsel(){\nselect -r \"*:*_Ctrl_RightShoulder\"\n \"*:*_Ctrl_RightArm\"\n \"*:*_Ctrl_RightForeArm\" \n \"*:*_Ctrl_RightHand\" \n \"*:*_Ctrl_RightShoulderEffector\" \n \"*:*_Ctrl_RightElbowEffector\" \n \"*:*_Ctrl_RightWristEffector\"\n \"*:*_Ctrl_RightHandEffector\"\n \"*:*_Ctrl_RightFingerBase\"\n \"*:*_Ctrl_RightHandMiddle1\"  \"*:*_Ctrl_RightHandMiddleEffector\" ;\n}\n//\nglobal proc LarmRigsel(){\nselect -r \"*:*_Ctrl_LeftShoulder\"\n\"*:*_Ctrl_LeftArm\"\n\"*:*_Ctrl_LeftForeArm\"\n\"*:*_Ctrl_LeftHand\"\n\"*:*_Ctrl_LeftShoulderEffector\"\n\"*:*_Ctrl_LeftElbowEffector\"\n\"*:*_Ctrl_LeftWristEffector\"\n\"*:*_Ctrl_LeftHandEffector\"\n \"*:*_Ctrl_LeftFingerBase\"\n \"*:*_Ctrl_LeftHandMiddle1\"  \"*:*_Ctrl_LeftHandMiddleEffector\" ;\n}\n//\nglobal proc allarmRigsel(){\nRarmRigsel;\nstring $selRarm[]=`ls-sl`;\nLarmRigsel;\nstring $selLarm[]=`ls-sl`;\nselect $selRarm $selLarm;\n}\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\nglobal proc RlegRigsel(){\nselect -r \"*:*_Ctrl_RightUpLeg\"\n \"*:*_Ctrl_RightLeg\"\n \"*:*_Ctrl_RightFoot\" \n \"*:*_Ctrl_RightToeBase\" \n \"*:*_Ctrl_RightHipEffector\" \n \"*:*_Ctrl_RightKneeEffector\" \n \"*:*_Ctrl_RightAnkleEffector\"\n \"*:*_Ctrl_RightFootEffector\"\n \"*:*_Ctrl_RightFootIndex1\"  \"*:*_Ctrl_RightFootIndexEffector\" ;\n}\n//\nglobal proc LlegRigsel(){\nselect -r \"*:*_Ctrl_LeftUpLeg\"\n \"*:*_Ctrl_LeftLeg\"\n \"*:*_Ctrl_LeftFoot\" \n \"*:*_Ctrl_LeftToeBase\" \n \"*:*_Ctrl_LeftHipEffector\" \n \"*:*_Ctrl_LeftKneeEffector\" \n \"*:*_Ctrl_LeftAnkleEffector\"\n \"*:*_Ctrl_LeftFootEffector\"\n \"*:*_Ctrl_LeftFootIndex1\"  \"*:*_Ctrl_LeftFootIndexEffector\" ;\n}\n//\nglobal proc alllegRigsel(){\nRlegRigsel;\nstring $selRleg[]=`ls-sl`;\nLlegRigsel;\nstring $selLleg[]=`ls-sl`;\nselect $selRleg $selLleg;\n}\n\n\nglobal proc all_arm_leg(){\nalllegRigsel;\nstring $AAAA[]=`ls-sl`;\nallarmRigsel;\nstring $BBBB[]=`ls-sl`;\nselect $AAAA $BBBB;\n}\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\nglobal proc All_xiong(){\nselect -r \"*:*_Ctrl_Spine\"\n \"*:*_Ctrl_Spine1\"\n \"*:*_Ctrl_Spine2\"\n \"*:*_ChestEndEffector\"\n \"*:*_Ctrl_ChestOriginEffector\";\n}\n//\nglobal proc All_head(){\nselect -r \"*:*_Ctrl_Neck\"\n \"*:*_Ctrl_Neck1\"\n \"*:*_Ctrl_Head\"\n \"*:*_Ctrl_HeadEffector\";\n}\n//\nglobal proc koshii(){\nselect -r \"*:*_Ctrl_HipsEffector\";\n}\n//\nglobal proc All_body(){\nAll_xiong;\nstring $selaa[]=`ls-sl`;\nAll_head;\nstring $selbb[]=`ls-sl`;\nkoshii;\nstring $selcc[]=`ls-sl`;\nselect $selaa $selbb $selcc;\n}\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\nglobal proc humanikAddlot(int $tt){\nstring $selrigs[]=`ls-sl`;\nfor($i = 0;$i<`size($selrigs)`;$i++){\nselect $selrigs[$i];\nstring $selll[]=`ls-sl`;\nCreateLocator;gaimingzi(\"XX_\"+$selll[0]);gaimingzi(\"XX_\");outlinecolor(010);\nstring $lottt[]=`ls-sl`;\nselect $selll[0] $lottt[0];AIPcon;AIOcon; \nselect $lottt[0];sonbakeTO;foundconmubiao;delete;\nif($tt==1){select $lottt[0] $selll[0];putongcon(1);}\nelse if($tt==2){select $lottt[0] $selll[0];putongcon(11);}\nelse if($tt==3){select $lottt[0] $selll[0];putongcon(1);putongcon(11);}\n}\nselect -cl;\n}//humanikAddlot(3);\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\nglobal proc humanikBrentOnoff(int $ol){\nstring $selik[]=`ls-sl`;\nfor($i = 0;$i<`size($selik)`;$i++){\nselect $selik[$i];\nif($ol==0){\nsetAttr ($selik[$i]+\".reachTranslation\") 0;setAttr ($selik[$i]+\".reachRotation\") 0;}\nelse if($ol==1){\nsetAttr ($selik[$i]+\".reachTranslation\") 1;setAttr ($selik[$i]+\".reachRotation\") 1;}\n}select $selik;\n}//humanikBrentOnoff(0)" 
        -commandRepeatable 1
        -flat 1
        -mi "bake joint 3sel>ik" ( "global proc bakegu_ik(){\n//sel3gu\nstring $gusel3[]=`ls-sl`;\naddretarget;\nstring $newlot[]=`ls-sl`;\nsonbakeT;\nselect $gusel3 $newlot;\nminmax_elbow_knee_Bestposition;\nGetFormLocator3;\nmove -r -os -wd 96 0 0 ;\nstring $newlot2[]=`ls-sl`;\nselect $gusel3 $newlot2;\n\n//select gu123+lot\nstring $hone4[]=`ls-sl`;\nselect $hone4[2];\naddlotbake;//LtW_point;\nstring $ikoya[]=`ls-sl`;\nselect $hone4[1];\njoint -e -spa -ch;\nselect $hone4[0] $hone4[2];ikHandle;\nstring $ikadd[]=`ls-sl`;\nselect $hone4[3] $ikadd;\npoleVectorConstraint -weight 1;\nselect $ikoya $ikadd;AIPcon;\nselect $ikoya $hone4[2];AIOcon;\n}//bakegu_ik;" )
        -mi "bake joint 3sel>ik B" ( "global proc bakegu_ikB(){//sel3gu>Go\nstring $gusel3[]=`ls-sl`;\nselect $gusel3[0];\nDuplicate;Unparent;\nrename ($gusel3[0]+\"_\");\nstring $newgu1[]=`ls-sl`;\npickWalk -d down;rename ($gusel3[1]+\"_\");\nstring $newgu2[]=`ls-sl`;\npickWalk -d down;rename ($gusel3[2]+\"_\");\nstring $newgu3[]=`ls-sl`;\n//\nif(`objExists ArmLegHAHAHA`){\nprint \"HAHAHAHAHA\";\n}else{select -cl;doGroup 0 1 1;rename \"ArmLegHAHAHA\";outlinecolor(011);}\n\nselect $newgu1[0];\npickWalk -d up;pickWalk -d up;\nselect -add ArmLegHAHAHA;parent;\n//\nselect $gusel3[0] $newgu1[0];AIPcon;\nselect $newgu1;\nmakeIdentity -apply true -t 0 -r 1 -s 0 -n 0 -pn 1;\nselect $newgu2;joint -e -spa -ch;\nselect $newgu1 $newgu3;ikHandle;\nstring $ikadd[]=`ls-sl`;\n//\nselect $newgu1 $newgu2 $newgu3;\naddretarget;string $newlot[]=`ls-sl`;\nCurveOperation threekeyadd;\nGetFormLocator3;move -r -os -wd 66 0 0 ;\nstring $newlot2[]=`ls-sl`;\nCurveOperation threekeyadd;\npickWalk -d up;pickWalk -d up;sonbakeTO;\n//\nselect $gusel3[2];addbake;\nstring $LOT[]=`ls-sl`;\nselect $LOT[0] $ikadd[0];AIPcon;\n//select $gusel3 $newlot[0];\n//minmax_elbow_knee_Bestposition;\nselect $newlot2 $ikadd[0];\npoleVectorConstraint -weight 1;\n///////\nparent $ikadd[0] ArmLegHAHAHA;\nselect $newgu1[0]$gusel3[0];LtL_orient;select -add ArmLegHAHAHA;parent;\nselect $newgu2[0]$gusel3[1];LtL_orient;select -add ArmLegHAHAHA;parent;\nselect $LOT[0]$gusel3[2];AIOcon;select -cl;\n}//bakegu_ikB;" )
        -mi "反転" ( "//https://www.cg-method.com/maya-humanik-animation/\n//IKしか使えない??\nglobal proc MirrorPose(){\n    print( \"\\n------------ Start MirrorPose() ------------\\n\" );\n    \n    string  $allObjects[];\n    string  $obj;\n    $allObjects = `ls -sl`;               // 選択中のオブジェクトリスト\n    int $nAllObjects = size($allObjects); // 要素数\n    \n    // 退避テーブル\n    float $rotX[];\n    float $transX[];\n    float $rotY[];\n    float $transY[];\n    float $rotZ[];\n    float $transZ[];\n    // 選択対照の情報を退避\n    if( $nAllObjects == 1 )        // 一つ\n    {\n        $transX[0] = `getAttr $allObjects.translateX`;\n        $transY[0] = `getAttr $allObjects.translateY`;\n        $transZ[0] = `getAttr $allObjects.translateZ`;\n        \n        $rotX[0] = `getAttr $allObjects.rotateX`;\n        $rotY[0] = `getAttr $allObjects.rotateY`;\n        $rotZ[0] = `getAttr $allObjects.rotateZ`;\n    }\n    else if( $nAllObjects > 1 )   // 複数\n    {\n        $transX = `getAttr $allObjects.translateX`;\n        $transY = `getAttr $allObjects.translateY`;\n        $transZ = `getAttr $allObjects.translateZ`;\n        \n        $rotX = `getAttr $allObjects.rotateX`;\n        $rotY = `getAttr $allObjects.rotateY`;\n        $rotZ = `getAttr $allObjects.rotateZ`;\n    }\n    \n    // ポーズ反転処理\n    for ( $cnt = 0; $cnt < $nAllObjects; $cnt++ ) \n    {\n        $obj = $allObjects[$nAllObjects - $cnt - 1]; // 逆順で入ってるみたい？\n        $isLR = false;\n        print ($obj + \"　-> \");\n        \n        // 選択対象の名称置き換え\n        if( `gmatch $obj \"*Left*\"` )\n        {\n            $obj  = substituteAllString( $obj, \"Left\", \"Right\" );\n            $isLR = true;\n        }\n        else if( `gmatch $obj \"*Right*\"` )\n        {\n            $obj  = substituteAllString( $obj, \"Right\", \"Left\" );\n            $isLR = true;\n        }\n        else if( `gmatch $obj \"*_L\"` )\n        {\n            $obj  = substituteAllString( $obj, \"_L\", \"_R\" );\n            $isLR = true;\n        }\n        else if( `gmatch $obj \"*_R\"` )\n        {\n            $obj  = substituteAllString( $obj, \"_R\", \"_L\" );\n            $isLR = true;\n        }\n        else if( `gmatch $obj \"*_l\"` )\n        {\n            $obj  = substituteAllString( $obj, \"_l\", \"_r\" );\n            $isLR = true;\n        }\n        else if( `gmatch $obj \"*_r\"` )\n        {\n            $obj  = substituteAllString( $obj, \"_r\", \"_l\" );\n            $isLR = true;\n        }\n        print ($obj + \"\\n\");\n         \n        // 選択反転\n        select -r $obj ;\n        // 座標\n        move ($transX[$cnt] * -1) $transY[$cnt] $transZ[$cnt];\n        \n        // 回転\n        if( `gmatch $obj \"*Effector\"` ) // IK?\n        {\n            // IK\n            rotate ($rotX[$cnt] * -1) ($rotY[$cnt] * -1) $rotZ[$cnt];\n        }else{\n            // FK            \n            if( $isLR ) // 対照リグ？\n            {\n                if( `gmatch $obj \"*Arm\"` )\n                {\n                    // 腕\n                    rotate $rotX[$cnt] $rotY[$cnt] $rotZ[$cnt];\n                }else if(`gmatch $obj \"*Shoulder\"`){\n                    // 肩\n                    rotate $rotX[$cnt] ($rotY[$cnt] * -1) ($rotZ[$cnt] * -1);\n                }else{\n                    // その他\n                    rotate ($rotX[$cnt] * -1) ($rotY[$cnt] * -1) $rotZ[$cnt];\n                }\n            }else{\n                // その他（胴体など）\n                rotate ($rotX[$cnt] * -1) ($rotY[$cnt] * -1) $rotZ[$cnt];\n            }\n        }\n    }    \n    print( \"------------ End MirrorPose() ------------\\n\" );\n}MirrorPose;" )
        -mi "mirror_tool" ( "//coded by tiancg in  2016.7.30\n//this tool is selections tools for Human Ik skeleton.\n//usage: please select a side FK skeleton of HumanIk and run button.\n\nglobal proc tjh_HumanIK_Tools(){\n\tif (`windowPref -exists tjh_HumanIK_Tools_window`)\n\t\t    windowPref -remove  tjh_HumanIK_Tools_window;     \n\t\t\t  if (`window -exists tjh_HumanIK_Tools_window`)\n\t\t\t  deleteUI tjh_HumanIK_Tools_window;\n\twindow  -menuBar true -rtf 1  -w 300 -h 300 tjh_HumanIK_Tools_window;\n\t\t//menu -label \"Help\" ;\n\t\t//\tmenuItem -label \"Help...\" -c \"tjh_HumanIK_Tools_help\";\n\n\t\tmenu -tearOff on -label \"Blog\" tjh_HumanIK_Tools__menu_Blog;\n\t\t\tmenuItem  -label \"Goto Blog...\" -c \"showHelp -absolute \\\"http://blog.csdn.net/tian0000hai\\\"\" tjh_HumanIK_Tools__menuItem_Blog;\n\n\tscrollLayout -childResizable 1 \n\t\t\t     -minChildWidth 300\n\t\t\t     //-backgroundColor 0.1 0.1 0.1 \n\t\t\t     -w 305 \n\t\t\t     //-h 200\n\t\t\t     ;\n\t\t//separator -h 20 -w 300;\n\t\t//text   -fn boldLabelFont  -al \"left\" -l \"    tjh_HumanIK_Tools V1.0  \";\n\t\t//separator -h 20 -w 300;\n\n\t\t//text -w 300 -wordWrap on  -al \"left\" -l \"  このツールは、Human Ik スケルトンの選択ツールです。\\nusage: 使用方法: HumanIk のサイド FK スケルトンを選択し、ボタンを実行してください。\";\n\t\t//text  -w 300   -al \"right\" -l \"  Programmer｣ｺtiancg  \";\n\t\t//text  -w 300   -al \"right\" -l \"  (no green!)(no fix!)2016-7-30  \";\n\n\t\tseparator -h 10 -w 300;\n\t\t\t\n\t\trowColumnLayout -numberOfColumns 2\n\t\t\t-columnWidth 1 150\n\t\t\t-columnWidth 2 150;\t\t\t\n\t\t\t\n\t\t\tbutton  -w 150 -backgroundColor 0.7 1.0 1.0  -label \"Mirror FK To other Side\"  -c \"HK_mirrorPose \\\"mirror\\\"\";\n\n\t\t\tbutton  -w 150 -backgroundColor 1.0 0.7 1.0 -label \"Mirror Swap FK \"  -c \"HK_mirrorPose \\\"swap\\\"\";\n\n\t\t\tseparator -h 10 -w 300;\n\t\t\tseparator -h 10 -w 300;\n\n\t\t\tbutton  -w 150 -backgroundColor 0.7 1.0 1.0  -label \"Select Bones Mirror\"  -c \"HK_mirror_FK_Bone_Select 1\";\n\n\t\t\tbutton  -w 150 -backgroundColor 1.0 0.7 1.0 -label \"Select Bones Mirror Swap\"  -c \"HK_mirror_FK_Bone_Select 0\";\n\n\t\t\tsetParent ..; \n\n\t\tsetParent ..;\n\n\tshowWindow;\n\n}\n//////////////////////////////////////////////////////////////////\nglobal proc string tjh_replaceString(string $strMain,string $searchStr,string $replaceStr)\n{\n\t\n\tstring $result = \"\";\n\t\n\tif(` match $searchStr $strMain ` == $searchStr)\n\t{\n\t\t\n\t\tfor($i = 0 ;$i<size($strMain); $i++)\n\t\t{\n\t\t\tif(size($strMain)- $i - size($searchStr)>0)\n\t\t\t{\n\n\t\t\t\tint $testStr = 0;\n\t\t\t\tint $startPosMainStr = $i;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor($j = 0 ;$j<size($searchStr); $j++)\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tstring $mainSingleStr = ` substring $strMain ($startPosMainStr+1) ($startPosMainStr+1) `;\n\t\t\t\t\tstring $searchSingleStr = ` substring $searchStr ($j+1) ($j+1) `;\n\t\t\t\t\tif($searchSingleStr == $mainSingleStr)$testStr++;\n\t\t\t\t\t$startPosMainStr++;\n\t\t\t\t}\n\t\t\t\t//print ($testStr+\"\\n\");\n\t\t\t\tif( $testStr == size($searchStr) )\n\t\t\t\t{\n\t\t\t\t\t//print ( ($i+1)+\"\\n\");\t\n\t\t\t\t\t//replace the string \n\n\t\t\t\t\tstring $preString =\"\";\n\t\t\t\t\t\n\t\t\t\t\tif($i-1>0) $preString= `  substring $strMain 1 $i  `;\n\t\t\t\t\t\n\t\t\t\t\tstring $lastString = `  substring $strMain  ($i+1+size($searchStr))  (size($strMain)) `;\n\n\t\t\t\t\t$result = $preString + $replaceStr + $lastString ;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\n\n\t\t\t}\n\t\t\n\t\t}\n\t}\nreturn $result;\n}\n\n//HK_mirrorPose  \"mirror\";\n//HK_mirrorPose  \"switch\";\n\n//global proc HK_mirrorPose(string $method,string $mirror_Axis)//$method:  mirror(default)  |  swap  || $mirror_Axis: x | y | z\nglobal proc HK_mirrorPose(string $method){\n\tstring $selects[] = `ls -dag -type \"hikFKJoint\" -sl`;\n\n\tselect -cl;\n\n\tfor($i = 0 ;$i<size($selects); $i++)\n\t{\n\t\tfloat $rxOld = ` getAttr ($selects[$i]+\".rx\") `;\n\t\tfloat $ryOld = ` getAttr ($selects[$i]+\".ry\") `;\n\t\tfloat $rzOld = ` getAttr ($selects[$i]+\".rz\") `;\n\n\t\tstring $newName = \"\";\n\n\t\tif(` match \"Left\" $selects[$i] ` == \"Left\")\n\t\t{\n\t\t\t$newName = ` tjh_replaceString $selects[$i] \"Left\" \"Right\" `;\n\t\t}\n\n\t\tif(` match \"Right\" $selects[$i] ` == \"Right\")\n\t\t{\n\t\t\t$newName = ` tjh_replaceString $selects[$i] \"Right\" \"Left\" `;\n\t\t}\n\t\t//print ($newName +\"\\n\");\n\n\t\tfloat $rxOld_switch =0;\n\t\tfloat $ryOld_switch =0;\n\t\tfloat $rzOld_switch =0;\n\t\t\n\n\t\tif($method == \"swap\")\n\t\t{\n\t\t\t$rxOld_switch = ` getAttr ($newName+\".rx\") `;\n\t\t\t$ryOld_switch = ` getAttr ($newName+\".ry\") `;\n\t\t\t$rzOld_switch = ` getAttr ($newName+\".rz\") `;\n\t\t}\n\n\t\tfloat $x,$y,$z = 1.0;\n\n\t\tif(` match \"Shoulder\" $selects[$i] ` == \"Shoulder\")\n\t\t{\t\t\n\t\t\t$x = 1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = -1.0;\n\t\t}\n\n\t\tif(` match \"Arm\" $selects[$i] ` == \"Arm\")\n\t\t{\t\t\n\t\t\t$x = 1.0;\n\t\t\t$y = 1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"Hand\" $selects[$i] ` == \"Hand\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"HandThumb\" $selects[$i] ` == \"HandThumb\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = 1.0;\n\t\t\t$z = -1.0;\n\t\t}\n\n\t\tif(` match \"HandIndex\" $selects[$i] ` == \"HandIndex\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"HandMiddle\" $selects[$i] ` == \"HandMiddle\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"HandRing\" $selects[$i] ` == \"HandRing\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\n\t\tif(` match \"HandPinky\" $selects[$i] ` == \"HandPinky\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"UpLeg\" $selects[$i] ` == \"UpLeg\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"Leg\" $selects[$i] ` == \"Leg\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\n\t\tif(` match \"Foot\" $selects[$i] ` == \"Foot\")\n\t\t{\t\t\n\t\t\t$x = -1.0;\n\t\t\t$y = -1.0;\n\t\t\t$z = 1.0;\n\t\t}\n\t\t\n\n\t\tif(` objExists ($newName+\".rx\") `)setAttr ($newName+\".rx\") ($x*$rxOld);\n\t\tif(` objExists ($newName+\".ry\") `)setAttr ($newName+\".ry\") ($y*$ryOld);\n\t\tif(` objExists ($newName+\".rz\") `)setAttr ($newName+\".rz\") ($z*$rzOld);\n\n\t\t\n\t\tif($method == \"swap\")\n\t\t{\t\t\n\t\t\tsetAttr ($selects[$i]+\".rx\") ($x*$rxOld_switch);\n\t\t\tsetAttr ($selects[$i]+\".ry\") ($y*$ryOld_switch);\n\t\t\tsetAttr ($selects[$i]+\".rz\") ($z*$rzOld_switch);\n\t\t}\n\n\t\tselect -add $newName;\n\n\t}//for end\nselect $selects;\n}\n/////////////////////////////////////\nglobal proc HK_mirror_FK_Bone_Select(int $Symmetric){\n\tstring $selects[] = `ls -type \"hikFKJoint\" -sl`;\n\tif(size($selects)==0)$selects = `ls -type \"hikIKEffector\" -sl`;\n\tstring $mirrorFKJoint[];\t\n\n\t\n\tfor($i=0 ;$i<size($selects);$i++)\n\t{\n\t\t\t\n\t\t\n\t\tif(` match \"Left\" $selects[$i] ` == \"Left\")\n\t\t{\n\t\t\t$mirrorFKJoint[$i] = ` tjh_replaceString $selects[$i] \"Left\" \"Right\" `;\n\t\t}\n\n\t\tif(` match \"Right\" $selects[$i] ` == \"Right\")\n\t\t{\n\t\t\t$mirrorFKJoint[$i] = ` tjh_replaceString $selects[$i] \"Right\" \"Left\" `;\n\t\t}\t\n\t\t\n\t}\n\n\tif($Symmetric == 1)select -add $mirrorFKJoint;\n\tif($Symmetric == 0)select -r $mirrorFKJoint;\n\n}tjh_HumanIK_Tools;" )
        -mi "----bvh_importer----" ( "import os\nimport re\nfrom typing import Optional\n\nimport maya.cmds as mc\n\nspace_re = re.compile(r\"\\s+\")\n\n# This maps the BVH naming convention to Maya\ntranslationDict = {\n    \"Xposition\": \"translateX\",\n    \"Yposition\": \"translateY\",\n    \"Zposition\": \"translateZ\",\n    \"Xrotation\": \"rotateX\",\n    \"Yrotation\": \"rotateY\",\n    \"Zrotation\": \"rotateZ\"\n}\n\n\nclass TinyDAG(object):\n    \"\"\"\n    Tiny DAG class for storing the hierarchy of the BVH file.\n    \"\"\"\n\n    def __init__(self, obj: str, parent: Optional[\"TinyDAG\"] = None):\n        \"\"\"Constructor\"\"\"\n        self.obj = obj\n        self.__parent = parent\n\n    @property\n    def parent(self):\n        \"\"\"Returns the parent of the object\"\"\"\n        return self.__parent\n\n    def __str__(self) -> str:\n        \"\"\"String representation of the object\"\"\"\n        return str(self.obj)\n\n    def full_path(self) -> str:\n        \"\"\"Returns the full path of the object\"\"\"\n        if self.parent is not None:\n            return \"%s|%s\" % (self.parent.full_path(), str(self))\n        return str(self.obj)\n\n\nclass BVHImporterDialog(object):\n    \"\"\"\n    BVH Importer Dialog\n\n    This class is the main dialog for the BVH importer.\n    \"\"\"\n\n    def __init__(self, debug=False):\n        self._name = \"bvhImportDialog\"\n        self._title = \"BVH Importer v2.0\"\n\n        if debug:\n            print(\"Debug is deprecated.\")\n\n        # UI related\n        self._textfield = \"\"\n        self._scale_field = \"\"\n        self._frame_field = \"\"\n        self._rotation_order = \"\"\n        self._reload = \"\"\n\n        # Other\n        self._root_node = None  # Used for targeting\n\n        # BVH specific stuff\n        self._filename = \"\"\n        self._channels = []\n\n        self.setup_ui()\n\n    def setup_ui(self):\n        \"\"\"\n        Builds the UI\n        \"\"\"\n        win = self._name\n        if mc.window(win, ex=True):\n            mc.deleteUI(win)\n\n        # Non sizeable dialog\n        win = mc.window(self._name, title=self._title, w=200, rtf=True,\n                        sizeable=False)\n\n        mc.columnLayout(adj=1, rs=5)\n        mc.separator()\n        mc.text(\"Options\")\n        mc.separator()\n\n        mc.rowColumnLayout(numberOfColumns=2,\n                           columnWidth=[(1, 80), (2, 150)],\n                           cal=[(1, \"right\"), (2, \"center\")],\n                           cs=[(1, 5), (2, 5)],\n                           rs=[(1, 5), (2, 5)])\n\n        mc.text(\"Rig scale\")\n        self._scale_field = mc.floatField(minValue=0.01, maxValue=2, value=1)\n        mc.text(\"Frame offset\")\n        self._frame_field = mc.intField(minValue=0)\n        mc.text(\"Rotation Order\")\n        self._rotation_order = mc.optionMenu()\n        mc.menuItem(label='XYZ')\n        mc.menuItem(label='YZX')\n        mc.menuItem(label='ZXY')\n        mc.menuItem(label='XZY')\n        mc.menuItem(label='YXZ')\n        mc.menuItem(label='ZYX')\n\n        mc.setParent(\"..\")\n        mc.separator()\n\n        # Targeting UI\n        mc.text(\"Skeleton Targeting\")\n        mc.text(\"(Select the hips)\")\n        mc.separator()\n\n        mc.rowColumnLayout(numberOfColumns=2,\n                           columnWidth=[(1, 150), (2, 80)],\n                           cs=[(1, 5), (2, 5)],\n                           rs=[(1, 5), (2, 5)])\n\n        self._textfield = mc.textField(editable=False)\n        mc.button(\"Select/Clear\", c=self._on_select_root)\n\n        mc.setParent(\"..\")\n        mc.separator()\n        mc.button(\"Import..\", c=self._on_select_file)\n        self._reload = mc.button(\"Reload\", enable=False, c=self._read_bvh)\n\n        # Footer\n        mc.text(\"by Jeroen Hoolmans\")\n\n        mc.window(win, e=True, rtf=True, sizeable=False)\n        mc.showWindow(win)\n\n    def _on_select_file(self, e):\n        \"\"\"\n        Callback for the import button.\n        \"\"\"\n        file_filter = \"All Files (*.*);;Motion Capture (*.bvh)\"\n        result = mc.fileDialog2(fileFilter=file_filter, dialogStyle=1, fm=1)\n\n        if result is None or not len(result):\n            return\n\n        self._filename = result[0]\n\n        mc.button(self._reload, e=True, enable=True)\n\n        # Action!\n        self._read_bvh()\n\n    def load_bvh(self, filename):\n        self._filename = filename\n        self._read_bvh()\n\n    def _read_bvh(self, *_args):\n        # Safe close is needed for End Site part to keep from setting new\n        # parent.\n        safe_close = False\n        # Once motion is active, animate.\n        motion = False\n        # Clear channels before appending\n        self._channels = []\n\n        # Scale the entire rig and animation\n        rig_scale = mc.floatField(self._scale_field, q=True, value=True)\n        frame = mc.intField(self._frame_field, q=True, value=True)\n        rot_order = mc.optionMenu(self._rotation_order, q=True, select=True) - 1\n\n        with open(self._filename) as f:\n            # Check to see if the file is valid (sort of)\n            if not f.readline().startswith(\"HIERARCHY\"):\n                mc.error(\"No valid .bvh file selected.\")\n                return False\n\n            if self._root_node is None:\n                # Create a group for the rig, easier to scale.\n                # (Freeze transform when ungrouping please..)\n                mocap_name = os.path.basename(self._filename)\n                grp = mc.group(em=True, name=\"_mocap_%s_grp\" % mocap_name)\n                mc.setAttr(\"%s.scale\" % grp, rig_scale, rig_scale, rig_scale)\n\n                # The group is now the 'root'\n                my_parent = TinyDAG(grp, None)\n            else:\n                my_parent = TinyDAG(self._root_node, None)\n                self._clear_animation()\n\n            for line in f:\n                line = line.replace(\"\t\", \" \")  # force spaces\n                if not motion:\n                    # root joint\n                    if line.startswith(\"ROOT\"):\n                        # Set the Hip joint as root\n                        if self._root_node:\n                            my_parent = TinyDAG(str(self._root_node), None)\n                        else:\n                            my_parent = TinyDAG(line[5:].rstrip(), my_parent)\n                            # Update root node in case we want to reload.\n                            self._root_node = my_parent\n                            mc.textField(self._textfield,\n                                         e=True,\n                                         text=my_parent.full_path())\n\n                    if \"JOINT\" in line:\n                        jnt = space_re.split(line.strip())\n                        # Create the joint\n                        my_parent = TinyDAG(jnt[1], my_parent)\n\n                    if \"End Site\" in line:\n                        # Finish up a hierarchy and ignore a closing bracket\n                        safe_close = True\n\n                    if \"}\" in line:\n                        # Ignore when safeClose is on\n                        if safe_close:\n                            safe_close = False\n                            continue\n\n                        # Go up one level\n                        if my_parent is not None:\n                            my_parent = my_parent.parent\n                            if my_parent is not None:\n                                mc.select(my_parent.full_path())\n\n                    if \"CHANNELS\" in line:\n                        chan = line.strip()\n                        chan = space_re.split(chan)\n\n                        # Append the channels that are animated\n                        for i in range(int(chan[1])):\n                            self._channels.append(\"%s.%s\" % (\n                                my_parent.full_path(),\n                                translationDict[chan[2 + i]]\n                            ))\n\n                    if \"OFFSET\" in line:\n                        offset = line.strip()\n                        offset = space_re.split(offset)\n                        jnt_name = str(my_parent)\n\n                        # When End Site is reached, name it \"_tip\"\n                        if safe_close:\n                            jnt_name += \"_tip\"\n\n                        # skip if exists\n                        if mc.objExists(my_parent.full_path()):\n                            jnt = my_parent.full_path()\n                        else:\n                            # Build a new joint\n                            jnt = mc.joint(name=jnt_name, p=(0, 0, 0))\n\n                        mc.setAttr(jnt + \".rotateOrder\", rot_order)\n                        mc.setAttr(\n                            jnt + \".translate\",\n                            float(offset[1]),\n                            float(offset[2]),\n                            float(offset[3])\n                        )\n\n                    if \"MOTION\" in line:\n                        # Animate!\n                        motion = True\n\n                else:\n                    # We don't really need to use Frame count and time\n                    # (since Python handles file reads nicely)\n                    if \"Frame\" not in line:\n                        data = space_re.split(line.strip())\n                        # Set the values to channels\n                        for index, value in enumerate(data):\n                            mc.setKeyframe(self._channels[index],\n                                           time=frame,\n                                           value=float(value))\n\n                        frame = frame + 1\n\n    def _clear_animation(self):\n        if self._root_node is None:\n            mc.error(\"Could not find root node to clear animation.\")\n            return\n\n        # Select hierarchy\n        mc.select(str(self._root_node), hi=True)\n        nodes = mc.ls(sl=True)\n\n        trans_attrs = [\"translateX\", \"translateY\", \"translateZ\"]\n        rot_attrs = [\"rotateX\", \"rotateY\", \"rotateZ\"]\n        for node in nodes:\n            for attr in trans_attrs + rot_attrs:\n                # Delete input connections\n                connections = mc.listConnections(\"%s.%s\" % (node, attr),\n                                                 s=True,\n                                                 d=False)\n                if connections is not None:\n                    mc.delete(connections)\n\n            for attr in rot_attrs:\n                # Reset rotation\n                mc.setAttr(\"%s.%s\" % (node, attr), 0)\n\n    def _on_select_root(self, *_args):\n        # When targeting, set the root joint (Hips)\n        selection = mc.ls(sl=True, type=\"joint\", l=True)\n        if len(selection) == 0:\n            self._root_node = None\n            mc.textField(self._textfield, e=True, text=\"\")\n        else:\n            self._root_node = selection[0]\n            mc.textField(self._textfield, e=True, text=self._root_node)\nif __name__ == \"__main__\":\n    dialog = BVHImporterDialog()" )
        -mip 4
        -mi "Add 補助エフェクター_setp1" ( "//ボディーパーツ　指定+sel Rig\noptionVar -intValue keyFullBody 2; hikSetKeyingMode( ); hikUpdateControlRigButtonState;\n\nstring $selOrig[]=`ls-sl`;\nhikCreateAuxEffector $selOrig[0];\nstring $Newrig[]=`ls-sl`;\nprint \"位置set!!!!!!!!!!!!!!!!\";\ndR_DoCmd(\"customPivotTool\");\n" )
        -mi "                         _ setp2" ( "//setp 2\nselect $Newrig[0];\nsetAttr ($Newrig[0]+\".reachTranslation\") 0;\nsetAttr ($Newrig[0]+\".reachRotation\") 0;\nSetKeyTranslate;SetKeyRotate;\nGetFormLocator2;lotshape_gai(20);\nstring $dinglot[]=`ls-sl`;\nselect -tgl $Newrig;\nMatchRotation;MatchTranslation;\nselect $selOrig[0] $dinglot[0];addbake;\n//setp 3\nselect $Newrig[0] $dinglot[0];//dingwei\nglobal float $jiluselkeys[];\nselectKey;dingtimeB;selectKey -clear;\nfor( $a in $jiluselkeys){\ncurrentTime $a;\nMatchTranslation;MatchRotation;setkeyHIK_sel;NextFrame;\n}\n//主導権　転移\nsetAttr ($Newrig[0]+\".reachTranslation\") 1;\nsetAttr ($Newrig[0]+\".reachRotation\") 1;\nsetAttr ($selOrig[0]+\".reachTranslation\") 0;\nsetAttr ($selOrig[0]+\".reachRotation\") 0;" )
        -mi "                         _ setp3" ( "//モーション修正後、整理\nselect $Newrig[0] $dinglot[0];delete;\nsetAttr ($selOrig[0]+\".reachTranslation\") 1;\nsetAttr ($selOrig[0]+\".reachRotation\") 1;" )
        -mi "----------------------------" ( "" )
        -mi "Add ピボットエフェクター_setp1" ( "//ボディーパーツ　指定+sel Rig\noptionVar -intValue keyFullBody 2; hikSetKeyingMode( ); hikUpdateControlRigButtonState;\n\n\nstring $selOrig[]=`ls-sl`;\nhikCreateAuxPivot $selOrig[0];\nstring $Newrig[]=`ls-sl`;\n\nprint \"位置set!!!!!!!!!!!!!!!!\";\ndR_DoCmd(\"customPivotTool\");" )
        -mi "                          _ setp2" ( "//setp 2\nselect $Newrig[0];\nsetAttr ($Newrig[0]+\".reachTranslation\") 0;\nsetAttr ($Newrig[0]+\".reachRotation\") 0;\nSetKeyTranslate;SetKeyRotate;\n\nprint \">>>1＆key  手動bake\";" )
        -mi "                          _ setp3" ( "//setp 3\n\nsetAttr ($Newrig[0]+\".reachTranslation\") 1;\nsetAttr ($Newrig[0]+\".reachRotation\") 1;\nsetAttr ($selOrig[0]+\".reachTranslation\") 0;\nsetAttr ($selOrig[0]+\".reachRotation\") 0;\n\nprint \"主導権　転移\";" )
        -mi "                          _ setp4" ( "\nselect $Newrig[0];delete;\nsetAttr ($selOrig[0]+\".reachTranslation\") 1;\nsetAttr ($selOrig[0]+\".reachRotation\") 1;\n\nprint \"モーション修正後、整理\";" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 3
        -enable 1
        -width 6
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -image1 "C:/Users/0300092530/Documents/maya/2017/ja_JP/prefs/icons/add_I.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "2 つのポイント間の距離を測定します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "距離ツール" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "key" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "distanceDim.png" 
        -image1 "distanceDim.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "//oneカーブsel_山谷\n        $selcurvesss=`keyframe -q -name`;selectKey -clear ;\n        for ($curve in $selcurvesss) {\n            float $times[] = `keyframe -q -timeChange $curve`;\n            float $values[] = `keyframe -q -valueChange $curve`;\n            int $count = size($times);\n            if ($count < 2) continue;\n            for ($i = 1; $i < ($count - 1); $i++) {// 中間の山・谷\n                float $prev = $values[$i - 1];\n                float $curr = $values[$i];\n                float $next = $values[$i + 1];\n                if(($curr > $prev && $curr > $next)||($curr < $prev && $curr < $next)){\n                    selectKey -add -time $times[$i] $curve;\n                }\n            }\n        }\n///////////////////////////////\nstring $curves[] = `keyframe -q -name`;\nif (size($curves) == 0) {\n    warning(\"キーが選択されていません。\");\n} else {\n    string $curve = $curves[0]; // 最初のカーブのみ対象\n    // カーブ全体のキー（float型）を取得\n    float $allFrames[] = `keyframe -q -tc $curve`;\n\n    // 最初と最後のキーを取得\n    float $firstFrame = $allFrames[0];\n    float $lastFrame = $allFrames[(size($allFrames) - 1)];\n\n    // 選択されているキーのフレーム（float型）を取得\n    float $selectedFrames[] = `keyframe -q -tc -selected`;\n\n    // ユーティリティ関数：配列に値が含まれているかチェック（整数比較）\n    global proc int isInFloatList(float $value, float $list[]) {\n        for ($i = 0; $i < size($list); $i++) {\n            if ((int)$list[$i] == (int)$value) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n\n    // 選択されたキーに対して前後を探索\n    for ($i = 0; $i < size($selectedFrames); $i++) {\n        float $frame = $selectedFrames[$i];\n\n        // 最初と最後のキーはスキップ\n        if ((int)$frame == (int)$firstFrame || (int)$frame == (int)$lastFrame) {\n            continue;\n        }\n\n        // 前方向探索\n        int $offset = 1;\n        while (true) {\n            float $prev = $frame - $offset;\n            if ((int)$prev <= (int)$firstFrame) break; // 最初のキーより前は探索しない\n            if (isInFloatList($prev, $allFrames)) {\n                if (!isInFloatList($prev, $selectedFrames)) {\n                    cutKey -time $prev $curve;\n                }\n                break;\n            }\n            $offset++;\n        }\n\n        // 後方向探索\n        $offset = 1;\n        while (true) {\n            float $next = $frame + $offset;\n            if ((int)$next >= (int)$lastFrame) break; // 最後のキーより後は探索しない\n            if (isInFloatList($next, $allFrames)) {\n                if (!isInFloatList($next, $selectedFrames)) {\n                    cutKey -time $next $curve;\n                }\n                break;\n            }\n            $offset++;\n        }\n    }\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "///selkey_フラット接線のキーは白色>中空" ( "global proc keyweitiao2(){\nif(`keyframe -an keys -q -kc`==0){selectKey;}else{}\n\nglobal string $selcurves[];son;\nfor ($each in $selcurves){//print $each;\nfloat $selectedTimes[] = `keyframe -q -sl $each`;\nfor ($every in $selectedTimes){\n$angleBuffer = `keyTangent -t $every -q -ia $each`;//print `size $angleBuffer`;\nif($angleBuffer[0] != 0){selectKey -rm -k -t $every $each ;}\n}\n}\nkeyTangent -itt flat -ott flat ;\n$keyjshu2=`keyframe -an keys -q -kc`;\nprint(\"フラット接線中空key>>\"+$keyjshu2+\"<<個\");\n}keyweitiao2;" )
        -mi "///selkey_リニア接線判断" ( "global proc keyweitiao3(){\nglobal string $selcurves[];son;\nfor ($each in $selcurves){//print $each;\nfloat $selectedTimes[] = `keyframe -q -sl $each`;\nfor ($every in $selectedTimes){\n$angleBuffera = `keyTangent -t $every -q -ia $each`;\n$angleBufferb = `keyTangent -t $every -q -oa $each`;\n\n//if($angleBuffer[0] != 0){selectKey -rm -k -t $every $each ;}\nfloat $jieguoa=$angleBuffera[0];\nfloat $jieguob=$angleBufferb[0];\nfloat $aaa=$jieguoa -$jieguob;\nif($aaa == 0){\n    selectKey -rm -k -t $every $each ;\n}\n\n}\n}\n//keyTangent -itt flat -ott flat ;\n$keyjshu2=`keyframe -an keys -q -kc`;\nprint(\"リニア接線key>>\"+$keyjshu2+\"<<個\");\n}keyweitiao3;" )
        -mi "------------" ( "" )
        -mi "//s+6>a+6>keyposeの間に>Simplify(0.03)/Filter/MoxKeyReductor" ( "global proc KEYposejiangework(float $xiaoshu,int $jihuafangshi){///s+6 > go jianhua\nglobal string $selcurves[];\nglobal int $sttime;\nglobal int $edtime;son;\n\nfloat $jiluweizhi[];$jiluweizhi[0]=$sttime;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n//if($jiluweizhi[$p]!=$sttime){}\n$notime=`currentTime -q`;\n$jiluweizhi[$p]=$newaa[0];\ncurrentTime $jiluweizhi[$p];\n\nif($notime >= $jiluweizhi[$p]){}else{\nselectKey -clear ;\nselectKey -add -k -t ($notime+\":\"+$jiluweizhi[$p]) $selcurves;//選択しているリグのallカーブ一気に\nprint (\"<\"+$notime+\"-\"+$jiluweizhi[$p]+\">\\n\");\nif($jihuafangshi ==0){\njianhua($xiaoshu);}else if($jihuafangshi ==1){jianhuaFilter;}\nelse if($jihuafangshi ==2){MoxKeyReductor;}\n//---///\n//CurveOperation selectKeyWminus;\n//int $notimeB=($jiluweizhi[$p]-$notime)/2+$notime;\n//$selcurvesss=`keyframe -q -name`;//print $selcurvesss;\n//$keypaimingsss=`keyframe -selected -q -indexValue $selcurvesss`;print $keypaimingsss;\n//if($keypaimingsss>=3){currentTime $notimeB;keytongyi;}\n///---///\nselectKey -clear ;seledingtime;\n}\n}\n}\n}KEYposejiangework(0.03,0);" )
        -mi "    |___jianhua (0.04)" ( "KEYposejiangework(0.04,0);" )
        -mi "    |___jianhua Filter" ( "KEYposejiangework(0.03,1);" )
        -mi "    |___jianhua MoxKeyReductor" ( "KEYposejiangework(0.03,2);" )
        -mi "-------------------" ( "" )
        -mi "//channels分け___dingdiantouwei.py>の間を整理する" ( "selectKey -clear ;selectKey ;\n$keyjshuA=`keyframe -an keys -q -kc`;\nselectKey -clear ;\nkeyjianhuaGO(0.034);\nselectKey -clear ;selectKey ;\n$keyjshuB=`keyframe -an keys -q -kc`;\nselectKey -clear ;\nprint(\"全部で\"+$keyjshuA+\"個>>>>>>>全部で\"+$keyjshuB+\"個\");\n\n////////////////////////\nglobal proc keyjianhuaGO(float $shuzhii){\nif(size(`ls-sl`)!=0){\nstring $selrigg[] = `ls -sl`;\nfor ($x = 0;$x < `size($selrigg)`; $x++){\nselect $selrigg[$x];\nkeyjianhua($shuzhii);\n}select $selrigg;showchwork(0);\n\n}\n}\n////////////////////////\nglobal proc keyjianhua(float $shuzhi){//各チャンネルごとsel,実行\nglobal string $selobj0[];\nglobal string $lianjie0;\nglobal string $selcurves0[];\nglobal string $selchan0[];\nglobal int $notime0;son0;\n\nselectionConnection -e -clear $lianjie0;\n$channelB=`listConnections -plugs true $selcurves0`;\n$jilu=0;\nfor($bvb in $channelB){\nif($jilu<`size($bvb)`){\n$jilu=$jilu+1;//print $jilu;\nint $aa=$jilu-1;\nselectionConnection -e -clear $lianjie0;\nselectionConnection -e -select $channelB[$aa] $lianjie0;\nselectKey -clear ;\nselectKey -add -k $channelB[$aa];\nprint (\"\\n\"+$channelB[$aa]+\"\\n\");\npython \"dingdiantouwei()\";\ndingtimeC;\nKEYposejiangeworkC($shuzhi);\n}else{\nshowchwork(0);//$jilu=0;\n}\nshowchwork(0);\n}\n}//keyjianhua(0.03);\n////////////////////////////\nglobal proc dingtimeC(){\nglobal float $jiluselkeysC[];\nclear $jiluselkeysC;\nglobal string $selcC[];\nclear $selcC;\n$selkey=sort(`keyframe -q -sl`);\n$selcC=`keyframe -q -name`;\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$jiluselkeysC[$p]=$newaa[0];\n}\n}//print (\"\\n\"+$selcC[0]+\"\\n\");\n}//dingtimeC;\n///////////////////////\nglobal proc seldingtimeC(){\nglobal float $jiluselkeysC[];\nglobal string $selcC[];\nselectKey -clear ;\nfor($b in $jiluselkeysC){\nselectKey -add -k -t $b $selcC[0];\n}\n}//seldingtimeC;\n////////////////////////////\n////////////////////////////\nglobal proc KEYposejiangeworkC(float $xiaoshu){\nglobal string $selcurves[];\nglobal int $sttime;\nglobal int $edtime;son;\nfloat $jiluweizhi[];$jiluweizhi[0]=$sttime;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$notime=`currentTime -q`;\n$jiluweizhi[$p]=$newaa[0];\ncurrentTime $jiluweizhi[$p];\n    print (\"\\n\"+\"<\"+$notime+\"-\"+$jiluweizhi[$p]+\">\"+\"\\n\");\nif($notime >= $jiluweizhi[$p]){}else{print \"ooooooo\\n\";\nselectKey -clear ;\nselectKey -add -k -t ($notime+\":\"+$jiluweizhi[$p]) $selcurves[0];\njianhua($xiaoshu);jianhua($xiaoshu);\nselectKey -clear ;seldingtimeC;\n}\n}\n}\n}//KEYposejiangeworkC(0.03);" )
        -mi "-------------------" ( "" )
        -mi "//中間" ( "#mel.eval(\"CreateLocator;rename XXXCCCXXXhh;\")\n#mel.eval(\"CurveOperation threekeyadd;selectKey;\")\n\n# -*- coding: utf-8 -*-\n#=================================================================\n#harftimeOption = False #頂点の中間にキーを打ちたいのならTrue、いらないのならFalse\n#================================================================\nimport maya.cmds as cmds\n#======================キーリダクションのメイン関数===============　単カーブ、選択キー、GO、山-谷以外のキー判断し 選択 残し\ndef zhongjian():\n    cmds.animCurveEditor(\"graphEditor1GraphEd\",e=True,sb=\"on\")\n    cmds.bufferCurve (an=\"keys\", ov=True)\n    \n    oSels = cmds.ls( sl=True )#選択したノードのリストを取得、つまりセレクションズ\n    \n    for oSel in oSels:#選択したノードを個別に処理、つまりoSelはセレクト\n        oFcvs = cmds.keyframe(oSel,q=True, n=True, sl=True) #選択したオブジェクトの選択したFカーブを取得\n        if not oFcvs:#Fカーブリストに何も入らなかった場合\n            cmds.error(u\"FCurveが選択されていません\")\n    \t  \n        for oFcv in oFcvs:#取得したFカーブリストから、一本だけＦカーブを取り出し個別に処理\n    \t    #===============値のリストと時間のリストとキーの数を取得==========\n    \t    listKeyVal = cmds.keyframe(oFcv,q=True,vc=True)#vc= キーの値をリスト化。全部\n    \t    listKeyTim = cmds.keyframe(oFcv,q=True,tc=True)#tc= キーの時間をリスト化。もちろん全部\n    \t    iNumKey = cmds.keyframe(oFcv,q=True, kc=True)#kc= キーフレームの数\n    \t    \n    \t    #===============キーの最初と最後のフレームを取得==========\n    \t    oStartFrame = listKeyTim[0]\n    \t    oEndFrame = listKeyTim[len(listKeyTim)-1]\n    \t    \n    \t    #===============選択した範囲の最初と最後のフレームを取得==========\n    \t    oSelMinKey = cmds.keyframe(q=True,tc=True,sl=True)[0] #選択範囲の最初のキー\n    \t    oSelMaxKey = cmds.keyframe(q=True,tc=True,lsl=True)[-1] #選択範囲の最後のキー\n    \t    \n    \t    #===============頂点のリストを制作==========\n    \t    cmd = [] #空のリストを用意\n    \t    result = []#空のリストを用意\n    \t    \n    \t    result.append(listKeyTim[0])#リストの最初は頂点ではなくFカーブの最初の時間を入れる。\n    \t    \n    \t    for i in range(iNumKey-2):#キーフレームの数から２を引いた数だけ繰り返す。\n    \t        if listKeyVal[i] > listKeyVal[i - 1] and listKeyVal[i] > listKeyVal[i + 1]:#山のてっぺん\n    \t            result.append(listKeyTim[i])\n    \t        elif listKeyVal[i] < listKeyVal[i - 1] and listKeyVal[i] < listKeyVal[i + 1]:#谷のそこ\n    \t            result.append(listKeyTim[i])\n    \t    \n    \t    result.append(listKeyTim[len(listKeyTim)-1])#リストの最後尾は頂点ではなく、最後のキーとなる\n    \t    \n    \t    #===============中間地点のリストを制作==========\n    \t    halftime = []#空のリストを用意\n    \t    \n    \t    for i  in range(len(result) - 1):\n    \t        #近接キーとの差分の中間をリストに追加していく\n    \t        halftime.append(result[i] + (round((result[i + 1] - result[i]) / 2)))\n    \t        \n    \t    #===============選択範囲外前半のリストを制作==========\n    \t    frontlist = []\n    \t    for i in  cmds.keyframe(oFcv,q=True,tc=True,t=(oStartFrame,oSelMinKey)):\n    \t        frontlist.append(i)\n    \t        \n    \t    #===============選択範囲外後半のリストを制作==========\n    \t    backlist = []\n    \t    for i in cmds.keyframe(oFcv,q=True,tc=True,t=(oSelMaxKey,oEndFrame)):\n    \t        backlist.append(i)\n    \t        \n    \t    #=======頂点リストと中間リスト以外のキーのリストを作って削除========\n    \t    setA = set(listKeyTim)\n    \t    setB = set(result)\n    \t    setC = set(halftime)\n    \t    setD = set(frontlist)\n    \t    setE = set(backlist)\n    \t    removeList = list(setA-setB-setD-setE)\n    \t    #if harftimeOption: removeList = list(setA-setB-setC-setD-setE)\n    \t    #else:removeList = list(setA-setB-setD-setE)\n    \t    print(removeList)\n    \t    #cmds.selectKey( clear=True )\n    \t    for i in range(len(removeList)):#不要なキーリストの数だけ繰り返す\n    \t        cmd.append(eval(\"(\" + str(removeList[i]) + \",)\"))\n    \t        #リストに追加していく。結果的に下記のtime値フラグ専用のリスト[(4,),(12,),(16,)]みたいなのが出来る。\n    \t        #cmds.cutKey(oFcv, cl=True,t=cmd)#キーを削除\n    \t        cmds.selectKey(oFcv, time=cmd )\nzhongjian()\n\nmel.eval(\"delete XXXCCCXXXhh;\")" )
        -mip 10
        -mi "       |_mel" ( "////////////複数リグの複数カーブ　同時  zhognjian\nglobal proc selectNonPeaksValleysEndpoints() {\n    string $selectedObjs[] = `ls -sl`;\n    if (size($selectedObjs) == 0) {\n        warning \"オブジェクトが選択されていません。\";\n        return;\n    }\n    for ($obj in $selectedObjs) {\n        string $animCurves[] = `listConnections -type animCurve $obj`;\n        for ($curve in $animCurves) {\n            float $times[] = `keyframe -q -timeChange $curve`;\n            float $values[] = `keyframe -q -valueChange $curve`;\n\n            int $count = size($times);\n            if ($count < 2) continue;\n\n            // 山・谷・端のインデックスを記録\n            int $excludeIndices[] = {0, $count - 1};\n            for ($i = 1; $i < ($count - 1); $i++) {\n                float $prev = $values[$i - 1];\n                float $curr = $values[$i];\n                float $next = $values[$i + 1];\n\n                if (($curr > $prev && $curr > $next) || ($curr < $prev && $curr < $next)) {\n                    $excludeIndices[size($excludeIndices)] = $i;\n                }\n            }// 除外対象でないキーを選択\n            for ($i = 0; $i < $count; $i++) {\n                int $isExcluded = 0;\n                for ($j = 0; $j < size($excludeIndices); $j++) {\n                    if ($i == $excludeIndices[$j]) {\n                        $isExcluded = 1;\n                        break;\n                    }\n                }\n                if (!$isExcluded) {\n                    selectKey -add -time $times[$i] $curve;\n                }\n            }\n        }\n    }\n}selectNonPeaksValleysEndpoints();" )
        -mi "//山谷" ( "# -*- coding: utf-8 -*-\n#=================================================================\n#harftimeOption = False #頂点の中間にキーを打ちたいのならTrue、いらないのならFalse\n#================================================================\nimport maya.cmds as cmds\n#======================キーリダクションのメイン関数===============　単カーブ、選択キー、GO、山-谷以外のキー判断し 選択 残し\ndef dingdian():\n    cmds.animCurveEditor(\"graphEditor1GraphEd\",e=True,sb=\"on\")\n    cmds.bufferCurve (an=\"keys\", ov=True)\n    \n    oSels = cmds.ls( sl=True )#選択したノードのリストを取得、つまりセレクションズ\n    \n    for oSel in oSels:#選択したノードを個別に処理、つまりoSelはセレクト\n        oFcvs = cmds.keyframe(oSel,q=True, n=True, sl=True) #選択したオブジェクトの選択したFカーブを取得\n        if not oFcvs:#Fカーブリストに何も入らなかった場合\n            cmds.error(u\"FCurveが選択されていません\")\n        for oFcv in oFcvs:#取得したFカーブリストから、一本だけＦカーブを取り出し個別に処理\n    \t    #===============値のリストと時間のリストとキーの数を取得==========\n    \t    listKeyVal = cmds.keyframe(oFcv,q=True,vc=True)#vc= キーの値をリスト化。全部\n    \t    listKeyTim = cmds.keyframe(oFcv,q=True,tc=True)#tc= キーの時間をリスト化。もちろん全部\n    \t    iNumKey = cmds.keyframe(oFcv,q=True, kc=True)#kc= キーフレームの数\n    \t    \n    \t    #===============キーの最初と最後のフレームを取得==========\n    \t    oStartFrame = listKeyTim[0]\n    \t    oEndFrame = listKeyTim[len(listKeyTim)-1]\n    \t    \n    \t    #===============選択した範囲の最初と最後のフレームを取得==========\n    \t    oSelMinKey = cmds.keyframe(q=True,tc=True,sl=True)[0] #選択範囲の最初のキー\n    \t    oSelMaxKey = cmds.keyframe(q=True,tc=True,lsl=True)[-1] #選択範囲の最後のキー\n    \t    \n    \t    #===============頂点のリストを制作==========\n    \t    cmd = [] #空のリストを用意\n    \t    result = []#空のリストを用意\n    \t    \n    \t    result.append(listKeyTim[0])#リストの最初は頂点ではなくFカーブの最初の時間を入れる。\n    \t    \n    \t    for i in range(iNumKey-2):#キーフレームの数から２を引いた数だけ繰り返す。\n    \t        if listKeyVal[i] > listKeyVal[i - 1] and listKeyVal[i] > listKeyVal[i + 1]:#山のてっぺん\n    \t            result.append(listKeyTim[i])\n    \t        elif listKeyVal[i] < listKeyVal[i - 1] and listKeyVal[i] < listKeyVal[i + 1]:#谷のそこ\n    \t            result.append(listKeyTim[i])\n    \t    \n    \t    result.append(listKeyTim[len(listKeyTim)-1])#リストの最後尾は頂点ではなく、最後のキーとなる\n    \t    \n    \t    #===============中間地点のリストを制作==========\n    \t    halftime = []#空のリストを用意\n    \t    \n    \t    for i  in range(len(result) - 1):\n    \t        #近接キーとの差分の中間をリストに追加していく\n    \t        halftime.append(result[i] + (round((result[i + 1] - result[i]) / 2)))\n    \t        \n    \t    #===============選択範囲外前半のリストを制作==========\n    \t    frontlist = []\n    \t    for i in  cmds.keyframe(oFcv,q=True,tc=True,t=(oStartFrame,oSelMinKey)):\n    \t        frontlist.append(i)\n    \t        \n    \t    #===============選択範囲外後半のリストを制作==========\n    \t    backlist = []\n    \t    for i in cmds.keyframe(oFcv,q=True,tc=True,t=(oSelMaxKey,oEndFrame)):\n    \t        backlist.append(i)\n    \t        \n    \t    #=======頂点リストと中間リスト以外のキーのリストを作って削除========\n    \t    setA = set(listKeyTim)\n    \t    setB = set(result)\n    \t    setC = set(halftime)\n    \t    setD = set(frontlist)\n    \t    setE = set(backlist)\n    \t    #removeList = list(setA-setC-setD-setE)\n    \t    yama = list(setB-setD-setE)\n    \t    print(yama)\n    \t    #if harftimeOption: removeList = list(setA-setB-setC-setD-setE)\n    \t    #else:removeList = list(setA-setB-setD-setE)\n    \t    #cmds.selectKey( clear=True )\n    \t    for i in range(len(yama)):#不要なキーリストの数だけ繰り返す\n    \t        cmd.append(eval(\"(\" + str(yama[i]) + \",)\"))\n    \t        #リストに追加していく。結果的に下記のtime値フラグ専用のリスト[(4,),(12,),(16,)]みたいなのが出来る。\n    \t        #cmds.cutKey(oFcv, cl=True,t=cmd)#キーを削除\n    \t        #cmds.selectKey(oFcv, cl=True,t=cmd)\n    \t        cmds.selectKey(oFcv, time=cmd )\ndingdian()\n\nmel.eval(\"delete XXXCCCXXXhh;\")" )
        -mip 12
        -mi "//山谷+start+end" ( "# -*- coding: utf-8 -*-\n#=================================================================\n#harftimeOption = False #頂点の中間にキーを打ちたいのならTrue、いらないのならFalse\n#================================================================\nimport maya.cmds as cmds\n#======================キーリダクションのメイン関数===============　単カーブ、選択キー、GO、山-谷以外のキー判断し 選択 残し\ndef dingdiantouwei():\n    cmds.animCurveEditor(\"graphEditor1GraphEd\",e=True,sb=\"on\")\n    cmds.bufferCurve (an=\"keys\", ov=True)\n    \n    oSels = cmds.ls( sl=True )#選択したノードのリストを取得、つまりセレクションズ\n    \n    for oSel in oSels:#選択したノードを個別に処理、つまりoSelはセレクト\n        oFcvs = cmds.keyframe(oSel,q=True, n=True, sl=True) #選択したオブジェクトの選択したFカーブを取得\n        if not oFcvs:#Fカーブリストに何も入らなかった場合\n            cmds.error(u\"FCurveが選択されていません\")\n        for oFcv in oFcvs:#取得したFカーブリストから、一本だけＦカーブを取り出し個別に処理\n    \t    #===============値のリストと時間のリストとキーの数を取得==========\n    \t    listKeyVal = cmds.keyframe(oFcv,q=True,vc=True)#vc= キーの値をリスト化。全部\n    \t    listKeyTim = cmds.keyframe(oFcv,q=True,tc=True)#tc= キーの時間をリスト化。もちろん全部\n    \t    iNumKey = cmds.keyframe(oFcv,q=True, kc=True)#kc= キーフレームの数\n    \t    \n    \t    #===============キーの最初と最後のフレームを取得==========\n    \t    oStartFrame = listKeyTim[0]\n    \t    oEndFrame = listKeyTim[len(listKeyTim)-1]\n    \t    \n    \t    #===============選択した範囲の最初と最後のフレームを取得==========\n    \t    oSelMinKey = cmds.keyframe(q=True,tc=True,sl=True)[0] #選択範囲の最初のキー\n    \t    oSelMaxKey = cmds.keyframe(q=True,tc=True,lsl=True)[-1] #選択範囲の最後のキー\n    \t    \n    \t    #===============頂点のリストを制作==========\n    \t    cmd = [] #空のリストを用意\n    \t    result = []#空のリストを用意\n    \t    \n    \t    result.append(listKeyTim[0])#リストの最初は頂点ではなくFカーブの最初の時間を入れる。\n    \t    \n    \t    for i in range(iNumKey-2):#キーフレームの数から２を引いた数だけ繰り返す。\n    \t        if listKeyVal[i] > listKeyVal[i - 1] and listKeyVal[i] > listKeyVal[i + 1]:#山のてっぺん\n    \t            result.append(listKeyTim[i])\n    \t        elif listKeyVal[i] < listKeyVal[i - 1] and listKeyVal[i] < listKeyVal[i + 1]:#谷のそこ\n    \t            result.append(listKeyTim[i])\n    \t    \n    \t    result.append(listKeyTim[len(listKeyTim)-1])#リストの最後尾は頂点ではなく、最後のキーとなる\n    \t    \n    \t    #===============中間地点のリストを制作==========\n    \t    halftime = []#空のリストを用意\n    \t    \n    \t    for i  in range(len(result) - 1):\n    \t        #近接キーとの差分の中間をリストに追加していく\n    \t        halftime.append(result[i] + (round((result[i + 1] - result[i]) / 2)))\n    \t        \n    \t    #===============選択範囲外前半のリストを制作==========\n    \t    frontlist = []\n    \t    for i in  cmds.keyframe(oFcv,q=True,tc=True,t=(oStartFrame,oSelMinKey)):\n    \t        frontlist.append(i)\n    \t        \n    \t    #===============選択範囲外後半のリストを制作==========\n    \t    backlist = []\n    \t    for i in cmds.keyframe(oFcv,q=True,tc=True,t=(oSelMaxKey,oEndFrame)):\n    \t        backlist.append(i)\n    \t        \n    \t    #=======頂点リストと中間リスト以外のキーのリストを作って削除========\n    \t    setA = set(listKeyTim)\n    \t    setB = set(result)\n    \t    setC = set(halftime)\n    \t    setD = set(frontlist)\n    \t    setE = set(backlist)\n    \t    #removeList = list(setA-setC-setD-setE)\n    \t    yamatouwei = list(setB)\n    \t    print(yamatouwei)\n    \t    #if harftimeOption: removeList = list(setA-setB-setC-setD-setE)\n    \t    #else:removeList = list(setA-setB-setD-setE)\n    \t    #cmds.selectKey( clear=True )\n    \t    for i in range(len(yamatouwei)):#不要なキーリストの数だけ繰り返す\n    \t        cmd.append(eval(\"(\" + str(yamatouwei[i]) + \",)\"))\n    \t        #リストに追加していく。結果的に下記のtime値フラグ専用のリスト[(4,),(12,),(16,)]みたいなのが出来る。\n    \t        #cmds.cutKey(oFcv, cl=True,t=cmd)#キーを削除\n    \t        #cmds.selectKey(oFcv, cl=True,t=cmd)\n    \t        cmds.selectKey(oFcv, time=cmd )\ndingdiantouwei()\n\nmel.eval(\"delete XXXCCCXXXhh;\")" )
        -mip 13
        -mi "       |_mel" ( "////////////複数リグの複数カーブ　同時  start 山 谷 end\nglobal proc selectPeaksValleysAndEndpoints_AllCurves(int $sted) {\n    string $selectedObjs[] = `ls -sl`;\n    if (size($selectedObjs) == 0) {\n        //warning \"オブジェクトが選択されていません。\";\n        return;\n    }selectKey -clear;\n    for ($obj in $selectedObjs) {// アニメーションカーブを取得\n        string $animCurves[] = `listConnections -type animCurve $obj`;\n        for ($curve in $animCurves) {\n            float $times[] = `keyframe -q -timeChange $curve`;\n            float $values[] = `keyframe -q -valueChange $curve`;\n            int $count = size($times);\n            if ($count < 2) continue;\n            if($sted==1){\n            selectKey -add -time $times[0] $curve;// 開始キー\n            }\n            // 中間の山・谷\n            for ($i = 1; $i < ($count - 1); $i++) {\n                float $prev = $values[$i - 1];\n                float $curr = $values[$i];\n                float $next = $values[$i + 1];\n\n                if (($curr > $prev && $curr > $next) || ($curr < $prev && $curr < $next)) {\n                    selectKey -add -time $times[$i] $curve;\n                }\n            }print \"\";\n            if($sted==1){\n            selectKey -add -time $times[$count - 1] $curve;// 終了キー\n            }\n        }\n    }\n}selectPeaksValleysAndEndpoints_AllCurves(0);" )
        -mi "//shang puo" ( "import pymel.core as pm\n# FCurveノード名を取得\nlfcv = pm.keyframe(q=1,n=1)\nfor fcv in lfcv:\n    ld = [] # 消去するキーのインデックスリスト\n    # FCurveの時間、値のリスト取得\n    lv = pm.keyframe(fcv,q=1,tc=1,vc=1)\n    \t    #===============選択した範囲の最初と最後のフレームを取得==========\n    oSelMinKey = cmds.keyframe(q=True,tc=True,sl=True)[0] #選択範囲の最初のキー\n    oSelMaxKey = cmds.keyframe(q=True,tc=True,lsl=True)[-1] #選択範囲の最後のキー\n\n    # 最初と最後のキー以外を調査\n    for i in range(1,len(lv)-1):\n    #for i in range((77,106):    \n        # キーが上り坂なら消すリストにインデックスを追加\n        if lv[i-1][1] < lv[i][1] and lv[i][1] < lv[i+1][1]:\n            ld.append([i])\n        # キーが下り坂なら消すリストにインデックスを追加\n        #elif lv[i-1][1] > lv[i][1] and lv[i][1] > lv[i+1][1]:\n            #ld.append([i])\n    if ld:\n        # インデックスを使ってキーを消去\n        pm.selectKey(fcv,index=ld)\n        #print(ld)\n\nmel.eval(\"delete XXXCCCXXXhh;\")" )
        -mip 15
        -mi "//xia puo" ( "import pymel.core as pm\n# FCurveノード名を取得\nlfcv = pm.keyframe(q=1,n=1)\nfor fcv in lfcv:\n    ld = [] # 消去するキーのインデックスリスト\n    # FCurveの時間、値のリスト取得\n    lv = pm.keyframe(fcv,q=1,tc=1,vc=1)\n    # 最初と最後のキー以外を調査\n    for i in range(1,len(lv)-1):\n        # キーが上り坂なら消すリストにインデックスを追加\n        #if lv[i-1][1] < lv[i][1] and lv[i][1] < lv[i+1][1]:\n            #ld.append([i])\n        # キーが下り坂なら消すリストにインデックスを追加\n        if lv[i-1][1] > lv[i][1] and lv[i][1] > lv[i+1][1]:\n            ld.append([i])\n    if ld:\n        # インデックスを使ってキーを消去\n        pm.selectKey(fcv,index=ld)\n        print(ld)\n\nmel.eval(\"delete XXXCCCXXXhh;\")" )
        -mip 16
        -mi "-------------------" ( "" )
        -mi "//one CV___dingdiantouwei.py > dingtimeD > jianhua(0.x)/jianhuaFilter" ( "////////////////////////\nglobal proc KEYposejiangeworkD_onecv(float $xiaoshu,int $jihuafangshi){///s+6gai > go jianhua\n$keyjshuA=`keyframe -an keys -q -kc`;\npython \"dingdiantouwei()\";\ndingtimeD;\nglobal string $selcurves[];\nglobal int $sttime;\nglobal int $edtime;son;\n\nfloat $jiluweizhi[];$jiluweizhi[0]=$sttime;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n//if($jiluweizhi[$p]!=$sttime){}\n$notime=`currentTime -q`;\n$jiluweizhi[$p]=$newaa[0];\ncurrentTime $jiluweizhi[$p];\n//print (\"<\"+$notime+\"-\"+$jiluweizhi[$p]+\">\");\nif($notime >= $jiluweizhi[$p]){}else{print \"o\";\nselectKey -clear ;\nselectKey -add -k -t ($notime+\":\"+$jiluweizhi[$p]) $selcurves[0];//one CV\n\nif($jihuafangshi ==0){\njianhua($xiaoshu);}else if($jihuafangshi ==1){jianhuaFilter;}\n\n}\n}\n}seldingtimeD;\nselectKey -clear ;\nselectKey -add -k $selcurves[0];\n$keyjshuB=`keyframe -an keys -q -kc`;\nseldingtimeD;\nprint(\"\\n\"+$keyjshuA+\">>>\"+$keyjshuB+\"\\n\");\n}//KEYposejiangeworkD_onecv(0.034,0);\n\n\n////////////////\nglobal proc dingtimeD(){\nglobal float $jiluselkeysD[];\nclear $jiluselkeysD;\nglobal string $selcD[];\nclear $selcD;\n$selkey=sort(`keyframe -q -sl`);\n$selcD=`keyframe -q -name`;\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$jiluselkeysD[$p]=$newaa[0];\n}\n}//print (\"\\n\"+$selcD[0]+\"\\n\");\n}//dingtimeD;\n///////////////////////\nglobal proc seldingtimeD(){\nglobal float $jiluselkeysD[];\nglobal string $selcD[];\nselectKey -clear ;\nfor($b in $jiluselkeysD){\nselectKey -add -k -t $b $selcD[0];\n}\n}//seldingtimeD;" )
        -mi "          |_all sel rig_all CV (0.0333,0)//カーブの簡略化 SimplifyCurve" ( "global proc keyjianhuaD_GO(float $xiaoshu,int $jihuafangshi){\nint $keyjshuAA;\nint $keyjshuBB;\nif(size(`ls-sl`)!=0){\nselectKey -clear ;selectKey ;\n$keyjshuAA=`keyframe -an keys -q -kc`;selectKey -clear ;\n\nstring $selrigg[] = `ls -sl`;\nfor ($x = 0;$x < `size($selrigg)`; $x++){\nselect $selrigg[$x];\nselectKey ;\n$selcurveall=`keyframe -q -name`;print $selcurveall;\nfor ($n = 0;$n < `size($selcurveall)`; $n++){\nselectKey -clear ;\nselectKey -add -k $selcurveall[$n];\nKEYposejiangeworkD_onecv($xiaoshu,$jihuafangshi);\n}\n}\n\nselect $selrigg;showchwork(0);\nselectKey -clear ;selectKey ;\n$keyjshuBB=`keyframe -an keys -q -kc`;selectKey -clear ;\nprint(\"\\n\"+$keyjshuAA+\"個>>>allrig>>>\"+$keyjshuBB+\"個\\n\");\n}\n}keyjianhuaD_GO(0.0333,0);" )
        -mi "          |_                        (0.0xx,1)//キー削減フィルタ KeyReducerFilter" ( "keyjianhuaD_GO(0.035,1);" )
        -mi "--------------------------" ( "" )
        -mi "----------AAAAAA---------AI Version      noselkeyGO" ( "////////////複数リグの複数カーブ　同時  start 山 谷 end\nglobal proc selectPeaksValleysAndEndpoints_AllCurves(string $jianhuafangshi){\n    string $selectedObjs[] = `ls -sl`;\n    if (size($selectedObjs) == 0) {//warning \"オブジェクトが選択されていません。\";\n        return;\n    }selectKey -clear;\n    for ($obj in $selectedObjs) {// アニメーションカーブを取得\n        string $animCurves[] = `listConnections -type animCurve $obj`;\n        for ($curve in $animCurves) {//for2\n            print (\"\\n\\n>>___    \"+$curve+\"    ___<<\\n\\n\");\n            float $times[] = `keyframe -q -timeChange $curve`;\n            float $values[] = `keyframe -q -valueChange $curve`;\n            int $count = size($times);\n            if ($count < 2) continue;\n            // 開始キー\n            selectKey -add -time $times[0] $curve;\n            //int $neewf=$times[0];\n            // 中間の山・谷\n            for ($i = 1; $i < ($count - 1); $i++) {\n                float $prev = $values[$i - 1];\n                float $curr = $values[$i];\n                float $next = $values[$i + 1];\n                if (($curr > $prev && $curr > $next) || ($curr < $prev && $curr < $next)) {\n                    selectKey -add -time $times[$i] $curve;\n                    //print ($neewf+\"F---\"+$times[$i]+\"F\\n\");\n                    //$neewf=$times[$i];\n                }\n            }// 終了キー\n            selectKey -add -time $times[$count - 1] $curve;\n            //print ($neewf+\"F---\"+$times[$count - 1]+\"F\\n\");\n            $jieguokey=sort(`keyframe -q -sl`);\n            float $numbersf[] = $jieguokey;\n            for ($i = 0; $i < (size($numbersf) - 1); $i++) {// ループでペアを作成して表示\n                int $start = $numbersf[$i];\n                int $end = $numbersf[$i + 1];\n                print ($start + \"F---\" + $end + \"F\\n\");\n                //selectKey -clear;\n                selectKey -k -t ($start+\":\"+$end) $curve ;\n                if($jianhuafangshi==\"Filter\"){jianhuaFilter;//キー削減フィルタ KeyReducerFilter\n                }else if($jianhuafangshi==\"Simplify\"){jianhua(0.0333);//カーブの簡略化 SimplifyCurve\n                }\n            }\n            \n        }//for2\n    }\n}\nselectPeaksValleysAndEndpoints_AllCurves(\"Filter\");\nselectPeaksValleysAndEndpoints_AllCurves(\"Simplify\");" )
        -mi "--------------------------" ( "" )
        -mi "//timesliderAUTO>seledingtimeE>keyposeの間に>jianhua(0.x)/jianhuaFilter/python jianhua" ( "//////////////////////////\nglobal proc KEYpose_jianhuawork(string $fangshi){//one obj only\n//A>Simplify0.035  B>Filter  C>YAMATANI.py\nseledingtimeE;\nglobal float $jiluselkeysE[];print $jiluselkeysE;\nfor($bb in $jiluselkeysE){\ncurrentTime $bb;\nSetKeyAnimated;\n}seledingtimeE;\n\nint $sttimehuanyuan = `playbackOptions -q -minTime`;\nint $edtimehuanyuan = `playbackOptions -q -maxTime`;\nfloat $jiluweizhi[];$jiluweizhi[0]=$sttimehuanyuan;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n\n$notime=`currentTime -q`;\n$jiluweizhi[$p]=$newaa[0];\ncurrentTime $jiluweizhi[$p];\n\nif($notime >= $jiluweizhi[$p]){}else{\nprint (\"<\"+$notime+\"-\"+$jiluweizhi[$p]+\">\\n\");\n\nselectKey -clear ;\nselectKey -add -k -t ($notime+\":\"+$jiluweizhi[$p]);\n\nglobal string $A[];\nglobal string $B[];\nplaybackOptions -min $notime -max $jiluweizhi[$p];\nstring $selemoto[]=`ls-sl`;QA_pickOrigin;\nGetFormLocator2;outlinecolor(110);\nstring $selesaki[]=`ls-sl`;QA_pickTarget;\nAB_keyCP;\n\nselect $B;\nif($fangshi ==\"A\"){\nselectKey ;jianhua(0.034);\n}else if($fangshi ==\"B\"){\nselectKey ;jianhuaFilter;\n}else if($fangshi ==\"C\"){\npython \"jianhua()\";\n}\n\nselect $A;\nBA_keyCP;\nselect $B;delete;\nplaybackOptions -min $sttimehuanyuan -max $edtimehuanyuan;\nselect $A;\nselectKey -clear ;seledingtimeE;\n}\n}\n}\n}//KEYpose_jianhuawork();" )
        -mi "    |___jianhua(0.034)//カーブの簡略化 SimplifyCurve" ( "seledingtimeE;\nstring $selriggg[] = `ls -sl`;\nselectKey -clear ;selectKey ;$keyjshuA=`keyframe -an keys -q -kc`;selectKey -clear ;\nfor ($x = 0;$x < `size($selriggg)`; $x++){\nselect $selriggg[$x];\nKEYpose_jianhuawork(\"A\");//\n}select $selriggg;\nselectKey -clear ;\nselectKey ;$keyjshuB=`keyframe -an keys -q -kc`;\nselectKey -clear ;\nprint($keyjshuA+\">>>\"+$keyjshuB);\n" )
        -mi "    |___jianhua           //キー削減フィルタ KeyReducerFilter" ( "seledingtimeE;\nstring $selriggg[] = `ls -sl`;\nselectKey -clear ;selectKey ;$keyjshuA=`keyframe -an keys -q -kc`;selectKey -clear ;\nfor ($x = 0;$x < `size($selriggg)`; $x++){\nselect $selriggg[$x];\nKEYpose_jianhuawork(\"B\");////////////\n}select $selriggg;\nselectKey -clear ;selectKey ;$keyjshuB=`keyframe -an keys -q -kc`;selectKey -clear ;\nprint($keyjshuA+\">>>\"+$keyjshuB);\n" )
        -mi "    |___jianhua           //YAMATANI.py" ( "seledingtimeE;\nstring $selriggg[] = `ls -sl`;\nselectKey -clear ;selectKey ;$keyjshuA=`keyframe -an keys -q -kc`;selectKey -clear ;\nfor ($x = 0;$x < `size($selriggg)`; $x++){\nselect $selriggg[$x];\nKEYpose_jianhuawork(\"C\");////////////YAMATANI.py\n}select $selriggg;\nselectKey -clear ;selectKey ;\n$keyjshuB=`keyframe -an keys -q -kc`;selectKey -clear ;\nprint($keyjshuA+\">>>\"+$keyjshuB);\n" )
        -mi "     |_key poseのTIME 前後key>keytongyiB(s+s)" ( "global proc KEYpose_qianhoushan(){\nglobal float $jiluselkeysE[];\nseldingtimeE;\nfor($n in $jiluselkeysE){\ncurrentTime $n;\nNextTime;\nCurveOperation onekeyselect;keytongyiB;//timeSliderClearKey;\nPreviousTime;PreviousTime;\nCurveOperation onekeyselect;keytongyiB;//timeSliderClearKey;\nNextTime;\n}}KEYpose_qianhoushan;" )
        -mi "-----" ( "" )
        -mi "//timesliderAUTO>THMotiontool_削減運用  Step A+B    selrig_Go" ( "///////キー整理簡化工程GO\n//分類したrigグループsel>keyposeの間autoBookmark(seledingtimeE)>F9_F10>F10 useTool\nglobal proc KEYpose_jianhuaworksss(){\nseledingtimeE;\nglobal float $jiluselkeysE[];print $jiluselkeysE;\nfor($bb in $jiluselkeysE){\ncurrentTime $bb;\nSetKeyAnimated;\n}seledingtimeE;\nint $sttimehuanyuan = `playbackOptions -q -minTime`;\nint $edtimehuanyuan = `playbackOptions -q -maxTime`;\nfloat $jiluweizhi[];$jiluweizhi[0]=$sttimehuanyuan;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$notime=`currentTime -q`;\n$jiluweizhi[$p]=$newaa[0];\ncurrentTime $jiluweizhi[$p];\n\nif($notime >= $jiluweizhi[$p]){}else{\nprint (\"\\n<\"+$notime+\"-\"+$jiluweizhi[$p]+\">\\n\");\n\nselectKey -clear ;\nselectKey -add -k -t ($notime+\":\"+$jiluweizhi[$p]);\n\nglobal string $A[];\nglobal string $B[];\nplaybackOptions -min $notime -max $jiluweizhi[$p];\nstring $selemoto[]=`ls-sl`;QA_pickOrigin;\nGetFormLocator2;outlinecolor(110);\nstring $selesaki[]=`ls-sl`;QA_pickTarget;\nAB_keyCP;\nCreateEmptyGroup;rename \"X______X\";\nselect $B;\nfor($yy in `ls-sl`){\nselect $yy;\nGetFormLocator3;rename \"Jinahuaaa___\";\n}\nplaybackOptions -min $sttimehuanyuan -max $edtimehuanyuan;\nselect $A;\nselectKey -clear ;seledingtimeE;\n}\n}\n}}//Step A\nKEYpose_jianhuaworksss;\n////Step B\nselect \"*Jinahuaaa___\" ;pickWalk -d up;" )
        -mi "    |___  Step C huigui" ( "////Step C\nint $sttimshabi = `playbackOptions -q -minTime`;\nint $edtimshabi = `playbackOptions -q -maxTime`;\nselect -r \"X______X*\";\nstring $jiangeGG[]=`ls-sl`;\nint $keyposeshuliang=`size($jiangeGG)`;\nint $seleF9shuliang=`size($A)`;print $seleF9shuliang;\n\n//////////////////\nfor($i = 0;$i<`size($jiangeGG)`;$i++){//forA start/////////\nselect $jiangeGG[$i];\nprint ($jiangeGG[$i]+\"\\n\");\n\nfor($j = 0;$j<`size($A)`;$j++){\npickWalk -d left;\n}\nfor($k = 1;$k<`size($A)`;$k++){\naddselgo(3);\n}\n//////////////////\n\nstring $seeltarget[]=`ls-sl`;\nrangeworkA;\nplaybackOptions -sst `playbackOptions -q -minTime` -set `playbackOptions -q -maxTime` -sv true ;\ntimeSliderCopyKey;\n\nselect $A;\nplaybackOptions -sst `playbackOptions -q -minTime` -set `playbackOptions -q -maxTime` -sv true ;\ntimeSliderPasteKey false;\nselect $seeltarget;delete;\nselect $A;\n}//forA end/////////\n//////\nselect $jiangeGG;delete;\nselect $A;\nplaybackOptions -min $sttimshabi -max $edtimshabi;\n//////////////////////////////////////////////////////\nprint \"\\n--------------------------------\\n\";\nCurveOperation2 seleminmax;\nkeyTangent -itt spline -ott spline;\nglobal string $selcurves[];global float $FrameA;global float $FrameB;son;\nselectKey -k -t $FrameA -t $FrameB $selcurves;\nkeyTangent -itt flat -ott flat;" )
        -mi "    |___  Step D jiluselkeysE 前後key>keytongyiB(s+s)" ( "global proc KEYpose_qianhoushan(){\nglobal float $jiluselkeysE[];\nseledingtimeE;\nfor($n in $jiluselkeysE){\ncurrentTime $n;\nNextTime;\nCurveOperation onekeyselect;keytongyiB;//timeSliderClearKey;\nPreviousTime;PreviousTime;\nCurveOperation onekeyselect;keytongyiB;//timeSliderClearKey;\nNextTime;\n}}KEYpose_qianhoushan;" )
        -mi "--------------------------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "looooopwork" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "looooopwork" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "loop" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "autoKeyframe.png" 
        -image1 "autoKeyframe.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc looooopwork() {\nif(`window -ex looooopworkW` == true )deleteUI looooopworkW;\nwindow -title \"looooopwork\" -w 50 -h 100 looooopworkW;\ncolumnLayout;\ntext -label \"-lastTime>fastTime>>copypast-\";\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -l \"fastTime+1 delete\" -c \"loopworka(1)\";\nbutton -h 35 -l \" liu xia \" -c \"loopworka(0)\";\nsetParent ..;\ntext -label \"|--------------<<<<--------------|\";\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -l \"fastTime>>lastTime\" -c \"loopworkb\";\nsetParent ..;\nshowWindow looooopworkW;\n}looooopwork;\n\nglobal proc loopworka(int $shan) {\nGoToMaxFrame;selectKey;\nCurveOperation onekeyadd;\nselectKey -clear ;NextTime;\nCurveOperation onekeyadd;\n$danduchannelff=`keyframe -q -name`;\nselectKey -clear ;\nselectKey -add -k -t `playbackOptions -q -maxTime` -t (`playbackOptions -q -maxTime`+1) $danduchannelff;\nGoToMinFrame;\ncopyKey ;\npasteKey -time `playbackOptions -q -minTime` -float `playbackOptions -q -minTime` -option merge -copies 1 -connect 0 -timeOffset 0 -floatOffset 0 -valueOffset 0;\nif($shan ==1){cutKey -clear ;}\n}\nglobal proc loopworkb() {\nGoToMinFrame;CurveOperation onekeyadd;\nGoToMaxFrame;CurveOperation onekeyadd;\nselectKey;$danduchannelff=`keyframe -q -name`;\nselectKey -clear ;\nselectKey -add -k -t (`playbackOptions -q -minTime`+\":\"+`playbackOptions -q -maxTime`) $danduchannelff;\nGoToMaxFrame;\ncopyKey ;\npasteKey -time `playbackOptions -q -maxTime` -float `playbackOptions -q -maxTime` -option merge -copies 1 -connect 0 -timeOffset 0 -floatOffset 0 -valueOffset 0;\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "checkMinMaxKeys" ( "global proc checkMinMaxKeys(){\nstring $mismatchCurves[] = {};string $mismatchCurvesOO[] = {};\nif(`keyframe -an keys -q -kc`!=0){\n}else{selectKey;}\n$selectedCurves=`keyframe -q -name`;     \nfor($curvedan in $selectedCurves){\n        float $value[] = `keyframe -selected -q -valueChange $curvedan`;\n        int $jian =`size $value`-1;\n//float $Ashu=$value[0];\n//float $Bshu=$value[$jian];\nfloat $Ashu = (floor($value[0] * 1000)) / 1000.0;//小数点第3位まで\nfloat $Bshu = (floor($value[$jian] * 1000)) / 1000.0;//小数点第3位まで\n\n        if($Ashu != $Bshu){\n            //print(\"ループしていない: \" + $curvedan +\"_\"+ $value[0]+\">>>\"+$value[$jian]+\"\\n\");\n            $mismatchCurves[size($mismatchCurves)] = $curvedan;\n        }else{\n            //print(\"アニメーションカーブ\" + $curvedan + \"はループしています。\\n\");\n            $mismatchCurvesOO[size($mismatchCurvesOO)] = $curvedan;\n        }\n}selectKey -clear ;\n\n    // UIを作成\n    if(`window -exists mismatchWindow`) deleteUI mismatchWindow;\n    window mismatchWindow;\n    columnLayout -adjustableColumn true;\n/*-    text -label \"一致のアニメーションカーブ:\";\n       for($curves in $mismatchCurvesOO){\n            string $cmda = (\"select -r \\\"\" + $curves + \"\\\";\");\n            button -label $curves -command $cmda;\n        }-*/\n        text -label \"不一致のアニメーションカーブ(小数点第3位まで):\";\n        for($curve in $mismatchCurves){\n            string $cmd = (\"select -r \\\"\" + $curve + \"\\\";\");\n            button -label $curve -command $cmd;\n        }\n    showWindow mismatchWindow;\n}checkMinMaxKeys;" )
        -mi "autowait_work" ( "// FKコントローラー（尻?頭）\nstring $fkControllers[] = {\n    \":Con_FK_J_hip_C\",     // 尻\n    \":Con_FK_J_spine_01_C\",    // 腹\n    \":Con_FK_J_spine_02_C\", // 中腹\n    \":Con_FK_J_spine_03_C\",      // 胸\n    \":Con_FK_J_neck_C\",       // 首\n    \":Con_FK_J_head_C\"        // 頭\n};\n// 回転幅（尻＜腹＜中腹＜胸、首・頭は反動補正）\nfloat $ampRotZs[] = {0.8, 1.0, 1.3, 1.6, -0.5, -1.2}; // Z軸\nfloat $ampRotXs[] = {0.2, 0.3, 0.4, 0.5, -0.2, -0.4}; // X軸\nfloat $ampRotYs[] = {0.2, 0.2, 0.3, 0.4, -0.2, -0.3}; // Y軸\n\nint $startFrame = 1;\nint $endFrame = 120;\nfloat $freq = 0.05;//周波数 大きいほど速く揺れ、小さいほどゆっくり揺れます 0.05>120F\n\nfor ($i = 0; $i < size($fkControllers); $i++) {\n    string $ctrl = $fkControllers[$i];\n    float $ampZ = $ampRotZs[$i];\n    float $ampX = $ampRotXs[$i];\n    float $ampY = $ampRotYs[$i];\n\n    // 現在の回転値を取得\n    float $baseZ = `getAttr ($ctrl + \".rotateZ\")`;\n    float $baseX = `getAttr ($ctrl + \".rotateX\")`;\n    float $baseY = `getAttr ($ctrl + \".rotateY\")`;\n\n    float $phaseZ = rand(0, 0.5);\n    float $phaseX = rand(0, 0.5);\n    float $phaseY = rand(0, 0.5);\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++) {\n        float $valZ = $baseZ + sin($frame * $freq + $phaseZ) * $ampZ;\n        float $valX = $baseX + sin($frame * $freq + $phaseX) * $ampX;\n        float $valY = $baseY + sin($frame * $freq + $phaseY) * $ampY;\n\n        setKeyframe -at \"rotateZ\" -t $frame -v $valZ $ctrl;\n        setKeyframe -at \"rotateX\" -t $frame -v $valX $ctrl;\n        setKeyframe -at \"rotateY\" -t $frame -v $valY $ctrl;\n    }\n}\n/////////////////////////////\n// 両手のIKコントローラー\nstring $ikArms[] = {\n    \"ch02026100_00:Con_IK_J_arm_L\",\n    \"ch02026100_00:Con_IK_J_arm_R\"\n};\n\n// アニメーション設定（同じ周期で軽く揺れる）\nfloat $ampX_hand = 0.01; // 左右の揺れ（translateX）\nfloat $ampY_hand = 0.01; // 上下の揺れ（translateY）\nfloat $ampZ_hand = 0.01; // 前後の揺れ（translateZ）\n\nfor ($ctrl in $ikArms) {\n    // 現在の位置を取得\n    float $baseX = `getAttr ($ctrl + \".translateX\")`;\n    float $baseY = `getAttr ($ctrl + \".translateY\")`;\n    float $baseZ = `getAttr ($ctrl + \".translateZ\")`;\n\n    float $phaseX = rand(0, 0.5);\n    float $phaseY = rand(0, 0.5);\n    float $phaseZ = rand(0, 0.5);\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++) {\n        float $valX = $baseX + sin($frame * $freq + $phaseX) * $ampX_hand;\n        float $valY = $baseY + sin($frame * $freq + $phaseY) * $ampY_hand;\n        float $valZ = $baseZ + sin($frame * $freq + $phaseZ) * $ampZ_hand;\n\n        setKeyframe -at \"translateX\" -t $frame -v $valX $ctrl;\n        setKeyframe -at \"translateY\" -t $frame -v $valY $ctrl;\n        setKeyframe -at \"translateZ\" -t $frame -v $valZ $ctrl;\n    }\n}/////////////////////////////\n/////////////////////////////\n// 両肘のFKまたはIK補助コントローラー\nstring $elbows[] = {\n    \"ch02026100_00:Con_IK_J_elbow_R\",\n    \"ch02026100_00:Con_IK_J_elbow_L\"\n};\n// アニメーション設定（控えめな揺れ）\nfloat $ampX_elbow = 0.015; // 左右の揺れ\nfloat $ampY_elbow = 0.02;  // 上下の揺れ\nfloat $ampZ_elbow = 0.015; // 前後の揺れ\n\nfor ($ctrl in $elbows) {\n    // 現在の位置を取得\n    float $baseX = `getAttr ($ctrl + \".translateX\")`;\n    float $baseY = `getAttr ($ctrl + \".translateY\")`;\n    float $baseZ = `getAttr ($ctrl + \".translateZ\")`;\n\n    float $phaseX = rand(0, 0.5);\n    float $phaseY = rand(0, 0.5);\n    float $phaseZ = rand(0, 0.5);\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++) {\n        float $valX = $baseX + sin($frame * $freq + $phaseX) * $ampX_elbow;\n        float $valY = $baseY + sin($frame * $freq + $phaseY) * $ampY_elbow;\n        float $valZ = $baseZ + sin($frame * $freq + $phaseZ) * $ampZ_elbow;\n\n        setKeyframe -at \"translateX\" -t $frame -v $valX $ctrl;\n        setKeyframe -at \"translateY\" -t $frame -v $valY $ctrl;\n        setKeyframe -at \"translateZ\" -t $frame -v $valZ $ctrl;\n    }\n}/////////////////////////////\n/////////////////////////////\n// 両肩のFKコントローラー\nstring $shoulders[] = {\n    \"ch02026100_00:Con_FK_J_shoulder_L\",\n    \"ch02026100_00:Con_FK_J_shoulder_R\"\n};\n// アニメーション設定（控えめな回転）\n\nfloat $ampRotZ_shoulder = 1.0; // 左右の揺れ\nfloat $ampRotX_shoulder = 0.5; // 上下の揺れ\nfloat $ampRotY_shoulder = 0.3; // 前後の揺れ\n\nfor ($ctrl in $shoulders) {\n    // 現在の回転値を取得\n    float $baseZ = `getAttr ($ctrl + \".rotateZ\")`;\n    float $baseX = `getAttr ($ctrl + \".rotateX\")`;\n    float $baseY = `getAttr ($ctrl + \".rotateY\")`;\n\n    float $phaseZ = rand(0, 0.5);\n    float $phaseX = rand(0, 0.5);\n    float $phaseY = rand(0, 0.5);\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++) {\n        float $valZ = $baseZ + sin($frame * $freq + $phaseZ) * $ampRotZ_shoulder;\n        float $valX = $baseX + sin($frame * $freq + $phaseX) * $ampRotX_shoulder;\n        float $valY = $baseY + sin($frame * $freq + $phaseY) * $ampRotY_shoulder;\n\n        setKeyframe -at \"rotateZ\" -t $frame -v $valZ $ctrl;\n        setKeyframe -at \"rotateX\" -t $frame -v $valX $ctrl;\n        setKeyframe -at \"rotateY\" -t $frame -v $valY $ctrl;\n    }\n}/////////////////////////////\n/////////////////////////////\n// 両手の　回転\nstring $handR[] = {\n    \"ch02026100_00:Con_IK_J_hand_L\",\n    \"ch02026100_00:Con_IK_J_hand_R\"\n};\n// アニメーション設定（滑らかな揺れ）\nfloat $ampRotZ_handR = 1.6; // 左右の揺れ\nfloat $ampRotX_handR = 1.3; // 上下の揺れ\nfloat $ampRotY_handR = 1.2; // 前後の揺れ\n\nfor ($ctrl in $handR) {\n    // 現在の回転値を取得\n    float $baseZ = `getAttr ($ctrl + \".rotateZ\")`;\n    float $baseX = `getAttr ($ctrl + \".rotateX\")`;\n    float $baseY = `getAttr ($ctrl + \".rotateY\")`;\n\n    float $phaseZ = rand(0, 1.0);\n    float $phaseX = rand(0, 1.0);\n    float $phaseY = rand(0, 1.0);\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++) {\n        float $valZ = $baseZ + sin($frame * $freq + $phaseZ) * $ampRotZ_handR;\n        float $valX = $baseX + sin($frame * $freq + $phaseX) * $ampRotX_handR;\n        float $valY = $baseY + sin($frame * $freq + $phaseY) * $ampRotY_handR;\n\n        setKeyframe -at \"rotateZ\" -t $frame -v $valZ $ctrl;\n        setKeyframe -at \"rotateX\" -t $frame -v $valX $ctrl;\n        setKeyframe -at \"rotateY\" -t $frame -v $valY $ctrl;\n    }\n}" )
        -mi "//タンジェント合わせ" ( "\n//v1_1_2\n\n//　共通処理\nglobal proc allKeyTangentAlignment(string $source, string $target)\n{\n    // キーを選択しているカーブ名を全て取得\n    string $keyObjList[] = `keyframe -q -name`;\n    \n    // カーブ名の数だけ繰り返す\n    for($keyObj in $keyObjList){\n        keyTangent -l false $keyObj;\n        \n        // カーブの選択フレーム数を取得\n        float $fTimeList[] = `keyframe -selected -q -timeChange $keyObj`;\n        \n        // カーブの選択フレームの回数だけ繰り返す\n        for($fTime in $fTimeList){\n            $keyTangentAngle = `keyTangent -t $fTime -q $source $keyObj`;\n            keyTangent -e -a -t $fTime $target $keyTangentAngle[0] $keyObj;\n        }        \n        keyTangent -l true $keyObj;\n    }\n    \n    // おまけメッセージを出す\n    string $res = \"選択キーのkeyTangentを真っすぐにしました。\";\n    inViewMessage -smg $res -pos midCenter -fade;\n    print($res + \"\\n\");\n}\n\n//GUI\nglobal proc KeyTangentAlignment()\n{\n    // Windowが複数できるの防ぐおまじない\n    if(`window -q -ex \"winKeyTangentAlignment\"`){deleteUI -window \"winKeyTangentAlignment\";}    \n    \n    window -w 120 -h 40 -tlb true -t \"KeyTangentAlignment\" \"winKeyTangentAlignment\";\n    rowLayout -nc 3 ;\n    // サンプルで共通関数に変数を送ってます。\n    button -w 58 -l \" 後ろ基準 \" -c \"allKeyTangentAlignment(\\\"-oa\\\", \\\"-ia\\\")\" ;\n    button -w 58 -l \" 前基準 \" -c \"allKeyTangentAlignment(\\\"-ia\\\", \\\"-oa\\\")\" ;\n    //button -w 58 -l \" MOX \" -c MoxKeyReductor;\n\n    showWindow;\n}KeyTangentAlignment;\n" )
        -mi "M_M_M_keyCP" ( "import maya.cmds as cmds\ndef M_M_M_key():\n    # タイムスライダーの範囲を取得\n    min_time = cmds.playbackOptions(q=True, min=True)\n    max_time = cmds.playbackOptions(q=True, max=True)\n    duration = max_time - min_time\n    # 選択されたリグノードを取得\n    selected = cmds.ls(selection=True)\n    if not selected:\n        cmds.warning(\"リグノードを選択してください。\")\n        return\n    # アニメーションカーブを取得\n    anim_curves = cmds.listConnections(selected, type='animCurve', destination=False)\n    if not anim_curves:\n        cmds.warning(\"選択されたノードにアニメーションカーブが見つかりません。\")\n        return\n    # キーをコピー\n    cmds.copyKey(anim_curves, time=(min_time, max_time))\n    # 前後にペースト\n    paste_offsets = [-duration, duration]\n    for offset in paste_offsets:\n        cmds.pasteKey(anim_curves, time=(min_time, max_time), option=\"replace\", copies=1, timeOffset=offset)\n    print(\"コピー＆ペースト完了：{} → {}\".format((min_time, max_time), paste_offsets))\nM_M_M_key()" )
        -mip 3
        -mi "--------------" ( "" )
        -mi "--------------" ( "" )
        -mi "--------------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mirrorposess" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Mirrorposess" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/taii.son/Documents/maya/2024/ja_JP/prefs/icons/sayu.png" 
        -image1 "C:/Users/taii.son/Documents/maya/2024/ja_JP/prefs/icons/sayu.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc Mirrorposessb(int $fan) {\n    global string $mirroredObjects[];\n    clear($mirroredObjects); // 前回の記録をクリア\n    global string $motoObjects[];\n    clear($motoObjects); // 前回の記録をクリア\nstring $selected[] = `ls -sl`;\n    $motoObjects=$selected;\nfor ($obj in $selected) {\n//string $mirrorObj;\n    string $mirrorObj = \"\";\n    // \"_L\" を含む場合は \"_R\" に変換\n    if (`gmatch $obj \"*_L*\"`) {\n        $mirrorObj = substituteAllString($obj, \"_L\", \"_R\");\n    }\n    // \"_R\" を含む場合は \"_L\" に変換\n    else if (`gmatch $obj \"*_R*\"`) {\n        $mirrorObj = substituteAllString($obj, \"_R\", \"_L\");\n    } else {\n        warning(\"オブジェクト名に '_L' または '_R' が含まれていません: \" + $obj);\n        continue;\n    }\n    // オブジェクトが存在するか確認\n    if (`objExists $mirrorObj`) {\n        // 属性リスト（回転と移動）\n        string $attrs[] = {\"rotateX\", \"rotateY\", \"rotateZ\", \"translateX\", \"translateY\", \"translateZ\"};\n        for ($attr in $attrs) {\n            string $fullAttr = $obj + \".\" + $attr;\n            string $mirrorAttr = $mirrorObj + \".\" + $attr;\n\n            // ロックされていないか確認\n            if (!`getAttr -lock $mirrorAttr`) {\n                float $val = `getAttr $fullAttr`;\nif($fan==0){\n                if ($attr == \"rotateX\" || $attr == \"translateX\") {\n                    $val = $val;\n                }\n}else{\n                // X軸だけ反転\n                if ($attr == \"rotateX\" || $attr == \"translateX\") {\n                    $val = -$val;\n                }\n}\n                // 値を設定\n                setAttr $mirrorAttr $val;\n            } else {\n                warning(\"Skipped locked attribute: \" + $mirrorAttr);\n            }\n        }\n        $mirroredObjects[size($mirroredObjects)] = $mirrorObj;// 反転先を記録\n        print(\"Mirrored unlocked attributes from \" + $obj + \" to \" + $mirrorObj + \"\\n\");\n    } else {\n        warning(\"Mirror object not found for: \" + $obj);\n    }\n}}\n//\nglobal proc LRselll(){\n    global string $motoooObjects[];\n    clear($motoooObjects); // 前回の記録をクリア\n    global string $sakiiiObjects[];\n    clear($sakiiiObjects); // 前回の記録をクリア\nstring $seleLR[] = `ls -sl`;\n$motoooObjects=$seleLR;\nfor ($obj in $seleLR) {\n    string $mirrorObj = \"\";\n    // \"_L\" を含む場合は \"_R\" に変換\n    if (`gmatch $obj \"*_L*\"`) {\n        $mirrorObj = substituteAllString($obj, \"_L\", \"_R\");\n    }\n    // \"_R\" を含む場合は \"_L\" に変換\n    else if (`gmatch $obj \"*_R*\"`) {\n        $mirrorObj = substituteAllString($obj, \"_R\", \"_L\");\n    } else {\n        warning(\"オブジェクト名に '_L' または '_R' が含まれていません: \" + $obj);\n        continue;\n    }$sakiiiObjects[size($sakiiiObjects)] = $mirrorObj;\n}}\n//\nglobal proc MirrorposeW() {\nif(`window -ex MirrorposessW` == true )deleteUI MirrorposessW;\nwindow -title \"MirrorposessW\" -w 50 -h 100 MirrorposessW;\ncolumnLayout;text -label \"     \";\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -l \"R<Set>L\" -c \"LRselll\";\nbutton -h 35 -l \"moto\" -c \"select -r $motoooObjects;\";\nbutton -h 35 -l \"saki\" -c \"select -r $sakiiiObjects;\";\nbutton -h 35 -l \" ALL \" -c \"select -r $motoooObjects $sakiiiObjects;\";\nsetParent ..;\ntext -label \"|-----------------------------------|\";\nrowLayout -nc 6 -cw2 5 20;\ntext -label \"LR<>LR\";\nbutton -h 35 -l \"    fan   \" -c \"Mirrorposessb(1)\";\nbutton -h 35 -l \"  no fan  \" -c \"Mirrorposessb(0)\";\nsetParent ..;\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -l \"   moto   \" -c \"select -r $motoObjects;\";\nbutton -h 35 -l \"   saki   \" -c \"select -r $mirroredObjects;\";\nbutton -h 35 -l \"   ALL   \" -c \"select -r $motoObjects $mirroredObjects;\";\nsetParent ..;\n text -label \"----------------------------------------------\";\n text -label \"///old----------------------------------------\";\nrowLayout -nc 10 -cw2 10 20;\nbutton -l \"   sel_R>L   \" -c \"seleRL\";\nbutton -l \"   sel_L>R   \" -c \"seleLR\";\nbutton -l \"  clear  \" -c \"clear $LLL;clear $RRR;\";\nsetParent ..;\n text -label \"----------------------------------------------\";\nrowLayout -nc 10 -cw2 10 20;\nbutton -l \"again  R      \" -c \"select $RRR\";\nbutton -l \"again  L      \" -c \"select $LLL\";\nsetParent ..;\nshowWindow MirrorposessW;\n}MirrorposeW;\n\n///old\nglobal proc seleLR(){\nglobal string $LLL[];\nglobal string $RRR[];\nstring $motooo[] = `ls -sl`;\nfor ($x = 0;$x < `size($motooo)`; $x++){\nselect $motooo[$x];\n$LLL[$x] = $motooo[$x];\nstring $dddd = substituteAllString($motooo[$x],\"_L\",\"_R\");\nselect $dddd;\nstring $LoTestt[0] = `ls -sl`;\n$RRR[$x] = $LoTestt[0]; \n}select $RRR;\n}//seleLR;\nglobal proc seleRL(){\nglobal string $LLL[];\nglobal string $RRR[];\nstring $motooo[] = `ls -sl`;\nfor ($x = 0;$x < `size($motooo)`; $x++){\nselect $motooo[$x];\n$RRR[$x] = $motooo[$x];\nstring $dddd = substituteAllString($motooo[$x],\"_R\",\"_L\");\nselect $dddd;\nstring $LoTestt[0] = `ls -sl`;\n$LLL[$x] = $LoTestt[0]; \n}select $LLL;\n}//seleRL;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "//xxxxxx" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "//xxxxxx" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "123d.png" 
        -image1 "123d.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "global proc selWindow(){\nif(`window -ex SelrigW` == true )deleteUI SelrigW;\nwindow -t \"xxxxxxxxx\" -w 50 -h 100 SelrigW;\ncolumnLayout;\n text -label \"----------------------------------------------\";\nrowLayout -nc 10 -cw2 10 20;\nbutton -l \"    body_sel      \" ;//-c \"select\nsetParent ..;\n text -label \"----------------------------------------------\";\nshowWindow SelrigW;\n}selWindow;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "//Set" ( "select \n$createSetResult = `sets -name \"YYY_zanshia\"`;\n\nselect -r -ne X__human_mod X_FK_rig X__gomi_mod;\nPickWalkRight;HideSelectedObjects;select -cl;" )
        -mi "   |＿戻す" ( "" )
        -mi "//Leg　IK　地面+fanleg" ( "select ;\nGetFormLocator2;outlinecolor(010);\nzoty;move -r -os -wd 0 0 0.72;rename \"Lot___legLa\";\nworldfoot;" )
        -mi "                       |_下処理//auto expression" ( "expression -s \";\" -o X -n \"test______L\" -ae 1 -uc all;" )
        -mi "//Leg　IK　地面" ( "" )
        -mi "//IK leg > FK con" ( "select -r ;\nduplicate -rr;parent -w;\nSelectHierarchy;\nselect -d ;delete;\nselect ;alljontradius(0.3);\ngaimingzi(\"Jia_LLL_\");string $selll[]=`ls-sl`;outlinecolor(010);\n//VVV オブジェクトを特定のディスプレイ レイヤに追加または削除するために使用できます VVV\neditDisplayLayerMembers -noRecurse \"defaultLayer\" `ls -selection -ufe`;\n//\nselect -r en09000110_00:model:J_thighs_L ;\nselect -tgl Jia_LLL_J_thighs_L ;putongcon(1);putongcon(11);\n//\nselect sonbakeO;\nselect sonbakeT;\nselect foundconmubiao;delete;\n//con\nselect putongcon(1);putongcon(11);\nselect putongcon(11);\n//fanjiao\nselect -r ;select -tgl ;retargetC;\n//hiji A\nselect ;addretarget;GetFormLocator3;\nselect -add ;MatchTranslation;putongcon(1);\n" )
        -mi "                 |_O>T" ( "" )
        -mi "//FK 上肢" ( "" )
        -mi "--------------------------" ( "" )
        -mi "//鎖骨__尻 body 春" ( "" )
        -mi "             |_//fan 尻__鎖骨" ( "select addlotbake;\n//\nSSon_Rig_lian_selD(0,-1,1,0.5,0,0);\nselect delete;\n//\nselect ;MatchTranslation;LtL_point;\n\nselect originnone;MatchTranslation;MatchRotation;LtL_orient;\n" )
        -mi "             |_//胸中心_前後" ( "" )
        -mi "                   |_//jisuan" ( "" )
        -mi "//____body______add animelayer" ( "sonbakelayer_TOTO(2);rename Txyz_animelayer body_TTT;" )
        -mi "//____body______global" ( "" )
        -mi "--------------------------" ( "" )
        -mi "----------翅バタバタ_できたモーションに幅をscaleかける" ( "select \nduochongaddcon1;rename \"wingmotoLL\";outlinecolor(107508);Ltx;Lty;Ltz;Lrx;Lry;Lrz;\nselect \nfor($u in `ls-sl`){\nselect wingmotoLL $u;\noriginnone;LtL_point;\n}" )
        -mi "//肘膝pv　Check" ( "querenLelbowknee;\n" )
        -mi "//体中心軌道lot取る__+con" ( "CreateLocator;rename \"Zhongxin_____\";outlinecolor(011);\nselect -r \nselect -add Zhongxin_____;duochongcon(1);\nselect Zhongxin_____;sonbakeT;foundconmubiao;delete;\n\nselect \nLtL_point;\n" )
        -mi "//全体動作幅調整(減小等用)" ( "select \naddbake;rename \"NEW_move\";\n\nselect \nLtL_parent;\nselect -r NEW_move;performGroup false;rename \"Group______XXXXXX\";outlinecolor(1050);\n" )
        -mi "//auto 肩" ( "" )
        -mi "//auto hand_R 春" ( "" )
        -mi "//Secondary後,Primary尻尾rig_正位" ( "CreateLocator;rename \"zhongjianA\";\nselect ;\nselect -tgl \"zhongjianA\";duochongcon(1);\nselect \"zhongjianA\";sonbakeT;outlinecolor(100);foundconmubiao;delete;\n\n///\nselect -r zhongjianA ;\nselect -tgl;LtL_point;\n" )
        -mi "--------------------------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 445
        -enable 1
        -width 448
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/taii.son/Documents/maya/2024/ja_JP/prefs/icons/add_D3.png" 
        -image1 "C:/Users/taii.son/Documents/maya/2024/ja_JP/prefs/icons/add_D3.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 445
        -enable 1
        -width 448
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/Users/atman/Documents/maya/2018/ja_JP/prefs/icons/add_D3.png" 
        -image1 "C:/Users/atman/Documents/maya/2018/ja_JP/prefs/icons/add_D3.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "シーン内のノードのリレーションシップを視覚的に表示します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ノード エディタ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ノエ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "NodeEditorWindow" 
        -sourceType "mel" 
        -doubleClickCommand "global proc HyperShadeson(){\nif(`window -exists HyperShadeson`)deleteUI HyperShadeson;\nwindow HyperShadeson;\ngridLayout -numberOfColumns 5 -cellWidthHeight 50 25;\n//button-label \"0\" -command(\"Clear\");\n//button-label \"+\" -command(\"add\");\n//button-label \"-\" -command(\"bate\");\n//button-label \"=\" -command(\"duiqi\");\nbutton-label \"juli\" -command(\"distance\");\nbutton-label \"*/\" -command(\"multiplyDivide\");\nbutton-label \"+/-A\" -command(\"plusMinusAverage\");\nbutton-label \"tiaojian\" -command(\"conditionn\");\nbutton-label \"cvchang\" -command(\"AutocurveInfo\");\n//\nbutton-label \"..t.\" -command(\"abcplusT\");\nbutton-label \"..o.\" -command(\"abcplusO\");\nbutton-label \"..c.\" -command(\"abcplusC\");\n\nbutton-label \"l>T>r\" -command LRtongbuT;\nbutton-label \"l>O>y\" -command LRtongbuO;\n//\nshowWindow HyperShadeson;\n}//HyperShadeson;\n////////////////////////////////////////////////\nglobal proc Clear(){\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"clearGraph\");\n}\nglobal proc add(){\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\n}\nglobal proc bate(){\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"removeSelected\");\n}\nglobal proc duiqi(){\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"rearrangeGraph\");\n}\n////////////////////////////////////////////////\nglobal proc distance(){//juli\ncreateRenderNodeCB -asUtility \"\" distanceBetween \"\";\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\n}\n////////////////////////////////////////////////\nglobal proc multiplyDivide(){//cheng chu\ncreateRenderNodeCB -asUtility \"\" multiplyDivide \"\";\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\n}HyperShadeson;\n////////////////////////////////////////////////\nglobal proc plusMinusAverage(){//my+-\n$node_pma = `createNode plusMinusAverage`;\n// example 1D\n setAttr ($node_pma + \".input1D[0]\") 1;\n setAttr ($node_pma + \".input1D[1]\") 2;\n //setAttr ($node_pma + \".input1D[2]\") 3;\n //setAttr ($node_pma + \".input1D[3]\") 4;\ngetAttr ($node_pma + \".output1D\");\n// example 2D\n//setAttr ($node_pma + \".input2D[0].input2Dx\") 1;\n//setAttr ($node_pma + \".input2D[1].input2Dx\") 2;\n//setAttr ($node_pma + \".input2D[2].input2Dx\") 3;\n//setAttr ($node_pma + \".input2D[0].input2Dy\") 2;\n//setAttr ($node_pma + \".input2D[1].input2Dy\") 4;\n//setAttr ($node_pma + \".input2D[2].input2Dy\") 6;\n\n// you can also set both values in one command\n//setAttr -type \"double2\" ($node_pma + \".input2D[3]\") 4 8;\n//getAttr ($node_pma + \".output2D\");\n\n// example 3D\n//setAttr -type \"double3\" ($node_pma + \".input3D[0]\") 1 2 4;\n//setAttr -type \"double3\" ($node_pma + \".input3D[1]\") 2 4 8;\n//setAttr -type \"double3\" ($node_pma + \".input3D[2]\") 3 6 12;\n//setAttr ($node_pma + \".input3D[3].input3Dx\") 4 ;\n//setAttr ($node_pma + \".input3D[3].input3Dy\") 8 ;\n//setAttr ($node_pma + \".input3D[3].input3Dz\") 16 ;\n//getAttr ($node_pma + \".output3D\");\n\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\n}\n/////////////////////////////////////////////////////////////////////////////////////////\nglobal proc conditionn(){\ncreateRenderNodeCB -asUtility \"\" condition \"\";\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\n}\n////////////////////////////////////////////////\n////////////////////////////////////////////////\nglobal proc AutocurveInfo(){\n/*-\n//カーブ選択Ｍｅｌ実行 curveInfoが作成され 自動で 繋がる\nstring $selName[];\nstring $selShapeName[];\nstring $infoName;\n// トランスフォームとシェイプノード名を取得\n$selName = `ls -sl `;\n$selShapeName = `listRelatives -s $selName`;\n// curveInfoを作成後、カーブに接続する\n$infoName = `createNode \"curveInfo\"`;\nconnectAttr -f ($selShapeName[0] + \".worldSpace[0]\") ($infoName + \".inputCurve\");\n-*/\narclen -ch 1;\n}\n/////////////////////////////////////////////////////////////////////////////////////////\nglobal proc abcplusT(){\nstring $j[] = `ls-sl`;\nstring $j_ctrl;\nstring $node_pma = `createNode -n ($j_ctrl+\"_plusMinusAverage\") plusMinusAverage`;\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\nsetAttr ($node_pma+\".operation\") 1;\nsetAttr -type \"double3\" ($node_pma + \".input3D[0]\") 0 0 0;//新規項目の追加\nsetAttr -type \"double3\" ($node_pma + \".input3D[1]\") 0 0 0;//新規項目の追加\nconnectAttr ($j[0] + \".translate\") ($node_pma + \".input3D[0]\");\nconnectAttr ($j[1] + \".translate\") ($node_pma + \".input3D[1]\");\nconnectAttr -f ($node_pma + \".output3D\") ($j[2] + \".translate\");\n}\n////////////////////////////////////////////////\nglobal proc abcplusO(){\nstring $j[] = `ls-sl`;\nstring $j_ctrl;\nstring $node_pma = `createNode -n ($j_ctrl+\"_plusMinusAverage\") plusMinusAverage`;\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\nsetAttr ($node_pma+\".operation\") 1;\nsetAttr -type \"double3\" ($node_pma + \".input3D[0]\") 0 0 0;\nsetAttr -type \"double3\" ($node_pma + \".input3D[1]\") 0 0 0;\n//connectAttr ($j[0] + \".translate\") ($node_pma + \".input3D[0]\");\n//connectAttr ($j[1] + \".translate\") ($node_pma + \".input3D[1]\");\nconnectAttr ($j[0] + \".rotate\") ($node_pma + \".input3D[0]\");\nconnectAttr ($j[1] + \".rotate\") ($node_pma + \".input3D[1]\");\nconnectAttr -f ($node_pma + \".output3D\") ($j[2] + \".rotate\");\nselect $j;\n}\n////////////////////////////////////////////////\nglobal proc abcplusC(){\nstring $j[] = `ls-sl`;\nstring $j_ctrl;\nstring $node_pma = `createNode -n ($j_ctrl+\"_plusMinusAverage\") plusMinusAverage`;\nhyperShadePanelGraphCommand(\"hyperShadePanel1\", \"addSelected\");\nsetAttr ($node_pma+\".operation\") 1;\nsetAttr -type \"double3\" ($node_pma + \".input3D[0]\") 0 0 0;\nsetAttr -type \"double3\" ($node_pma + \".input3D[1]\") 0 0 0;\nconnectAttr ($j[0] + \".scale\") ($node_pma + \".input3D[0]\");\nconnectAttr ($j[1] + \".scale\") ($node_pma + \".input3D[1]\");\nconnectAttr -f ($node_pma + \".output3D\") ($j[2] + \".scale\");\n}\n///////////////////\nglobal proc LRtongbuT(){\nstring $nima[] = `ls-sl`;\nselect $nima[1];\nCBdeleteConnection ($nima[1]+\".tx\");\nCBdeleteConnection ($nima[1]+\".ty\");\nCBdeleteConnection ($nima[1]+\".tz\");\n\nstring $channl[] = `channelBox -q -sma mainChannelBox`;\n$node_pma = `createNode multiplyDivide`;\nconnectAttr ($nima[0] + \".tx\") ($node_pma + \".input1X\");\nconnectAttr ($nima[0] + \".ty\") ($node_pma + \".input1Y\");\nconnectAttr ($nima[0] + \".tz\") ($node_pma + \".input1Z\");\n\nconnectAttr ($node_pma + \".outputX\") ($nima[1] + \".tx\");\nconnectAttr ($node_pma + \".outputY\") ($nima[1] + \".ty\");\nconnectAttr ($node_pma + \".outputZ\") ($nima[1] + \".tz\");\nselect $node_pma;rename \"multiplyDivide1_T\";select $nima;\n}\nglobal proc LRtongbuO(){\nstring $nima[] = `ls-sl`;\nselect $nima[1];\nCBdeleteConnection ($nima[1]+\".rx\");\nCBdeleteConnection ($nima[1]+\".ry\");\nCBdeleteConnection ($nima[1]+\".rz\");\nstring $channl[] = `channelBox -q -sma mainChannelBox`;\n$node_pma = `createNode multiplyDivide`;\nconnectAttr ($nima[0] + \".rx\") ($node_pma + \".input1X\");\nconnectAttr ($nima[0] + \".ry\") ($node_pma + \".input1Y\");\nconnectAttr ($nima[0] + \".rz\") ($node_pma + \".input1Z\");\n\nconnectAttr ($node_pma + \".outputX\") ($nima[1] + \".rx\");\nconnectAttr ($node_pma + \".outputY\") ($nima[1] + \".ry\");\nconnectAttr ($node_pma + \".outputZ\") ($nima[1] + \".rz\");\nselect $node_pma;rename \"multiplyDivide1_O\";select $nima;\n}" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "コンテンツ ブラウザ" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "コンテンツ ブラウザ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "コブ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "ContentBrowserWindow;contentBrowserSetContext(\"WindowsMenu\", \"examples\", \"Examples/Modeling/Sculpting Base Meshes/Animals\");" 
        -sourceType "mel" 
        -doubleClickCommand "string $sele[]=`ls-sl`;\nsetAttr ($sele[0]+\".scaleX\") 0.1;\nsetAttr ($sele[0]+\".scaleY\") 0.1;\nsetAttr ($sele[0]+\".scaleZ\") 0.1;\n" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Maya プリファレンスを設定および保存します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "プリファレンス" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "プリファ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "PreferencesWindow" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "プラグインをロードまたは自動的にロードします" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "プラグイン マネージャ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "プマ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "PluginManager" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "アトリビュート間のエクスプレッションを編集します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "エクスプレッション エディタ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "エエ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "ExpressionEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "アトリビュートを削除します" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "アトリビュートの削除..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "アトリビ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "DeleteAttribute" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ShapeColorOverride" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ShapeColorOverride" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Color" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "setcolor;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "rigwork" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "rigwork" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "rig" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "MakeRig" 
        -sourceType "mel" 
        -doubleClickCommand "global proc quickrigwork(){\nif(`window -ex quickrigwork` == true )deleteUI quickrigwork;\nwindow -sizeable 1 -mnb false -mxb false -title \"rig\" quickrigwork;\ncolumnLayout -adj 1 ;\nbutton -l \"outliner A\" -c RUp_move;\nbutton -l \"outliner V\" -c LDown_move;\nbutton -l \"displayer A\" -c \"layerEditorMoveDisplayLayer 1\";\nbutton -l \"displayer V\" -c \"layerEditorMoveDisplayLayer 0\";\n\nbutton -l \"A,B>A,A_x\" -c quickrename;\nbutton -l \"A,B>A,A\"   -c quickrename2;\nbutton -l \"A,B>A_x,A\" -c quickrename1;\nbutton -l \"classUp\" -c classUP;\nbutton -l \"JiaoHuan\" -c jiaohuanweizhi;\nbutton -l \"Heti\" -c shapehetiwork;\nbutton -l \"shapejiaohua\" -c jiaohuanweizhi_shape;\nseparator;\nbutton -l \"kuaisujiancha\" -c kuaisujiancharig;\nseparator;\nbutton -l \"shape+\" -c \"shapescale(10)\";\nbutton -l \"shape-\" -c \"shapescale(-10)\";\nbutton -l \"handle\" -c displayhandles;\nbutton -l \"segmentscale0\" -c \"segmentscale(0)\";\nbutton -l \"segmentscale1\" -c \"segmentscale(1)\";\nbutton -l \"face>lot\" -c facecenter;\nseparator;\nbutton -l \"joint_jiange\" -c \"jiangelot(4)\";\nbutton -l \"dingzhongxin\" -c \"dingzhongxin\";\nshowWindow quickrigwork;\n}\nif (`window -exists quickrigwork`){deleteUI -window quickrigwork;}else{quickrigwork;}\n///////////////////////////////////////////\nglobal proc quickrename(){\nstring $seleA[] = `ls-sl`;\nrename $seleA[1] ($seleA[0] + \"_X\");\nstring $seleB[] = `ls-sl`;\nselect $seleB[1];\n}\n//\nglobal proc quickrename1(){\nstring $seleA[] = `ls-sl`;\nrename $seleA[0] ($seleA[0] + \"_x\");\nrename $seleA[1] $seleA[0];\n}\n//\nglobal proc quickrename2(){\nstring $seleA[] = `ls-sl`;\nrename $seleA[1] $seleA[0];\n}\n//\nglobal proc classUP(){\nstring $seleA[] = `ls-sl`;\npickWalk -d up;\nstring $oya1[] = `ls-sl`;\npickWalk -d up;\nstring $oya2[] = `ls-sl`;\nparent $seleA $oya2;\n}\n///////\nglobal proc kuaisujiancharig(){\nstring $kuaisujiancharig[] = `ls-sl`;\nGetFormLocator2;\nstring $newlot[] = `ls -sl`;\ngroup;rename \"quickcheckkk_XXOO\";\nselect $newlot;\nmakeIdentity -apply true -t 0 -r 0 -s 1 -n 0;\nfor($ma=1; $ma < (size($newlot)+1); $ma++){ \nif ($ma < size($newlot)){ \nparent $newlot[$ma] $newlot[$ma-1] ;\n}\n}\nint $cnt2 = 0;\nfor ($val in $kuaisujiancharig){\npointConstraint $kuaisujiancharig[$cnt2] $newlot[$cnt2];\n$cnt2++;\n}\nselect -cl;\n}\n//\nglobal proc jiaohuanweizhi(){\nstring $jiaohuanweishi[]=`ls-sl`;\nGetFormLocator2;\nstring $jiaohuanweishiB[]=`ls-sl`;\nselect $jiaohuanweishiB[0] $jiaohuanweishi[1];\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\nSetKeyAnimated;\npointConstraint -remove;\norientConstraint -remove;\nselect $jiaohuanweishiB[1] $jiaohuanweishi[0];\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\nSetKeyAnimated;\npointConstraint -remove;\norientConstraint -remove;\ndelete $jiaohuanweishiB;\nselect $jiaohuanweishi;\n}\n//\nglobal proc shapehetiwork(){\nstring $hetisel[]=`ls-sl`;\nCreateEmptyGroup;rename ($hetisel[0]+\"_heti\");\nselect $hetisel;pickWalk -d down;\nselect -add \"*_heti\";\nparent -r -s;\ndelete $hetisel;\nselect -cl ;\n}\n\n///////\nglobal proc jiaohuanweizhi_shape(){\nstring $objSel[] = `ls -sl`;\nstring $objShapeSel[] = `listRelatives -c -s`;\nint $objCount = size($objSel);\nfor ($i = 0; $i < $objCount - 1 ; ++$i){\n\tparent -s -r $objShapeSel[$i] $objSel[$i+1];\n\tparent -s -r $objShapeSel[$i+1] $objSel[$i];\n\t}\nselect -r $objSel;\n}\n///////\nglobal proc displayhandles(){\nstring $sellot[]=`ls-sl`;\nint $ss=`size($sellot)`;\nif($ss!=0){\nfor($a=0;$a<$ss;$a++){\nint $vis=(`getAttr($sellot[$a]+\".displayHandle\")`) ? 1:0;\nif($vis!=1){\nsetAttr ($sellot[$a]+\".displayHandle\") 1;\nsetAttr ($sellot[$a]+\".selectHandleX\") 50;\n}else{\nsetAttr ($sellot[$a]+\".displayHandle\") 0;\nsetAttr ($sellot[$a]+\".selectHandleX\") 0;\n}\n}}}\n\n//\nglobal proc shapescale(int $beishu){\nif(size(`ls-sl`)!=0){\nPickWalkDown;\nstring $lotshape[]=`ls-sl`;\nfor($a=0;$a<`size($lotshape)`;$a++){\nint $bian=getAttr ($lotshape[$a]+\".localScaleX\")+$beishu;\nsetAttr ($lotshape[$a] + \".localScaleX\") $bian; \nsetAttr ($lotshape[$a] + \".localScaleY\") $bian; \nsetAttr ($lotshape[$a] + \".localScaleZ\") $bian;\n}PickWalkUp;\n}\n}\n//\nglobal proc segmentscale(int $onof){\nstring $svjoint[]=`ls-sl`;\nint $josize=`size($svjoint)`;\nfor ($x=0;$x<$josize;$x++){\nsetAttr ($svjoint[$x] + \".segmentScaleCompensate\") $onof;\n}\n}\n\n////\n//performPolyChipOff 0 0;\n//CenterPivot;\n//A:face sele>Go\n//http://mayastation.typepad.com/maya-station/2009/11/where-is-the-center-of-a-polygon.html\nglobal proc facecenter(){\nstring $poly[]=`ls -sl`;\nif($poly[0] != \"\"){\n string $verts[]=`polyInfo -fv $poly[0]`;\n string $vert[]=stringToStringArray($verts[0],\"FACE :\");\n string $obj[]=`ls -sl -objectsOnly`;\n int $numVerts=(`size ($vert)`-2);\n float $px=0;\n float $py=0;\n float $pz=0;\n for ($i=1; $i< ($numVerts+1); $i++) {\n  string $vertID=($obj[0]+\".vtx[\"+$vert[$i]+\"]\");\n  float $pos[]=`xform -q -ws -t $vertID`;\n  $px += $pos[0];\n  $py += $pos[1];\n  $pz += $pos[2];\n }\n vector $center=<<($px/$numVerts), ($py/$numVerts),($pz/$numVerts)>>;\n print (\"center point of \"+$poly[0]+ \" is: \"+ $center);\n //xform -os -t ($center.x) ($center.y) ($center.z) locator1;\n float $newx=$center.x;float $newy = $center.y;float $newz = $center.z;\n spaceLocator;\n move -r $newx $newy $newz;\n}\n}//facecenter;\n\n////\nglobal proc jiangelot(int $kazu){//oya+ko 2jointsel\nint $numJntss =$kazu-1;\nstring $selejoints[]=`ls -sl`;\nint $shuliang=`size $selejoints`-1;\nselect $selejoints[0];GetFormLocator2;rename \"oya\";\nselect $selejoints[$shuliang];GetFormLocator2;rename \"moduan\";\nparent moduan oya;\nfloat $jiangeshu=`getAttr moduan.tx`/$numJntss;\nint $a;\nselect -r oya;\nfor($a==1;$a<$numJntss;$a++){\nGetFormLocator3;move -r -ls -wd $jiangeshu 0 0 ;\n}\ndelete moduan;select oya;\nprint \"jiangelot(kazu)\";\n}\n//////////////////////\nglobal proc dingzhongxin(){//定中心\nstring $selrigs[]=`ls-sl`;\nCreateLocator;outlinecolor(101);\nrename (\"X_\"+$selrigs[0]);\ngaimingzi(\"ding_\");\nstring $lottt[]=`ls-sl`;\nselect $selrigs $lottt[0];\nduochongcon(1);\nselect -cl;\n}\n//////////////////////\n\n\n//////////////////////\nglobal proc zhuandongzhiding(){\nwindow -title \"zengzhi\";\ncolumnLayout;\nintField -v 1 -w 90 INT_FIELD_zhuandongzhidingwin;\nbutton -w 200 -l \"    <     -||+    >    \" -c zhuandongzhidingGO;\nshowWindow;\n}zhuandongzhiding;\n\nglobal proc zhuandongzhidingGO(){\nint $moveshu2=`intField -query -value INT_FIELD_zhuandongzhidingwin`; \nstring $wsel0[]=`ls-sl`;\nduplicate -rr;\nstring $wsel1[]=`ls-sl`;\nint $dd=getAttr ($wsel1[0]+\".ry\");\nfor($aa in `ls-sl`){\nsetAttr ($aa+\".rotateY\") ($dd+$moveshu2);\n}\n}\n//////////////////////\n\n" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "CP" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "CP" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "CPobj" 
        -sourceType "mel" 
        -doubleClickCommand "//http://onogu.blog85.fc2.com/blog-entry-12.html\nQA_QuickCons" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "group" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "group" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "グループ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "doGroup 0 1 1;" 
        -sourceType "mel" 
        -doubleClickCommand "doGroup 0 1 0;\n" 
        -commandRepeatable 1
        -flat 1
        -mi "GetFormGroup1  add親group" ( "GetFormGroup1;" )
        -mi "GetFormGroup2  add子group" ( "GetFormGroup2;" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Retarget" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Retarget" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "retarget" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "render_addMatrix.png" 
        -image1 "render_addMatrix.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "//hone>rig Retarget用//sel 骨+リグ>go\nglobal proc retargetC(){\nif(size(`ls-sl`)!=0){\nstring $seltwo[]=`ls-sl`;\nselect $seltwo[0];pickWalk -d down;\nstring $aimlot[]=`ls-sl`;\nselect $seltwo[0] $aimlot[0];\nautoaddaimlot;//<<<autoshoulder\nparent locator_Ttive locator_Vtive $seltwo[0];\nselect -r locator_Ttive $seltwo[1];\naimConstraint -mo -weight 1 -aimVector 1 0 0 -upVector 0 1 0 \n-worldUpType \"object\" -worldUpObject locator_Vtive;\nrename \"locator_Vtive\" (\"T_\"+$seltwo[0]);\nrename \"locator_Ttive\" (\"V_\"+$seltwo[0]);\nselect $seltwo;\n}}retargetC;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "ネームスペース エディタ" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "ネームスペース エディタ" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ネエ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "NamespaceEditor;\n//PrefixHierarchyNames;\n\n\n\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "gaimingzi(new+moto)__lishigai(new+moto)_後台mel" ( "global proc gaimingzi(string $newname){\nglobal string $newname;\nstring $sentaku[]=`ls-sl -tr`;\nint $kazu=`size($sentaku)`;\nint $x;\nfor ($x=0;$x<$kazu;$x++){\nstring $namae=$newname+$sentaku[$x];\nrename $sentaku[$x] $namae;\n}print \"gaimingzi(new+moto)\\n\";\n}\n//////////\nglobal proc lishigai(string $str){\n//int $ran = rand(66);\nglobal string $newname;\n$newname=$str;\nstring $dangqiansel[]=`ls-sl`;\nSelectHierarchyson;reNamespace;//<<<<<<<<<<new\ngaimingzi($newname+\"_\");//gaimingzi($newname+\"_\"+$ran);\nprint \"lishigai(new+moto)\\n\";\n}\n//////////\nglobal proc reNamespace(){\nstring $nameList[] = `ls -sl`;\nstring $bufs[], $localName, $newName;int $size;\nfor($name in $nameList){\n$size = tokenize($name,\"|\",$bufs);\n$localName = $bufs[$size-1];\n$size = `tokenize $localName \":\" $bufs`;\n$newName = $bufs[$size-1];\nrename $name $newName;\n$nameList = `ls -sl`;\n}}\n\n" )
        -mi "//reNamespace" ( "reNamespace;" )
        -mi "----------" ( "" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "EP カーブ ツール" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "EP カーブ ツール" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "curveEP.png" 
        -image1 "curveEP.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "changeSelectMode -object;\n//string $selcv[] = `ls -sl -dag`;\n//select ($selcv[1] + \".cv[*]\");\nSelectCurveCVsAll;" 
        -sourceType "mel" 
        -doubleClickCommand "curve -n \"curve\" -d 3 -p 0 0 0 -p 0 0 10 -p 0 0 20 -p 0 0 30 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 ;\nCurveOperation threekeyadd;CurveOperation2 seleminmax;A_11a;" 
        -commandRepeatable 1
        -flat 1
        -mi "trail_curve" ( "global proc motionTrailToCurve(){\n\t$selected=`ls -dag -et snapshotShape`;\n\tfor ($obj in $selected) {\n\t$pts=(getAttr($obj+\".pts\"));\n\t$size=size($pts);\n\t$curve=`curve -d 1 -p $pts[0] $pts[1] $pts[2] -p $pts[4] $pts[5] $pts[6] -k 0 -k 1`;\n\tfor($i=8;$i<$size;$i+=4)\n\tcurve -os -a -p $pts[$i] $pts[$i+1] $pts[$i+2] $curve ;\n\t}\n}motionTrailToCurve;\n\n//(zengfen0.1)>geng ruan hua de guiji>geng ruan hua de curve\n" )
        -mi "selrig_trail_curve" ( "ld_animToCurve;\n//http://ldunham.blogspot.jp/2012/02/mel-ldanimtocurve-create-nurbs-curve.html\n//ld_animToCurve.mel+getfacecenters.py\n" )
        -mi "curve_joint_py" ( "#Joint On Curve\nimport maya.cmds as mc\nimport re\n\n#recuperation des curves et du nombre de joints voulut\nsel =mc.ls(sl=True)\nif sel == []:\n    mc.confirmDialog(title='No selection', message='you must select curve(s)', button=['OK'], defaultButton='OK' )\nelse:\n    chaine = \"\"\n    expression = r\"^[0-9]+$\"\n    while re.search(expression,chaine) is None:\n        prompt = mc.promptDialog(\n        title=\"Joint On Curve\",\n    \tmessage =\"number of bones -1\",\n    \tbutton=['OK','Cancel'],\n    \tdefaultButton=\"OK\",\n    \tdismissString='Cancel')\n        if prompt == \"OK\":\n            chaine = mc.promptDialog(query=True, text=True)\n        elif prompt == \"Cancel\":\n            chaine = \"0\"  \n    if chaine == \"0\":\n        print(\"operation annule\")\n    else:            \n        chaine = int(chaine)        \n#Creation des CVs dup\n\nfor elt in sel:\n    mc.duplicate(elt, n= elt+\"NewCurveTemp\")\n    mc.rebuildCurve(elt+\"NewCurveTemp\", ch=False, rpo=True, rt=False, end=True, kr=False, kcp=False, kep=True, kt=True, s=chaine, d=3, tol=0.01)\n    mc.rebuildCurve(elt+\"NewCurveTemp\", ch=True, rpo=True, rt=False, end=True, kr=False, kcp=False, kep=True, kt=False, s=0, d=3, tol=0.01)  \n    ep = chaine+1\n    #ep = chaine\n    i=0\n    SK = []\n    CL = []\n    while ep>0:\n        mc.select(elt+\"NewCurveTemp.ep[\"+str(i)+\"]\")\n        mc.cluster(name=\"CL_Temp_\"+str(i))\n        CL.append(\"CL_Temp_\"+str(i)+\"Handle\")\n        pos = mc.xform(\"CL_Temp_\"+str(i)+\"Handle\", query=True, rp=True, ws=True)\n        mc.select(clear=True)\n        mc.joint(p=(pos[0],pos[1],pos[2]), name=\"SK_joc_\"+elt+\"_\"+str(i))   \n        SK.append(\"SK_joc_\"+elt+\"_\"+str(i)) \n        ep-=1\n        i+=1   \n    i-=1              \n    while \"SK_joc_\"+elt+\"_\"+str(i) != \"SK_joc_\"+elt+\"_0\":\n        mc.parent(\"SK_joc_\"+elt+\"_\"+str(i),\"SK_joc_\"+elt+\"_\"+str(i-1))\n        i-=1\n    mc.joint(\"SK_joc_\"+elt+\"_0\", e=True, oj=\"xyz\", secondaryAxisOrient=\"yup\", ch=True, zso=True)    \n    mc.delete(CL)\n    mc.delete(elt+\"NewCurveTemp\")\nmc.select(clear=True)    " )
        -mip 2
        -mi "curve_joint_後台mel" ( "print \"jointoncurve(kazu,`curveName`)\";\n\nglobal proc jointoncurve(int $gushu,string $curvening){//curve>joint\n//string $selecurve[]=`ls-sl`;\n$curveName=$curvening;\n////int $jointNum=`intField -q -value newV`;//ding dian\nint $jointNum=$gushu;\n$jointName=\"piaopiaogu\";\n  float $cvLength = `arclen $curveName`;\n  float $setLength = $cvLength / ($jointNum - 1);\n  \n  //joint作成\n  select -cl;\n  string $jName[];\n \n  for($i = 1 ; $i <= $jointNum ; $i++){\n    $jName[size($jName)] = `joint -n ($jointName + $i)`;\n    setAttr ($jName[size($jName)-1] + \".translateX\") $setLength;\n  }\n  //curveに沿ったJoint作成\n  select -r $jName[0] $jName[size($jName)-1] $curveName;\n  \n  string $ikHandle[] = `ikHandle -sol ikSplineSolver -ccv false -pcv false -ns 3`;\n  refresh;\n  delete $ikHandle[1];\n  //return $jName;\n}\n" )
        -mi "add mid joint" ( "jgSplitJointChainW;\n\n" )
        -mi "add mid joint_後台mel" ( "print \"SplitJointChain(kazu)\";\n\nglobal proc SplitJointChain(int $numJnts){\nstring $joints[] = `ls -sl` ;\t\nstring $parentt = $joints[0] ;\nstring $childd = $joints[1] ;\n$numJnts++ ;\nfloat $pPos[] = `joint -q -p $parentt` ;\nfloat $cPos[] = `joint -q -p $childd` ;\n\t\t// Parent Orientation\n\t\tstring $ro = `joint -q -roo $parentt` ;\n\t\tstring $sao = \"yup\" ;\n\t\t// Unparent Child\n\t\tparent -w $childd ;\n\t\t// Vector\n\t\tfloat $jointVector[] ;\n\t\t$jointVector[0] = ($cPos[0]-$pPos[0])/$numJnts;\n\t\t$jointVector[1] = ($cPos[1]-$pPos[1])/$numJnts;\n\t\t$jointVector[2] = ($cPos[2]-$pPos[2])/$numJnts;\n\t\tselect -cl ;\n\t\tstring $lastJntCreated = $parentt ;\n\t\tstring $newJnts[] ;\n\t\tfor($i = 1; $i < $numJnts; $i++) {\n\t\t\t// Create Joint\n\t\t\tstring $jnt = `joint -p ($pPos[0]+($i*$jointVector[0])) ($pPos[1]+($i*$jointVector[1])) ($pPos[2]+($i*$jointVector[2]))` ;\n\t\t\tif($i == 1) parent $jnt $parentt ;\n\t\t\t$lastJntCreated = $jnt ;\n\t\t}\n\t\tparent $childd $lastJntCreated ;\n\t\tjoint -e -oj $ro -secondaryAxisOrient yup -ch -zso $parentt ;\n}" )
        -mi "Cluster" ( "//ClusterCurve;\njpAutoClusterCurveson;" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "skeletonDialogItem" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "skeletonDialogItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "j-fk" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "kinJoint.png" 
        -image1 "kinJoint.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "if(size(`ls-sl`)==0){\njoint -p 0 0 0;\n}else{\nfor($a in `ls-sl`){\nselect $a;\njoint -p 0 0 0;\n}\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "selJoint>size _後台mel" ( "global proc alljontradius(float $radius){\nif(size(`ls-sl`)!=0){\n    if(size( `ls -sl -type joint -dag` ) <= 0){\n//-dagをつけることにより、階層の選択をしなくても、選択した階層以下のオブジェクトをリストとして返してくれる\n        print(\"ボーンは含まれていない\");\n    }else{\n        print(\"選択以下の階層にはボーンが　\" + size(`ls -sl -type joint -dag`) + \"　本含まれているなり\");\n        select `ls -sl -type joint -dag`;\n    }\n\nstring $selj[]=`ls-sl`;\nint $seljsize =`size($selj)`;\n for ($y = 0;$y < $seljsize; $y++){\n  setAttr ($selj[$y] + \".radius\") $radius;  \n }\nselect $selj;\n}else{/*--*/}\n}alljontradius(0.01);\nprint \"alljontradius(x);\";\n\n\n\n/*-//test onlyjoinsele\nstring $sel[]=`ls -sl`;\nstring $jointsOnly[];clear $jointsOnly;\nfor($node in $sel){\n    if(`nodeType $node` == \"joint\") {\n       $jointsOnly[size($jointsOnly)] = $node;\n    }\n}select $jointsOnly;\n-*/" )
        -mi "seleall gu" ( "select `ls -type joint`;" )
        -mi "FK make" ( "createFKControl" )
        -mi "----------------------------" ( "" )
        -mi "sel Joint > ジョイント方向0" ( "for($aa in `ls-sl`){\nsetAttr ($aa+\".jointOrientX\") 0;\nsetAttr ($aa+\".jointOrientY\") 0;\nsetAttr ($aa+\".jointOrientZ\") 0;\n}\n\n" )
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Jointorient" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Jointorient" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "orientJoint.png" 
        -image1 "orientJoint.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "OrientJointOptions;\n" 
        -sourceType "mel" 
        -doubleClickCommand "global proc joriwindow(){\nwindow;\nint $width1 = 130;\nint $width2 = 70;\ncolumnLayout;\n\t        frameLayout -cl 1 -cll 0 -lv 0 -l \"\";\n\t            columnLayout -adj true;\n\t                separator -st none -h 3;\n\t                radioButtonGrp -nrb 3\n\t                               -l \"Aim Axis\"\n\t                               -l1 \"X\"\n\t                               -l2 \"Y\"\n\t                               -l3 \"Z\"\n\t                               -cw4 $width1 $width2 $width2 $width2\n\t                               -sl 1\n\t                               Custom_aimRadio;\n\t                separator -st none -h 3;\n\t            setParent..;\n\t        setParent..;\n\t        separator -st none -h 10;\n\t        frameLayout -cl 1 -cll 0 -lv 0 -l \"\";\n\t            columnLayout -adj true;\n\t                separator -st none -h 3;\n\t                radioButtonGrp -nrb 3\n\t                               -l \"Up Axis\"\n\t                               -l1 \"X\"\n\t                               -l2 \"Y\"\n\t                               -l3 \"Z\"\n\t                               -cw4 $width1 $width2 $width2 $width2\n\t                               -sl 2\n\t                               Custom_upRadio;\n\t\t                separator -st none -h 3;\n\t                radioButtonGrp -nrb 3\n\t                               -l \"Up Direction\"\n\t                               -l1 \"World X\"\n\t                               -l2 \"World Y\"\n\t                               -l3 \"World Z\"\n\t                               -cw4 $width1 $width2 $width2 $width2\n\t                               -sl 3\n\t                               Custom_directionRadio;\n\t                separator -st none -h 3;\n\t                checkBoxGrp -l \"Inverse Up Direction\"\n\t                            -ncb 1\n\t                            -v1 0\n\t                            -cw2 $width1 $width2\n\t                            Custom_inverseCheck;\n\t                separator -st none -h 3;\n\t            setParent..;\n\t                button -h 25 -w 70 -l \"go\" -c jointori;\n\t        setParent..;\n\t    setParent..;\nshowWindow;\n}joriwindow;\n//\nglobal proc jointori(){\n\tstring $sel[] = `ls -sl -l`;\n\tstring $type[] = `ls -showType $sel[0]`;\n\tif(!`size $sel`)error \"Fix Joint Orient Error : No joint node is selected. Please select one joint node.\";\n\telse if(`size $sel` != 1) error \"Fix Joint Orient Error : Too much objects are selected. Please select one joint node.\";\n\telse if($type[1] != \"joint\")error \"Fix Joint Orient Error : Selected object is not joint node. Please select one joint node.\";\n\tint $aim = `radioButtonGrp -q -sl Custom_aimRadio`;\n\tint $up = `radioButtonGrp -q -sl Custom_upRadio`;\n\tint $dir = `radioButtonGrp -q -sl Custom_directionRadio`;\n\tint $inverse = `checkBoxGrp -q -v1 Custom_inverseCheck`;\n\tif($aim == $up)error \"Fix Joint Orient Error : Aim Axis and Up Axis must not be same value. Please change the option.\";\n\tfloat $aimVec[];\n\tswitch($aim){\n\t    case 1:\n\t        $aimVec[0] = 1;\n\t        $aimVec[1] = 0;\n\t        $aimVec[2] = 0;\n\t        break;\n\t    case 2:\n\t        $aimVec[0] = 0;\n\t        $aimVec[1] = 1;\n\t        $aimVec[2] = 0;\n\t        break;\n\t    case 3:\n\t        $aimVec[0] = 0;\n\t        $aimVec[1] = 0;\n\t        $aimVec[2] = 1;\n\t        break;\n\t}\n\n\tfloat $upVec[];\n\tswitch($up){\n\t    case 1:\n\t        $upVec[0] = 1;\n\t        $upVec[1] = 0;\n\t        $upVec[2] = 0;\n\t        break;\n\t    case 2:\n\t        $upVec[0] = 0;\n\t        $upVec[1] = 1;\n\t        $upVec[2] = 0;\n\t        break;\n\t    case 3:\n\t        $upVec[0] = 0;\n\t        $upVec[1] = 0;\n\t        $upVec[2] = 1;\n\t        break;\n\t}\n\tfloat $dirVec[];\n\tswitch($dir){\n\t    case 1:\n\t        $dirVec[0] = 100;\n\t        $dirVec[1] = 0;\n\t        $dirVec[2] = 0;\n\t        break;\n\t    case 2:\n\t        $dirVec[0] = 0;\n\t        $dirVec[1] = 100;\n\t        $dirVec[2] = 0;\n\t        break;\n\t    case 3:\n\t        $dirVec[0] = 0;\n\t        $dirVec[1] = 0;\n\t        $dirVec[2] = 100;\n\t        break;\n\t}\n\tif($inverse){\n\t    $dirVec[0] = $dirVec[0] * (-1);\n\t    $dirVec[1] = $dirVec[1] * (-1);\n\t    $dirVec[2] = $dirVec[2] * (-1);\n\t}\n\tstring $locShape = `createNode locator`;\n\tstring $locTrans[] = `listRelatives -p $locShape`;\n\tstring $loc = `rename $locTrans[0] \"fixJointLocator\"`;\n\tstring $allChildJoints[] = `listRelatives -f -type \"joint\" -ad $sel[0]`;\n\tstring $allJoints[] = stringArrayCatenate($sel , $allChildJoints);\n\t//print $allJoints;\n\tfor($current in $allJoints){\n\t    string $currentChild[] = `listRelatives -f -type \"joint\" -c $current`;\n\t    string $currentChildShort[] = `listRelatives -type \"joint\" -c $current`;\n\t    if(`size $currentChild` == 1){\n\t        select -r $currentChild[0];\n\t        parent -w $currentChild[0];\n\t        string $tokenized[];\n\t        int $tokenizeNum = `tokenize $currentChild[0] \"|\" $tokenized`;\n\t        string $currentWorldChild = \"|\" + $tokenized[$tokenizeNum-1];\n\t        string $child[] = `ls -sl -l`;\n\t        string $emptyTrans[];\n\t        if($child[0] != $currentWorldChild){\n\t            string $trans[] = `listRelatives -f -p $child[0]`;\n\t            $emptyTrans[0] = $trans[0];\n\t        }\n\t        setAttr ($current + \".jointOrientX\") 0;\n\t        setAttr ($current + \".jointOrientY\") 0;\n\t        setAttr ($current + \".jointOrientZ\") 0;\n\t        float $jointPos[] = `xform -q -ws -t $current`;\n\t        xform -ws -t $jointPos[0] $jointPos[1] $jointPos[2] $loc;\n\t        float $jointRot[] = `xform -q -ws -ro $current`;\n\t        xform -ws -ro $jointRot[0] $jointRot[1] $jointRot[2] $loc;\n\t        move -r -ws $dirVec[0] $dirVec[1] $dirVec[2] $loc;\n\t        string $constraint[] = `aimConstraint -aim $aimVec[0] $aimVec[1] $aimVec[2]\n\t                                              -u $upVec[0] $upVec[1] $upVec[2]\n\t                                              -wut \"object\"\n\t                                              -wuo $loc\n\t                                              $child[0]\n\t                                              $current`;\n\t        delete $constraint[0];\n\t        float $rot[] = `getAttr ($current + \".rotate\")`;\n\t        setAttr ($current + \".rotateX\") 0;\n\t        setAttr ($current + \".rotateY\") 0;\n\t        setAttr ($current + \".rotateZ\") 0;\n\t        setAttr ($current + \".jointOrientX\") $rot[0];\n\t        setAttr ($current + \".jointOrientY\") $rot[1];\n\t        setAttr ($current + \".jointOrientZ\") $rot[2];\n\t        parent $child[0] $current;\n\t        if(`objExists $emptyTrans[0]`)delete $emptyTrans[0];\n\t    }\n\t}\n\tfor($current in $allJoints){\n\t    string $currentChild[] = `listRelatives -f -type \"joint\" -c $current`;\n\t    if(`size $currentChild` > 1){\n\t        int $childNum = `size $currentChild`;\n\t        string $child[];\n\t        string $emptyTrans[];\n\t        int $n = 0;\n\t        for($now in $currentChild){\n\t            select -r $now;\n\t            parent -w $now;\n\t            string $tokenized[];\n\t            int $tokenizeNum = `tokenize $now \"|\" $tokenized`;\n\t            $currentWorldChild = \"|\" + $tokenized[$tokenizeNum-1];\n\t            string $childTest[] = `ls -sl -l`;\n\t            $child[$n] = $childTest[0];\n\t            $n++;\n\t            string $emptyTrans[];\n\t            if($child[0] != $currentWorldChild){\n\t                string $trans[] = `listRelatives -f -p $child[0]`;\n\t                $emptyTrans[0] = $trans[0];\n\t            }\n\t        }\n\t        setAttr ($current + \".jointOrientX\") 0;\n\t        setAttr ($current + \".jointOrientY\") 0;\n\t        setAttr ($current + \".jointOrientZ\") 0;\n\t        float $jointPos[] = `xform -q -ws -t $current`;\n\t        xform -ws -t $jointPos[0] $jointPos[1] $jointPos[2] $loc;\n\t        float $jointRot[] = `xform -q -ws -ro $current`;\n\t        xform -ws -ro $jointRot[0] $jointRot[1] $jointRot[2] $loc;\n\t        move -r -ws $dirVec[0] $dirVec[1] $dirVec[2] $loc;\n\t        string $constraint[] = `aimConstraint -aim $aimVec[0] $aimVec[1] $aimVec[2]\n\t                                              -u $upVec[0] $upVec[1] $upVec[2]\n\t                                              -wut \"object\"\n\t                                              -wuo $loc\n\t                                              $child[0]\n\t                                              $current`;\n\t        delete $constraint[0];\n\t        float $rot[] = `getAttr ($current + \".rotate\")`;\n\t        setAttr ($current + \".rotateX\") 0;\n\t        setAttr ($current + \".rotateY\") 0;\n\t        setAttr ($current + \".rotateZ\") 0;\n\t        setAttr ($current + \".jointOrientX\") $rot[0];\n\t        setAttr ($current + \".jointOrientY\") $rot[1];\n\t        setAttr ($current + \".jointOrientZ\") $rot[2];\n\t        for($now in $child){\n\t            parent $now $current;\n\t        }\n\t        if(`objExists $emptyTrans[0]`)delete $emptyTrans[0];\n\t    }\n\t}\n\tfor($current in $allJoints){\n\t    string $currentChild[] = `listRelatives -f -type \"joint\" -c $current`;  \n\t    if(!`size $currentChild`){\n\t        string $parentJoint[] = `listRelatives -f -p $current`;\n\t        float $parentRot[] = `xform -q -ws -ro $parentJoint[0]`;\n\t        setAttr ($current + \".jointOrientX\") 0;\n\t        setAttr ($current + \".jointOrientY\") 0;\n\t        setAttr ($current + \".jointOrientZ\") 0;\n\t        xform -ws -ro $parentRot[0] $parentRot[1] $parentRot[2] $current;\n\t        /*\n\t        setAttr ($current + \".rotateX\") $parentRot[0];\n\t        setAttr ($current + \".rotateY\") $parentRot[1];\n\t        setAttr ($current + \".rotateZ\") $parentRot[2];\n\t        */\n\t    }\n\t}\n\tdelete $loc;\n\tselect -r $sel[0];\n}\n" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "iktool" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "iktool" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "IKHandleToolOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "PoleVectorConstraintHelp" ( "global proc PoleVectorConstraintHelp(){\n//sel IK/joint/pvRig>go\nstring $ik_zhoujoint_pvrig[]=`ls-sl`;\nselect $ik_zhoujoint_pvrig[0];\ngetPoleVector;\nPickWalkDown;\nstring $curveshape[]=`ls-sl`;\n\nshadingNode -asUtility decomposeMatrix;\nrename ($ik_zhoujoint_pvrig[1]+\"decomposeMatrix\");\nshadingNode -asUtility decomposeMatrix;\nrename ($ik_zhoujoint_pvrig[2]+\"decomposeMatrix\");\n\nconnectAttr -f ($ik_zhoujoint_pvrig[1]+\".worldMatrix[0]\") ($ik_zhoujoint_pvrig[1]+\"decomposeMatrix\"+\".inputMatrix\");\nconnectAttr -f ($ik_zhoujoint_pvrig[1]+\"decomposeMatrix\"+\".outputTranslate\") ($curveshape[0]+\".controlPoints[0]\");\n//\nconnectAttr -f ($ik_zhoujoint_pvrig[2]+\".worldMatrix[0]\") ($ik_zhoujoint_pvrig[2]+\"decomposeMatrix\"+\".inputMatrix\");\nconnectAttr -f ($ik_zhoujoint_pvrig[2]+\"decomposeMatrix\"+\".outputTranslate\") ($curveshape[0]+\".controlPoints[1]\");\n}PoleVectorConstraintHelp;\n\n/////////////////////////\n\n//Create a curve from the IK Vector, so an PoleVector can be place.\n//Select IK, run the script, Build Guide Curve to place the PoleVector node\nglobal proc getPoleVector(){\n\tstring $Ik[0]=`ls -sl -type \"ikHandle\"`;//Select IK\n\t\tif (!`size($Ik)`) { print \"Select IK First!!!!!!!!\\n\"; return; }\t\n\tstring $StartJoint[0]=`listConnections -d off -s on ($Ik[0]+\".startJoint\")`;\n\tfloat $StartJointPos[2]=`joint -q -p $StartJoint[0]`;\n\t// Get IK PoleVector value multiply by 10.\n\tfloat $PoleVector[2];\n\t$PoleVector[0]=(`getAttr ($Ik[0]+\".poleVectorX\")`*40);\n\t$PoleVector[1]=(`getAttr ($Ik[0]+\".poleVectorY\")`*40);\n\t$PoleVector[2]=(`getAttr ($Ik[0]+\".poleVectorZ\")`*40);\n\t// Create Curve\t\t\n\tcurve -d 1 -p $StartJointPos[0] $StartJointPos[1] $StartJointPos[2]\n\t\t-p ($PoleVector[0]+$StartJointPos[0]) ($PoleVector[1]+$StartJointPos[1]) ($PoleVector[2]+$StartJointPos[2])\n\t\t-k 0 -k 1 -n ($Ik[0]+\"_PoleCurve\");\n}" )
        -mi "------------" ( "" )
        -mi "shenzhan IK" ( "import maya.mel as mm\nmm.eval(\"ak_makeStretchyIK\")" )
        -mip 2
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "handleSplineDialogItem" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "handleSplineDialogItem" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "kinSplineHandle.png" 
        -image1 "kinSplineHandle.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "IKSplineHandleToolOptions;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "トランスフォームのフリーズ オプション" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "identityApplyItemOption" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "トオ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "FreezeTransformationsOptions" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    mennuu
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "springson(0^1,0.*)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "absolute.png" 
        -image1 "absolute.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "//springson_zaicijisuan(sele骨、再計算)(loopONOFF,計算値)\nglobal proc SSon_zaicijisuan3(float $setc){\nstring $selmubiao[]=`ls-sl`;BaseAnimationsel;select $selmubiao;SetKeyRotate;keyboard_CSAs;makeAnimationlayer;fpsjinggao;\n    string $check = `confirmDialog -title \"0/1\"\n                                   -message \"  ループ？\"\n                                   -button \"Yes\"\n                                   -button \"No\"\n                                   -button \"tiaoguo\"\n                                   -defaultButton \"Yes\"\n                                   -cancelButton \"No\"\n                                   -dismissString \"OO\"\n                                   -icon \"information\"`;\nfor($aaaaa in `ls-sl`){select $aaaaa;GoToMinFrame;\nif($check == \"Yes\"){springson(1,$setc);}else if($check == \"No\"){springson(0,$setc);}//else if($check == \"Eulerfilter\"){}\n}rename AnimLayerXXX_ (\"JJJisuan_0\"+ $setc*10);///\n}//SSon_zaicijisuan3(0.9)\n////////\nglobal proc springson(int $loop,float $gangrou){\nkakusiONs;\nif($loop==1){\nspson($gangrou);\ntimeSliderCopyKey;\nGoToMinFrame;\ntimeSliderPasteKey false;\nspson($gangrou);\n}else{\nspson($gangrou);\n}kakusiOFFs;\n}//springson(*,0.*);\n////////\nglobal proc spson(float $gr){\nglobal string $selobj[];\nglobal int $selshu;\nglobal int $sttime;\nglobal int $edtime;son;\nglobal float $Axyz[];\nglobal float $Bxyz[];\nglobal float $Zxyz[];\nint $a;int $g;\nfor($g=0;$g<$selshu;$g++){\nfor($a=0;$a<($edtime-$sttime);$a++){\ncurrentTime ($sttime+$a);\nselect $selobj[$g];SetKeyRotate;\nPickWalkDown;\nstring $ko[]=`ls-sl`;select $ko;\nGetFormLocator2;rename \"Ls\";//zuo ding dianA\n$Axyz=`xform -a -q -ws -m $selobj[$g]`;///qu de vector///\n//////\nNextFrame;\nselect $selobj[$g];\nCurveOperation Rzero;SetKeyRotate;\nselect $ko;\nGetFormLocator2;rename \"Le\";//zuo ding dianB\n$Bxyz=`xform -a -q -ws -m $selobj[$g]`;///qu de vector///\nfloat $Oxyz[];///vector///\n$Oxyz[0]=$Axyz[4]*(1-$gr)+$Bxyz[4]*$gr;\n$Oxyz[1]=$Axyz[5]*(1-$gr)+$Bxyz[5]*$gr;\n$Oxyz[2]=$Axyz[6]*(1-$gr)+$Bxyz[6]*$gr;//空間suan fa\n//\naimConstraint -weight (1-$gr) -aimVector 1 0 0 \n-upVector 0 1 0 -worldUpType \"vector\" -worldUpVector $Oxyz[0] $Oxyz[1] $Oxyz[2] Ls $selobj[$g];\naimConstraint -weight $gr -aimVector 1 0 0 \n-upVector 0 1 0 -worldUpType \"vector\" -worldUpVector $Oxyz[0] $Oxyz[1] $Oxyz[2] Le $selobj[$g];\n//\nselect $selobj[$g];SetKeyRotate;\ndelete Ls Le;\n}\n}select $selobj;\n}//#loop機能X,DefPoseSet可能,allJsel>stat   vector算法=3.0ver\n//http://www.not-enough.org/abe/manual/maya/howto-use/mel-howto-use9.html\n//http://hesperas.blog134.fc2.com/blog-entry-258.html\n//$Zxyz=`xform -a -q -ws -t $ko`;//CreateLocator;rename \"shan\";//xform -ws -t $Zxyz[0] $Zxyz[1] $Zxyz[2];\n///////////////////////////////////" 
        -sourceType "mel" 
        -doubleClickCommand "print \"●SSon_Rig_lian_selD(0,1,1,1.5,0.5,0);///SSon_Rig_dan2(1,2,0.6)(軸方向 1>X -1>-X,頭尾lot位移,計算値,loop);///SSon_Rig_addSplineRigD(0,-1,1,50,5)(軸組合 1>Xyz 2>xyZ 3>xYz,x_oya位置,y_spRig数888|99|3|4|...);\";\n/////////////////////////// sel Rig群>GO春\n//(1)$atama0/1頭lot有無add\n//(2)$xyzA 軸組合A<針対錬来言\n//(3)$xyzB 軸組合B<針対錬来言\n//(4)$touwei 頭尾lot位移値\n//(5)$sssss 0>tiaoguo///0.3..>計算値\n//(6)$AC    0>C_lian    1>I_lian)\nglobal proc SSon_Rig_lian_selD(int $atama,int $xyzA,int $xyzB,float $touwei,float $ss,int $AC){\nstring $selmanto[]=`ls-sl`;\nselect $selmanto;addlotbake;string $selmantolot[]=`ls-sl`;\nstring $nameee=$selmanto[0];\nif($atama==1){\nselect $selmanto[0];GoToMinFrame;GetFormLocator2;rename \"Axx\";\n     if($xyzA==1){move -r -os -wd ($touwei*-1) 0 0 ;}//X -方向\nelse if($xyzA==2){move -r -os -wd 0 ($touwei*-1) 0 ;}//Y -方向\nelse if($xyzA==3){move -r -os -wd 0 0 ($touwei*-1) ;}//Z -方向\nelse if($xyzA==-1){move -r -os -wd ($touwei*1) 0 0 ;}//X +方向\nelse if($xyzA==-2){move -r -os -wd 0 ($touwei*1) 0 ;}//Y +方向\nelse if($xyzA==-3){move -r -os -wd 0 0 ($touwei*1) ;}//Z +方向\nselect $selmanto[0] Axx;addbake;\nselect $selmanto;danxuanlast;GetFormLocator2;rename \"Bxx\";\n     if($xyzB==1){move -r -os -wd ($touwei*1) 0 0 ;}//X +方向\nelse if($xyzB==2){move -r -os -wd 0 ($touwei*1) 0 ;}//Y +方向\nelse if($xyzB==3){move -r -os -wd 0 0 ($touwei*1) ;}//Z +方向\nelse if($xyzB==-1){move -r -os -wd ($touwei*-1) 0 0 ;}//X -方向\nelse if($xyzB==-2){move -r -os -wd 0 ($touwei*-1) 0 ;}//Y -方向\nelse if($xyzB==-3){move -r -os -wd 0 0 ($touwei*-1) ;}//Z -方向\n}\nif($atama==1){select Axx $selmanto Bxx;}else{select $selmanto;}\nif($AC==0){springsetA(1);}else if($AC==1){springsetC(1);}\nif(`objExists Axx`){delete Axx Bxx;}//else{delete Bxx;}\n\nfor($mb=0; $mb < (size($selmanto)); $mb++){///gulian+anime\nselect $selmanto[$mb];\nfoundconsaki;pickWalk -d up;\nstring $selgu[]=`ls-sl`;\nselect $selmantolot[$mb] $selgu[0];\norientConstraint -mo -weight 1;//putongcon(11);\nselect $selgu[0];sonbakeO;foundconmubiao;delete;\nselect $selmantolot[$mb];delete;\n}\n//\nselect $selmanto[0];foundconsaki;pickWalk -d up;pickWalk -d up;SelectHierarchy;outlinecolor(110);\ngaimingzi \"A_\";searchReplaceNames \"A_\" $nameee \"hierarchy\";\nif($atama==1){select $selmanto;foundconsaki;PickWalkUp;}\nelse{select $selmanto;sunxujiaohuan;zhugejianxuan;zhugejianxuan;foundconsaki;PickWalkUp;}\nmakeAnimationlayer;\nstring $seljisuangu[]=`ls-sl`;\n//\npickWalk -d up;pickWalk -d up;pickWalk -d up;pickWalk -d up;pickWalk -d up;\nstring $seljisuangutop[]=`ls-sl`;\n////////////////////////////////////\n//select $seljisuangu;danxuanlast;select -add $seljisuangutop[0];GetFormLocator2;outlinecolor(110);\nselect $selmanto;\ndanxuanlast;select -add $selmanto[0];\nglobal int $gulishu;global float $dist;\nGetFormLocator2;guliGet;print ($gulishu+\"__________TTT PVV____________<<<\"+$dist);delete;\nselect $seljisuangutop[0];rataterigbianmove2($dist*2,$xyzA*1);///\nselect $seljisuangutop[0];LtW_point;\nselect $seljisuangutop[0];GetFormLocator3;rename \"biaojiii\";///\n/*-select \"*_conSOMaim\";pickWalk -d right;foundconsaki;\npickWalkUp;string $selTT[]=`ls-sl`;\nselect \"*_conSOMaim\";pickWalk -d right;pickWalk -d right;foundconsaki;\npickWalkUp;string $selVV[]=`ls-sl`;\nselect $selTT $selVV;\ncurrentTime (`playbackOptions -q -minTime`-5);SetKeyAnimated;GoToMinFrame;-*/\n////////////////////////////////////jointsize\nselect $selmanto;\ndanxuanlast;select -add $selmanto[0];\nglobal int $gulishu;global float $dist;\nGetFormLocator2;guliGet;print ($gulishu+\"__________joint size____________>>>\"+$dist);delete;\nfloat $touweijuli=$dist/(`size $selmanto`)/2;\nselect $seljisuangutop[0];alljontradius($touweijuli);\n////////////////////////////////////\nif($ss!=0){select $seljisuangu;SSon_zaicijisuan3($ss);//springson($oi,$ss);\n}\nanimLayer -edit -mute 1 AnimLayerXXX_;animLayer -edit -lock true AnimLayerXXX_;\nrename AnimLayerXXX_ \"Riglian_chun_\";\n//newlayeulerfilter;//<<CSAs\n\n//select $seljisuangutop[0];lishigai(\"\");lishigai(\"\");\nif(`objExists \"Axx_*\"`){\nselect \"Axx_*\";//SelectHierarchy;\nint $quebie=rand(9);gaimingzi(\"G_\"+$quebie);select -cl;\n}\n}//SSon_Rig_lian_selD(0,1,1,0.3,0.5,1);\n\n\n//////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////\n//選Rig>go(Rig単)(軸方向 XYZ,lot位移,計算値)\nglobal proc SSon_Rig_dan3(int $xyzzhou,int $setBa,float $setBb){\nstring $selmono[]=`ls-sl`;\nfor($selll in $selmono){GoToMinFrame;\nselect $selll;GetFormLocator2;rename \"Bxx\";\n     if($xyzzhou==1){move -r -os -wd ($setBa*1) 0 0 ;}\nelse if($xyzzhou==2){move -r -os -wd 0 ($setBa*1) 0 ;}\nelse if($xyzzhou==3){move -r -os -wd 0 0 ($setBa*1) ;}\nelse if($xyzzhou==-1){move -r -os -wd ($setBa*-1) 0 0 ;}\nelse if($xyzzhou==-2){move -r -os -wd 0 ($setBa*-1) 0 ;}\nelse if($xyzzhou==-3){move -r -os -wd 0 0 ($setBa*-1) ;}\nselect $selmono Bxx;\nspringsetB;\nselect -r Bxx ;\npickWalk -d right;pickWalk -d down;pickWalk -d right;\n//SSon_zaicijisuan3($setBb);//springson(0,$setBb);\n//makeAnimationlayer;//rename AnimLayerXXX_ dan___;\ndelete Bxx;\n}GoToMinFrame;\n}//SSon_Rig_dan3(2,5,0.3);\n//////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////\n//splineIK////////////////////////sel Rig群>GO\n//(1)$touwei+lot OnOff\n//(2)$xyzA 軸組合A<針対錬来言\n//(3)$xyzB 軸組合B<針対錬来言\n//(4)$touwei 頭尾lot位移値\n//(5)$shuliang spRig数|3|4|5|9|888|)//99はx\nglobal proc SSon_Rig_addSplineRigD(int $touweiOnOff,int $xyzA,int $xyzB,float $touwei,int $shuliang){\nstring $nameget[]=`ls-sl`;\nif($touweiOnOff==1){\nstring $selmanto[]=`ls-sl`;\nselect $selmanto[0];GoToMinFrame;GetFormLocator2;string $Axxx[]=`ls-sl`;outlinecolor(001);//rename \"Axx\";\n   if($xyzA==1){move -r -os -wd ($touwei*-1) 0 0 ;}//X -方向\nelse if($xyzA==2){move -r -os -wd 0 ($touwei*-1) 0 ;}//Y -方向\nelse if($xyzA==3){move -r -os -wd 0 0 ($touwei*-1) ;}//Z -方向\nelse if($xyzA==-1){move -r -os -wd ($touwei*1) 0 0 ;}//X +方向\nelse if($xyzA==-2){move -r -os -wd 0 ($touwei*1) 0 ;}//Y +方向\nelse if($xyzA==-3){move -r -os -wd 0 0 ($touwei*1) ;}//Z +方向\nselect $selmanto[0] $Axxx[0];addbake;\nselect $selmanto;danxuanlast;GetFormLocator2;string $Bxxx[]=`ls-sl`;outlinecolor(001);//rename \"Bxx\";\n   if($xyzB==1){move -r -os -wd ($touwei*1) 0 0 ;}//X +方向\nelse if($xyzB==2){move -r -os -wd 0 ($touwei*1) 0 ;}//Y +方向\nelse if($xyzB==3){move -r -os -wd 0 0 ($touwei*1) ;}//Z +方向\nelse if($xyzB==-1){move -r -os -wd ($touwei*-1) 0 0 ;}//X -方向\nelse if($xyzB==-2){move -r -os -wd 0 ($touwei*-1) 0 ;}//Y -方向\nelse if($xyzB==-3){move -r -os -wd 0 0 ($touwei*-1) ;}//Z -方向\n\nselect $selmanto;danxuanlast;select -add $Bxxx[0];addbake;\nselect $Axxx[0] $selmanto $Bxxx[0];\n\nstring $selriglianb[]=`ls-sl`;\nselect $selriglianb[0];oyasele;\nselect $selriglianb;select -tgl $selriglianb[0];\nkosele;addnewrig_autoXP($shuliang);\n}else if($touweiOnOff==0){\nstring $selriglianb[]=`ls-sl`;\nselect $selriglianb[0];oyasele;\nselect $selriglianb;select -d $selriglianb[0];kosele;\naddnewrig_autoXP($shuliang);\n}\nselect -r X_rolltwist X_curveXiaoJie;\npickWalk -d up;SelectHierarchy;outlinecolor(110);alljontradius(0.08);\nselect -r X_rolltwist X_curveXiaoJie;gaimingzi ($nameget[0]+\"_\");\nselect \"*xiaojie*clusterHandle_*\";\nsearchReplaceNames \"xiaojie\" $nameget[0] \"hierarchy\";\nselect -r -ne start;delete;\nglobal string $skirt0[];clear $skirt0;\nglobal string $skirt1[];clear $skirt1;\n}\n\n/////////////////////////////////作Animationlayer\nglobal proc makeAnimationlayer(){////sele All joint>Go\nstring $rigsss[]=`ls-sl`;\nanimLayer  AnimLayerXXX;\nanimLayer -e -addSelectedObjects AnimLayerXXX;\nanimLayerEditorOnSelect \"AnimLayerXXX\" 1;\nstring $seLayer = \"AnimLayerXXX\"; /*--*/animationlayerweight(\"AnimLayerXXX\");\nif(size($seLayer)){\n\tstring $animLayers[] = `ls -type \"animLayer\"`;\n\tfor($i=0;$i<size($animLayers);$i++){\n\t\tanimLayerEditorOnSelect($animLayers[$i], 0);}\n\tanimLayerEditorOnSelect($seLayer, 1);}\nSetKeyRotate;\nrename AnimLayerXXX AnimLayerXXX_;\n//layselobj;\nselect $rigsss;BaseAnimationsel;//keyboard_CSAs;\nanimLayerEditorOnSelect \"BaseAnimation\" 0;\nanimLayerEditorOnSelect(\"AnimLayerXXX_\", 1);\nselect $rigsss;\n}//makeAnimationlayer;\n\nglobal proc animationlayerweight(string $mingzi){\nkakusiONs;\nGoToMinFrame;setKeyframe ($mingzi+\".weight\");\n//PreviousTime;PreviousTime;PreviousTime;PreviousTime;PreviousTime;\n//setKeyframe ($mingzi+\".weight\");\nGoToMaxFrame;setKeyframe ($mingzi+\".weight\");\n//NextTime;NextTime;NextTime;NextTime;NextTime;NextTime;\n//setKeyframe ($mingzi+\".weight\");GoToMinFrame;\nkakusiOFFs;}\n//////////////////ju li Get\nglobal proc guliGet(){\nglobal int $gulishu;\nglobal float $dist;\nstring $name[] = `ls -sl`;\nfloat $obj1X = getAttr ($name[0] + \".tx\");\nfloat $obj1Y = getAttr ($name[0] + \".ty\");\nfloat $obj1Z = getAttr ($name[0] + \".tz\");\nfloat $obj2X = getAttr ($name[1] + \".tx\");\nfloat $obj2Y = getAttr ($name[1] + \".ty\");\nfloat $obj2Z = getAttr ($name[1] + \".tz\");\nvector $obj1Vec = <<$obj1X, $obj1Y,$obj1Z>>;\nvector $obj2Vec = <<$obj2X, $obj2Y,$obj2Z>>;\nvector $distVec = $obj1Vec - $obj2Vec;\nfloat $dist = `mag $distVec`;\n$gulishu=$dist;\nprint (\"float\"+$dist + \"\\n\");\nprint (\"int\"+$gulishu + \"\\n\");\n}//guliGet;\n//////////////////fps check\nglobal proc fpsjinggao(){\nstring $timeUnit=`currentUnit -q -t`;\nfloat $fps = 0.0;\nif ($timeUnit == \"game\") $fps = 15.0;\nelse if ($timeUnit == \"ntsc\") $fps = 30.0;\nelse if ($timeUnit == \"ntscf\") $fps = 60.0;\nelse if (`gmatch $timeUnit \"*fps\"`) {\n    string $cleanUnit = `substituteAllString $timeUnit \"fps\" \"\"`;\n    $fps = float($cleanUnit);\n}print (\"現在のFPSは: \" + $fps + \" fps\\n\");\nif ($fps == 60.0){\n    confirmDialog -title \"FPS警告\" \n                  -message \"現在FPSは>60<!!!\\n注意注意!\" \n                  -button \"OK\" \n                  -defaultButton \"OK\";\n}}//fpsjinggao;\n//////////////////tiaosel\nglobal proc tiaodian(int $geshu){\nstring $allSelected[] = `ls -sl`;\nstring $filtered[];\nfor($i=0;$i<size($allSelected);$i+=$geshu){\n$filtered[size($filtered)] = $allSelected[$i];\n}select -r $filtered;\n}\n//////////////////fps/2\nglobal proc tiaozhen(){\nif(`currentUnit -q -t`== \"ntscf\"){currentUnit -time \"ntsc\";// 60 → 30\n}else if(`currentUnit -q -t`== \"ntsc\"){currentUnit -time \"game\";// 30 → 15\n}}" 
        -commandRepeatable 1
        -flat 1
        -mi "//Tanhuang" ( "//python \"import secondary_animation_v7_1;reload(secondary_animation_v7_1)\";(python2Modeでしか起動できない)\n//cmds.rowColumnLayout( numOfColumns=1)　＞＞＞　cmds.rowColumnLayout( numberOfColumns=1 ) 441 hang\n//一定要随時譲粒子維持在顕示的状態\n//重畳度小<<Overlap>>重畳度大    <<<運動量保存値 0.5-1\n//平滑小<< Weight >>平滑大      <<<ゴール　ウェイト[0] 0.5-1\nglobal proc overlapsonA(){\nstring $selmoto[]=`ls-sl`;showONFF(99);GoToMinFrame;\nselect $selmoto[0];\naddlotbake;rename \"overlapsetA\";\nstring $seltarget[]=`ls-sl`;\n\nfloat $conserve = 1.0;\nstring $particleName[] = `particle -p 0 0 0 -c $conserve -n (\"overlapsetB\"+\"_temp_particle\")`;\nstring $selparticleee[]=`ls-sl`;\nsetAttr ($selparticleee[0]+\".particleRenderType\") 4;\nsetAttr ($selparticleee[0]+\".conserve\") 0.9;//運動量保存  AAA\n\nselect -add $seltarget[0];MatchTranslation;\ngoal -w 0.6 -g $seltarget[0] $selparticleee[0];\n\nselect $seltarget[0];addlot;rename \"overlapsetC\";foundconmubiao;delete;\nconnectAttr ($selparticleee[0] + \".cachedWorldCentroid\") (\"overlapsetC\" + \".translate\");\n\nsetAttr ($selparticleee[0]+\".goalSmoothness\") 3;//ゴール位置に収まるまでの平滑性　越大越柔軟 aaa\nsetAttr ($selparticleee[0]+\".goalWeight[0]\") 0.55;//ゴール ウェイト　元の動きに従う度　越大越一様 BBB bbb\n//select \"overlapsetC\" $selmoto[0];putongcon(0);select $selmoto[0];\nselect $selmoto[0] \"overlapsetC\" ;\n}\n\nglobal proc overlapsonB(){\n    string $selection[] = `ls -sl`;\n    string $source = $selection[0];\n    string $target = $selection[1];\n    int $startFrame = `playbackOptions -q -min`;\n    int $endFrame = `playbackOptions -q -max`;\nGoToMinFrame;\nselect $selection[0];\nstring $layer_name = \"AnimLayerZZ\";\nanimLayer AnimLayerZZ;\nsetAttr AnimLayerZZ.rotationAccumulationMode 0;\nsetAttr AnimLayerZZ.scaleAccumulationMode 1;\nanimLayer -edit -override 1 AnimLayerZZ;\nanimLayer -e -addSelectedObjects AnimLayerZZ;\nanimLayerEditorOnSelect \"BaseAnimation\" 0;\nanimLayerEditorOnSelect($layer_name, 1);\nselect $selection;\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++){\n        currentTime $frame;\n        //float $pos[] = `xform -q -ws -t $target`;\n        //xform -ws -t $pos[0] $pos[1] $pos[2] $source;\n        MatchTranslation($source, $target);\n        setKeyframe -at \"translateX\" $source;\n        setKeyframe -at \"translateY\" $source;\n        setKeyframe -at \"translateZ\" $source;\n    }print (\"完\" + $startFrame + \" f-- \" + $endFrame + \" f\\n\");\nif(`objExists overlapsetB_temp_particle`){\ndelete overlapsetA overlapsetB_temp_particle overlapsetC;}\nrename AnimLayerZZ overlapson0;\n//he bing_merge\nanimLayerEditorOnSelect \"BaseAnimation\" 1;\nanimLayerMerge( `ls -type animLayer` );\nselect -cl;select $selection[0];BaseAnimationsel;//showchwork(0);\n}\n\nproc delayedCommand(){overlapsonB;}\n//timerX -st true;//タイマー開始\nproc checkTimer(){//時間チェック用の再帰関数\n    float $elapsed = `timerX`;\n    if ($elapsed >= 30.0) {\n        evalDeferred(\"delayedCommand();\");\n    } else {\n        evalDeferred(\"checkTimer();\");\n    }\n}\n\nglobal proc ovberlapsonW(){\nif(`window -ex OL` == true )deleteUI OL;\nwindow -t \"ovberlapson\" -w 50 -h 100 OL;columnLayout;\nrowLayout -nc 10 -cw2 10 20;\nbutton -l \"__onebyone__sel_go__\" -c \"overlapsonA;timerX -st true;checkTimer;\";\nbutton -l \"  stepA  \" -c overlapsonA;\nbutton -l \"  stepB  \" -c overlapsonB;\nsetParent ..;showWindow OL;\n}ovberlapsonW;\n\n/*-global proc overlapsonB(){  <<<unresolved\nbakeResults \n    -simulation true\n    -sampleBy 1\n    -time (`playbackOptions -q -min` + \":\" + `playbackOptions -q -max`)\n    -disableImplicitControl true\n    -preserveOutsideKeys true\n    -sparseAnimCurveBake false\n    -shape true\n    -bakeOnOverrideLayer true\n    -destinationLayer $layer_name\n    $TEST[0];\nrename AnimLayerZZ gailayname;\n}overlapsonB;-*/" )
        -mi "------" ( "" )
        -mi "    //expression_test        //sel zhu+bei_GO   bei>need removeNamespace" ( "global proc jiandandong2(int $Txyz,int $Oxyz,int $ofse,float $beishu){///sel moto+mubiao GO\n//powは最初の引数を 2 番目の引数で累乗し、その結果を返します\nstring $zhoux;string $zhouy;string $zhouz;string $tttx;string $ttty;string $tttz;string $TO;\nstring $sell[]=`ls-sl`;GoToMinFrame;\nselect $sell[0];addlot;outlinecolor(100);\nstring $zhu[]=`ls-sl`;\nCreateLocator;outlinecolor(100);\nstring $bei[]=`ls-sl`;\nsetAttr ($zhu[0]+\".visibility\") 0;setAttr ($bei[0]+\".visibility\") 0;\nif($Txyz==1 && $Oxyz==0){//T\n$zhoux = \".translateX\";$zhouy = \".translateY\";$zhouz = \".translateZ\";\n$tttx = \".tx\";$ttty = \".ty\";$tttz = \".tz\";$TO =\"T-T\";\n}else if($Txyz==0 && $Oxyz==1){//O\n$zhoux = \".rotateX\";$zhouy = \".rotateY\";$zhouz = \".rotateZ\";\n$tttx = \".rx\";$ttty = \".ry\";$tttz = \".rz\";$TO =\"O-O\";\n}//$ofse=1;$beishu=1.1;print $zhu[0];\nexpression -s (\"int $OSF =\"+$ofse+\";\\nfloat $SVS = \"+$beishu+\";\\nfloat $AVS = 1;\\n\"+$bei[0]+$zhoux+\" = (`getAttr -t (frame-($OSF*1)) |\"+$zhu[0]+$tttx+\"`)*$AVS*(`pow $SVS 1`); \\n\"+$bei[0]+$zhouy+\" = (`getAttr -t (frame-($OSF*1)) |\"+$zhu[0]+$ttty+\"`)*$AVS*(`pow $SVS 1`); \\n\"+$bei[0]+$zhouz+\" = (`getAttr -t (frame-($OSF*1)) |\"+$zhu[0]+$tttz+\"`)*$AVS*(`pow $SVS 1`);\")  -o \"\" -n ($sell[1]+\"_\"+$TO) -ae 1 -uc all ;\nif($Txyz==1 && $Oxyz==0){select $bei[0] $sell[1];originnone;putongcon(0); }\nelse if($Txyz==0 && $Oxyz==1){select $bei[0] $sell[1];originnone;putongcon(10);}\nselect $sell[1];ExpressionEditor;\n}\n///////////////////\nproc gengxin(int $Txyzs,int $Oxyzs){\nstring $mubiao[]=`ls-sl`;GoToMinFrame;\nselect $mubiao[0];foundconsaki;pickWalk -d up;pickWalk -d up;\nstring $consaki[]=`ls-sl`;\npickWalk -d down;pickWalk -d right;delete;\nselect $consaki[0] $mubiao[0];originnone;\nif($Txyzs==1 && $Oxyzs==0){putongcon(0);}else if($Txyzs==0 && $Oxyzs==1){putongcon(10);}\n}\n///////////////////\nglobal proc powWindow(){\nif(`window -ex Powwork` == true )deleteUI Powwork;\nwindow -t \"Powwork\" -w 50 -h 100 Powwork;\ncolumnLayout;\nrowLayout -nc 10 -cw2 10 20;\ntext -label \"---sel A+B go---\";\nbutton -l \"   T   \" -c \"jiandandong2(1,0,1,1.3);\";\nbutton -l \"   O   \" -c \"jiandandong2(0,1,1,1.3);\";\nsetParent ..;\nrowLayout -nc 10 -cw2 10 20;\ntext -label \"---EE xiugaihou---\";\nbutton -l \"sel B tiao T\" -c \"gengxin(1,0);\";\nbutton -l \"sel B tiao O\" -c \"gengxin(0,1);\";\nsetParent ..;\nshowWindow Powwork;\n}powWindow;" )
        -mi "------" ( "" )
        -mi "////springFollowson Translate  //sel zhu+bei   stepB" ( "global proc springFollowson(){\n    string $sel[] = `ls -sl`;\n    if (size($sel) != 2) {error \"...............................\";}\nkakusiONs;\n    string $driver = $sel[0]; \n    string $follower = $sel[1];\n    string $strengthCtrl = \"strength_ctrl\";\n\n    float $startFrame = `playbackOptions -q -min`;\n    float $endFrame = `playbackOptions -q -max`;\n\n    float $driverPos[] = `xform -q -ws -t $driver`;\n    float $followerPos[] = `xform -q -ws -t $follower`;\n\n    float $dx = $driverPos[0] - $followerPos[0];\n    float $dy = $driverPos[1] - $followerPos[1];\n    float $dz = $driverPos[2] - $followerPos[2];\n    float $initialDistance = `mag <<$dx, $dy, $dz>>`;\n\n    for ($frame = $startFrame; $frame <= $endFrame; $frame++) {\n        currentTime $frame;\n\n        float $strength = `getAttr ($strengthCtrl + \".translateY\")`;\n\n        float $driverPos[] = `xform -q -ws -t $driver`;\n        float $followerPos[] = `xform -q -ws -t $follower`;\n\n        float $dx = $driverPos[0] - $followerPos[0];\n        float $dy = $driverPos[1] - $followerPos[1];\n        float $dz = $driverPos[2] - $followerPos[2];\n        float $length = `mag <<$dx, $dy, $dz>>`;\n\n        if ($length == 0) continue;\n\n        float $nx = $dx / $length;\n        float $ny = $dy / $length;\n        float $nz = $dz / $length;\n\n        float $newX = $driverPos[0] - $nx * $initialDistance * (1 - $strength);\n        float $newY = $driverPos[1] - $ny * $initialDistance * (1 - $strength);\n        float $newZ = $driverPos[2] - $nz * $initialDistance * (1 - $strength);\n\n        xform -ws -t $newX $newY $newZ $follower;\n\n        setKeyframe -at \"translateX\" $follower;\n        setKeyframe -at \"translateY\" $follower;\n        setKeyframe -at \"translateZ\" $follower;\n    }kakusiOFFs;\n}springFollowson;" )
        -mi "            |_createStrengthCtrl___1>0>-xx      stepA" ( "global proc createStrengthCtrl(){\n    string $ctrlArray[] = `spaceLocator -name \"strength_ctrl\"`;\n    string $ctrl = $ctrlArray[0];\n    xform -ws -t 0 5 0 $ctrl;\n    setKeyframe -at \"translateY\" -t `playbackOptions -q -min` -v 0.1 $ctrl;\n    setKeyframe -at \"translateY\" -t `playbackOptions -q -max` -v 0.9 $ctrl;\n    // アニメーションカーブをスムーズに補間\n    selectKey ($ctrl + \".translateY\");\n    keyTangent -itt \"spline\" -ott \"spline\";outlinecolor(100);\n}createStrengthCtrl;\n\n//制御用ロケータ名,1に近いほど、参照位置に重合する、0近いほど前の位置にキープする\n//             負数値が大きいほど、参照位置に離れる\n\n//gulian運用注意事項：koはltw必要,tanhuangと合併運用すべき" )
        -mi "------" ( "" )
    ;

} 
